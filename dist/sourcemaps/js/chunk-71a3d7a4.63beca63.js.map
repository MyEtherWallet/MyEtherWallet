{"version":3,"sources":["webpack:///./src/dapps/MakerDai/makerHelpers/locateCdps.js","webpack:///./src/dapps/MakerDai/makerHelpers/addressesMAIN.js","webpack:///./src/dapps/MakerDai/MakerCDP/constants.js","webpack:///./src/dapps/MakerDai/MakerCDP/daiMath.js","webpack:///./src/dapps/MakerDai/MakerCDP/MakerCdpBase.js","webpack:///./src/dapps/MakerDai/MakerCDP/MakerCDP.js","webpack:///./src/dapps/MakerDai/MakerCDP/index.js","webpack:///./src/dapps/MakerDai/makerHelpers/setups.js","webpack:///./src/dapps/MakerDai/makerHelpers/currencyHelper.js","webpack:///./src/dapps/MakerDai/makerHelpers/ABIs/migrateABI.js","webpack:///./src/dapps/MakerDai/makerHelpers/ABIs/ERC20Token.abi.js","webpack:///./src/dapps/MakerDai/makerHelpers/ABIs/GetCdps.js","webpack:///./src/dapps/MakerDai/makerHelpers/ABIs/ProxyRegistry.js","webpack:///./src/dapps/MakerDai/makerHelpers/ABIs/DssCdpManager.js","webpack:///./src/dapps/MakerDai/makerHelpers/ABIs/Spotter.js","webpack:///./src/dapps/MakerDai/makerHelpers/ABIs/Vat.js","webpack:///./src/dapps/MakerDai/makerHelpers/helpers.js","webpack:///./src/dapps/MakerDai/MakerCDP/chainCalls.js","webpack:///./src/dapps/MakerDai/makerHelpers/chainCalls.js"],"names":["locateCdps","self","cdpsWithoutProxy","cdps","proxyAddress","getCdpIds","web3","allCdpIds","map","entry","id","cdpIdToTypeMapping","reduce","acc","cur","ilk","cdpsWithType","withType","withProxy","withoutProxy","DEPLOYER","MULTICALL","FAUCET","MCD_DEPLOY","MCD_GOV","MCD_ADM","MCD_VAT","MCD_JUG","MCD_CAT","MCD_VOW","MCD_JOIN_DAI","MCD_FLAP","MCD_FLOP","MCD_PAUSE","MCD_PAUSE_PROXY","MCD_GOV_ACTIONS","MCD_DAI","MCD_SPOT","MCD_POT","MCD_END","MCD_ESM","PROXY_ACTIONS","PROXY_ACTIONS_END","PROXY_ACTIONS_DSR","CDP_MANAGER","GET_CDPS","PROXY_FACTORY","PROXY_REGISTRY","ETH","VAL_ETH","PIP_ETH","MCD_JOIN_ETH_A","MCD_FLIP_ETH_A","BAT","VAL_BAT","PIP_BAT","MCD_JOIN_BAT_A","MCD_FLIP_BAT_A","SAI","PIP_SAI","MCD_JOIN_SAI","MCD_FLIP_SAI","PROXY_PAUSE_ACTIONS","PROXY_DEPLOYER","SAI_TUB","MIGRATION","MIGRATION_PROXY_ACTIONS","defaultIlk","BigNumber","USD","createCurrency","DAI","BnZero","collateralValue","collateralAmount","price","times","debtValue","art","rate","wei","shiftedBy","collateralizationRatio","eq","ratio","createCurrencyRatio","Infinity","div","_amount","liquidationPrice","liquidationRatio","type","minSafeCollateralAmount","toBigNumber","num","MakerCdpBase","cdpId","services","sysVars","this","cdpIdFull","cdp","ready","doUpdate","noProxy","cdpType","needsUpdate","closing","opening","migrated","migrateCdpActive","migrateCdpStage","cdpTypeObject","_mcdManager","get","getCdpType","mcdCurrencies","_liqPrice","isSafe","_collatRatio","pethCollateral","_usdCollateral","_governanceFee","tokenMapping","i","_typeService","cdpTypes","length","currency","symbol","name","override","afterInitialization","amount","toUsd","currentPrice","lt","toFixed","ROUND_DOWN","replace","address","cdpCollateralType","toString","_collateralAmount","e","_collateralAvailable","collateralAvailable","_collateralizationRatio","gte","plus","lte","_collateralValue","daiMath","value","_debtValue","_cdpService","getTokens","daiBalance","dustValues","ethPrice","_ethCollateral","tokens","hasProxy","liquidationPenalty","rawType","mcdManager","_liquidationRatio","Object","keys","_liquidationPrice","maxDai","minus","pethPrice","zeroDebt","maxPethDraw","pethMin","tl","tr","toUSD","_mkrToken","mkrBalance","minEth","_proxyAddress","_proxyService","proxyAllowances","_pethPrice","baseStabilityFee","annualStabilityFee","_tokenService","wethToPethRatio","ethCollateral","val","isBigNumber","toNumber","raw","decimals","round","displayFixedValue","MakerCDP","minDaiValue","dust","console","error","dustpolling","DAI_NAME","contractAddresses","addresses","checker","setInterval","clearInterval","updateValues","getGovernanceFee","toUpdate","getProxy","getMakerCdp","getValuesFromChain","getUrns","urns","ink","proxyService","currentProxy","cdpService","give","approveUnlimited","daiToken","mkrToken","ethQty","daiQty","getPriceOfCurrency","calcCollatRatio","changeAmountOnly","calcLiquidationPrice","getProxyAddress","push","denominator","pow","enoughMkrToWipe","getCombinedDebtValue","balances","contract","eth","Contract","ERC20","methods","allowance","currentAddress","call","getEventHistory","curr","balance","isNaN","_ethQty","ethUnit","toWei","getBalanceOf","currentAllowance","getProxyAllowancefor","convertToTokenWei","minDai","bnOver","minDeposit","getCurrentPriceFor","toPeth","ensureProxy","needToFinishMigrating","openLockAndDraw","getMakerCurrencies","newCdp","getOwner","owner","lock","acknowledgeBypass","gt","drawDai","freeCollateral","max","wipeAll","wipeDai","shutProxy","log","proxy","giveToProxy","ServiceRoles","PRICE","CDP","PROXY","TOKEN","CDP_TYPE","AUCTION","SYSTEM_DATA","QUERY_API","SAVINGS","setupServices","maker","Promise","all","service","result","_systemData","_mcdSaving","setupPriceAndRatios","_priceService","getAnnualBaseRate","stabilityFee","getDetailsForTokens","collateralTokens","token","getToken","then","res","getDustValues","getDustValue","checkAllowances","_contract","collateralOptions","setupCdpManage","includes","activeValues","systemValues","currentCdpId","getValuesForManage","bind","currentCdp","activeCdps","maxEthDraw","maxUsdDraw","usdCollateral","collateralRatio","collatRatio","governanceFeeOwed","ethCollateralNum","loadCdpDetails","buildCdpObject","loadCdpDetail","updateActiveCdp","removeObject","hasOwnProperty","currentCdpIds","newCdps","filter","item","newCdpsWithoutProxy","removedCdps","parseInt","forEach","buildEmpty","options","useOld","_targetPrice","_daiToken","account","priceService","makerCDP","init","Toast","afterClose","afterOpen","$route","checkBalances","idProp","update","updateSystemVariables","setupCdpManageFunc","runAfterUpdate","afterUpdate","fn","pop","creatingCdp","goToManage","goToSave","gotoCreate","responseHandler","$t","INFO","valuesUpdated","Maker","vals","TKNS","constant","inputs","outputs","internalType","payable","stateMutability","anonymous","indexed","bignumber","displayFixed","displayPercentValue","finiteCheck","roundUp","isFinite","ROUND_UP","displayFixedPercent","CdpNum","undefined","one","two","three","getInt","atValue","padRight","string","chars","sign","Array","join","toHex","str","with0x","rightPadding","charCodeAt","stringToBytes","Buffer","from","Vat","ilks","CdpManager","vat","urn","bytesToString","hex","GetCdps","getCdpsDesc","results","ids","assert","collected","index"],"mappings":"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","file":"js/chunk-71a3d7a4.63beca63.js","sourcesContent":["import { toChecksumAddress } from '@/helpers/addressUtils';\r\nimport { getCdpIds } from './chainCalls';\r\n\r\nasync function locateCdps(self) {\r\n  self.cdpsWithoutProxy = [];\r\n  self.cdps = [];\r\n  let cdps = [];\r\n  if (self.proxyAddress) {\r\n    cdps = await getCdpIds(self.web3, self.proxyAddress);\r\n  }\r\n\r\n  self.allCdpIds = [...cdps].map(entry =>\r\n    typeof entry !== 'number' ? entry.id : entry\r\n  );\r\n\r\n  const cdpIdToTypeMapping = [...cdps].reduce((acc, cur) => {\r\n    acc[cur.id] = cur.ilk;\r\n    return acc;\r\n  }, {});\r\n  self.cdpsWithType = cdpIdToTypeMapping;\r\n  return {\r\n    withType: cdpIdToTypeMapping,\r\n    withProxy: cdps.map(entry =>\r\n      typeof entry !== 'number' ? entry.id : entry\r\n    ),\r\n    withoutProxy: []\r\n  };\r\n}\r\n\r\n// async function locateOldCdps(self, _cdpService) {\r\n//   self.cdpsWithoutProxy = [];\r\n//   const cdpsWithoutProxy = await locateCdpsWithoutProxy(self, _cdpService);\r\n//   self.cdps = [];\r\n//   let cdps = [];\r\n//   if (self.proxyAddress) {\r\n//     cdps = await locateCdpsProxy(self, _cdpService);\r\n//   }\r\n//\r\n//   self.allCdpIds = [...cdpsWithoutProxy, ...cdps].map(entry =>\r\n//     typeof entry !== 'number' ? entry.id : entry\r\n//   );\r\n//\r\n//   const cdpIdToTypeMapping = [...cdpsWithoutProxy, ...cdps].reduce(\r\n//     (acc, cur) => {\r\n//       acc[cur.id] = cur.ilk;\r\n//       return acc;\r\n//     },\r\n//     {}\r\n//   );\r\n//   self.cdpsWithType = cdpIdToTypeMapping;\r\n//   return {\r\n//     withType: cdpIdToTypeMapping,\r\n//     withProxy: cdps.map(entry =>\r\n//       typeof entry !== 'number' ? entry.id : entry\r\n//     ),\r\n//     withoutProxy: cdpsWithoutProxy.map(entry =>\r\n//       typeof entry !== 'number' ? entry.id : entry\r\n//     )\r\n//   };\r\n// }\r\n\r\nasync function locateCdpsWithoutProxy(self, _cdpService) {\r\n  const directCdps = await _cdpService.getCdpIds(self.account.address);\r\n  const directCdpsCheckSum = await _cdpService.getCdpIds(\r\n    toChecksumAddress(self.account.address)\r\n  );\r\n  return directCdps.concat(directCdpsCheckSum);\r\n}\r\n\r\nasync function locateCdpsProxy(self, _cdpService) {\r\n  self.proxyAddress = await self.getProxy();\r\n  return await _cdpService.getCdpIds(self.proxyAddress);\r\n}\r\n\r\nexport { locateCdps, locateCdpsWithoutProxy, locateCdpsProxy };\r\n","export default {\r\n  DEPLOYER: '0xdDb108893104dE4E1C6d0E47c42237dB4E617ACc',\r\n  MULTICALL: '0x5e227ad1969ea493b43f840cff78d08a6fc17796',\r\n  FAUCET: '0x0000000000000000000000000000000000000000',\r\n  MCD_DEPLOY: '0xbaa65281c2fa2baacb2cb550ba051525a480d3f4',\r\n  MCD_GOV: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2',\r\n  MCD_ADM: '0x9eF05f7F6deB616fd37aC3c959a2dDD25A54E4F5',\r\n  MCD_VAT: '0x35d1b3f3d7966a1dfe207aa4514c12a259a0492b',\r\n  MCD_JUG: '0x19c0976f590d67707e62397c87829d896dc0f1f1',\r\n  MCD_CAT: '0x78f2c2af65126834c51822f56be0d7469d7a523e',\r\n  MCD_VOW: '0xa950524441892a31ebddf91d3ceefa04bf454466',\r\n  MCD_JOIN_DAI: '0x9759a6ac90977b93b58547b4a71c78317f391a28',\r\n  MCD_FLAP: '0xdfe0fb1be2a52cdbf8fb962d5701d7fd0902db9f',\r\n  MCD_FLOP: '0xbe00fe8dfd9c079f1e5f5ad7ae9a3ad2c571fcac',\r\n  MCD_PAUSE: '0xbe286431454714f511008713973d3b053a2d38f3',\r\n  MCD_PAUSE_PROXY: '0xbe8e3e3618f7474f8cb1d074a26affef007e98fb',\r\n  MCD_GOV_ACTIONS: '0x4f5f0933158569c026d617337614d00ee6589b6e',\r\n  MCD_DAI: '0x6b175474e89094c44da98b954eedeac495271d0f',\r\n  MCD_SPOT: '0x65c79fcb50ca1594b025960e539ed7a9a6d434a3',\r\n  MCD_POT: '0x197e90f9fad81970ba7976f33cbd77088e5d7cf7',\r\n  MCD_END: '0xab14d3ce3f733cacb76ec2abe7d2fcb00c99f3d5',\r\n  MCD_ESM: '0x0581a0abe32aae9b5f0f68defab77c6759100085',\r\n  PROXY_ACTIONS: '0x82ecd135dce65fbc6dbdd0e4237e0af93ffd5038',\r\n  PROXY_ACTIONS_END: '0x069b2fb501b6f16d1f5fe245b16f6993808f1008',\r\n  PROXY_ACTIONS_DSR: '0x07ee93aeea0a36fff2a9b95dd22bd6049ee54f26',\r\n  CDP_MANAGER: '0x5ef30b9986345249bc32d8928b7ee64de9435e39',\r\n  GET_CDPS: '0x36a724bd100c39f0ea4d3a20f7097ee01a8ff573',\r\n  PROXY_FACTORY: '0xa26e15c895efc0616177b7c1e7270a4c7d51c997',\r\n  PROXY_REGISTRY: '0x4678f0a6958e4d2bc4f1baf7bc52e8f3564f3fe4',\r\n  ETH: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\r\n  VAL_ETH: '0x81fe72b5a8d1a857d176c3e7d5bd2679a9b85763',\r\n  PIP_ETH: '0x81fe72b5a8d1a857d176c3e7d5bd2679a9b85763',\r\n  MCD_JOIN_ETH_A: '0x2f0b23f53734252bda2277357e97e1517d6b042a',\r\n  MCD_FLIP_ETH_A: '0xd8a04f5412223f513dc55f839574430f5ec15531',\r\n  BAT: '0x0d8775f648430679a709e98d2b0cb6250d2887ef',\r\n  VAL_BAT: '0xb4eb54af9cc7882df0121d26c5b97e802915abe6',\r\n  PIP_BAT: '0xb4eb54af9cc7882df0121d26c5b97e802915abe6',\r\n  MCD_JOIN_BAT_A: '0x3d0b1912b66114d4096f48a8cee3a56c231772ca',\r\n  MCD_FLIP_BAT_A: '0xaa745404d55f88c108a28c86abe7b5a1e7817c07',\r\n  SAI: '0x89d24a6b4ccb1b6faa2625fe562bdd9a23260359',\r\n  PIP_SAI: '0x54003dbf6ae6cba6ddae571ccdc34d834b44ab1e',\r\n  MCD_JOIN_SAI: '0xad37fd42185ba63009177058208dd1be4b136e6b',\r\n  MCD_FLIP_SAI: '0x5432b2f3c0dff95aa191c45e5cbd539e2820ae72',\r\n  PROXY_PAUSE_ACTIONS: '0x6bda13d43b7edd6cafe1f70fb98b5d40f61a1370',\r\n  PROXY_DEPLOYER: '0x1b93556ab8dccef01cd7823c617a6d340f53fb58',\r\n  SAI_TUB: '0x448a5065aebb8e423f0896e6c5d525c040f59af3',\r\n  MIGRATION: '0xc73e0383f3aff3215e6f04b0331d58cecf0ab849',\r\n  MIGRATION_PROXY_ACTIONS: '0xe4b22d484958e582098a98229a24e8a43801b674'\r\n};\r\n","import BigNumber from 'bignumber.js';\r\n\r\nexport const ServiceRoles = {\r\n  CDP_MANAGER: 'mcd:cdpManager',\r\n  CDP_TYPE: 'mcd:cdpType',\r\n  AUCTION: 'mcd:auction',\r\n  SYSTEM_DATA: 'mcd:systemData',\r\n  QUERY_API: 'mcd:queryApi',\r\n  SAVINGS: 'mcd:savings'\r\n};\r\n\r\nexport const WAD = new BigNumber('1e18');\r\nexport const RAY = new BigNumber('1e27');\r\nexport const RAD = new BigNumber('1e45');\r\nexport const defaultIlk = 'ETH-A';\r\n\r\nexport const SECONDS_PER_YEAR = 365 * 24 * 60 * 60;\r\n","import BigNumber from 'bignumber.js';\r\nimport { createCurrency, createCurrencyRatio } from '@makerdao/currency';\r\nimport { RAY } from './constants';\r\nconst USD = createCurrency('USD');\r\nconst DAI = createCurrency('DAI');\r\n// NOTE: When a function below has an argument with the same name as a function\r\n// defined earlier in the file, that means it expects that argument's value to\r\n// be the return value of a call to that earlier function.\r\n//\r\n// e.g. the fourth argument of `price`\r\n\r\n// ilk math\r\nconst BnZero = new BigNumber(0);\r\n\r\nexport function debtCeiling(line) {\r\n  return DAI.rad(line);\r\n}\r\n\r\nexport function liquidationPenalty(chop) {\r\n  return new BigNumber(chop.toString()).dividedBy(RAY).minus(1).toNumber();\r\n}\r\n\r\nexport function liquidationRatio(mat) {\r\n  const ratio = createCurrencyRatio(USD, DAI);\r\n  return ratio(new BigNumber(mat.toString()).dividedBy(RAY).toString());\r\n}\r\n\r\nexport function price(currency, par, spot, liquidationRatio) {\r\n  par = new BigNumber(par.toString()).dividedBy(RAY);\r\n  spot = new BigNumber(spot.toString()).dividedBy(RAY);\r\n  const ratio = createCurrencyRatio(USD, currency);\r\n  const price = spot.times(par).times(liquidationRatio.toNumber());\r\n  return ratio(price);\r\n}\r\n\r\nconst secondsPerYear = 60 * 60 * 24 * 365;\r\n\r\nexport function annualStabilityFee(duty) {\r\n  duty = new BigNumber(duty.toString()).dividedBy(RAY);\r\n  BigNumber.config({ POW_PRECISION: 100 });\r\n  return duty.pow(secondsPerYear).minus(1).toNumber();\r\n}\r\n\r\n// cdp math\r\n\r\nexport function collateralAmount(currency, ink) {\r\n  return currency.wei(ink);\r\n}\r\n\r\nexport function collateralValue(collateralAmount, price) {\r\n  return collateralAmount.times(price);\r\n}\r\n\r\nexport function debtValue(art, rate) {\r\n  art = DAI.wei(art);\r\n  return art.times(rate).shiftedBy(-27);\r\n}\r\n\r\nexport function collateralizationRatio(collateralValue, debtValue) {\r\n  if (debtValue.eq(BnZero)) {\r\n    const ratio = createCurrencyRatio(USD, DAI);\r\n    return ratio(Infinity);\r\n  }\r\n  return collateralValue.div(debtValue._amount);\r\n}\r\n\r\nexport function liquidationPrice(\r\n  collateralAmount,\r\n  debtValue,\r\n  liquidationRatio\r\n) {\r\n  if (collateralAmount.eq(BnZero)) {\r\n    const ratio = createCurrencyRatio(USD, collateralAmount.type);\r\n    return ratio(Infinity);\r\n  }\r\n  return debtValue\r\n    .times(liquidationRatio._amount)\r\n    .div(collateralAmount._amount);\r\n}\r\n\r\nexport function minSafeCollateralAmount(debtValue, liquidationRatio, price) {\r\n  return debtValue.times(liquidationRatio).div(price);\r\n}\r\n\r\nexport function daiAvailable(collateralValue, debtValue, liquidationRatio) {\r\n  const maxSafeDebtValue = collateralValue.div(liquidationRatio);\r\n  return debtValue.lt(maxSafeDebtValue)\r\n    ? DAI(maxSafeDebtValue.minus(debtValue))\r\n    : DAI(0);\r\n}\r\n","import BigNumber from 'bignumber.js';\r\nimport { maxPethDraw, maxDai, displayFixedValue } from '../makerHelpers';\r\nimport { defaultIlk } from './constants';\r\n\r\nimport * as daiMath from './daiMath';\r\n\r\nconst toBigNumber = num => {\r\n  return new BigNumber(num);\r\n};\r\n\r\n// Basically just to hold the various getters and static methods to somewhat de-clutter the implementation\r\nexport default class MakerCdpBase {\r\n  constructor(cdpId, web3, services, sysVars) {\r\n    if (cdpId === null) {\r\n      this.cdpId = cdpId;\r\n    } else {\r\n      this.cdpId = typeof cdpId !== 'number' ? cdpId.id : cdpId;\r\n    }\r\n    this.cdpIdFull = cdpId;\r\n    this.cdp = {};\r\n    this.web3 = web3 || {};\r\n    this.ready = false;\r\n    this.doUpdate = 0;\r\n    this.cdps = [];\r\n    this.noProxy = sysVars.noProxy || false;\r\n    this.sysVars = sysVars; // todo make sure this doesn't bring in the issue with vue walking the tree and breaking things\r\n    this.cdpType = this.cdpId ? sysVars.cdpsWithType[this.cdpId] : defaultIlk;\r\n    this.services = services || null;\r\n    this.needsUpdate = false;\r\n    this.closing = false;\r\n    this.opening = false;\r\n    this.migrated = false;\r\n    this.migrateCdpActive = false;\r\n    this.migrateCdpStage = 0;\r\n    this.cdpTypeObject = services._mcdManager\r\n      ? services._mcdManager.get('mcd:cdpType').getCdpType(null, this.cdpType)\r\n      : services.mcdCurrencies['ETH'];\r\n    this._liqPrice = toBigNumber(0);\r\n    this.isSafe = false;\r\n    this._collatRatio = 0;\r\n    this.pethCollateral = toBigNumber(0);\r\n    this._usdCollateral = toBigNumber(0);\r\n    this._governanceFee = toBigNumber(12345);\r\n\r\n    this.tokenMapping = {};\r\n    for (let i = 0; i < services._typeService.cdpTypes.length; i++) {\r\n      this.tokenMapping[services._typeService.cdpTypes[i].currency.symbol] =\r\n        services._typeService.cdpTypes[i];\r\n      this.tokenMapping[services._typeService.cdpTypes[i].currency.name] =\r\n        services._typeService.cdpTypes[i];\r\n    }\r\n\r\n    this.override = {};\r\n    this.afterInitialization = false;\r\n  }\r\n\r\n  // Getters\r\n  get cdpCollateralType() {\r\n    return this.cdpType.replace(/-[A-Z]/, '');\r\n  }\r\n\r\n  get currentAddress() {\r\n    return this.services.address;\r\n  }\r\n\r\n  get currentPrice() {\r\n    return this.mcdCurrencies[this.cdpCollateralType].price._amount.toString();\r\n  }\r\n\r\n  get collatRatio() {\r\n    return this._collatRatio;\r\n  }\r\n\r\n  get collateralAmount() {\r\n    try {\r\n      return this._collateralAmount.toBigNumber();\r\n    } catch (e) {\r\n      return '--';\r\n    }\r\n  }\r\n\r\n  get _collateralAmount() {\r\n    if (this.override['collateralAmount']) {\r\n      return this.override['collateralAmount'];\r\n    }\r\n    return this.cdp.collateralAmount;\r\n  }\r\n\r\n  get collateralAvailable() {\r\n    try {\r\n      return this._collateralAvailable.toBigNumber();\r\n    } catch (e) {\r\n      return '--';\r\n    }\r\n  }\r\n\r\n  get _collateralAvailable() {\r\n    return this.cdp.collateralAvailable;\r\n  }\r\n\r\n  get collateralStatus() {\r\n    if (this._collateralizationRatio.gte(this.liquidationRatio.plus(0.5))) {\r\n      return 'green';\r\n    } else if (\r\n      this._collateralizationRatio.gte(this.liquidationRatio.plus(0.25)) &&\r\n      this._collateralizationRatio.lte(this.liquidationRatio.plus(0.5))\r\n    ) {\r\n      return 'orange';\r\n    }\r\n    return 'red';\r\n  }\r\n\r\n  get collateralValue() {\r\n    try {\r\n      return this._collateralValue.toBigNumber();\r\n    } catch (e) {\r\n      return '--';\r\n    }\r\n  }\r\n\r\n  get _collateralValue() {\r\n    return daiMath.collateralValue(\r\n      this._collateralAmount,\r\n      this.cdpTypeObject.price\r\n    );\r\n  }\r\n\r\n  get collateralizationRatio() {\r\n    try {\r\n      if (this._collateralizationRatio._amount) {\r\n        return this._collateralizationRatio._amount;\r\n      }\r\n      return this._collateralizationRatio.toBigNumber();\r\n    } catch (e) {\r\n      return '--';\r\n    }\r\n  }\r\n\r\n  get _collateralizationRatio() {\r\n    const value = daiMath.collateralizationRatio(\r\n      this._collateralValue,\r\n      this._debtValue\r\n    );\r\n    return value;\r\n  }\r\n\r\n  get cdpService() {\r\n    return this.services._cdpService;\r\n  }\r\n\r\n  get daiToken() {\r\n    return this.getTokens['DAI'];\r\n  }\r\n\r\n  get daiBalance() {\r\n    return this.services.daiBalance;\r\n  }\r\n\r\n  get debtValue() {\r\n    if (this.cdp) {\r\n      try {\r\n        if (this.override['debtValue']) {\r\n          return this._debtValue.toBigNumber();\r\n        }\r\n        return toBigNumber(\r\n          toBigNumber(this._debtValue.toBigNumber()).toFixed(18)\r\n        );\r\n      } catch (e) {\r\n        return '--';\r\n      }\r\n    }\r\n    return toBigNumber(0);\r\n  }\r\n\r\n  get _debtValue() {\r\n    if (this.cdp) {\r\n      if (this.override['debtValue']) {\r\n        return this.override['debtValue'];\r\n      }\r\n      return this.cdp.debtValue;\r\n    }\r\n    return toBigNumber(0);\r\n  }\r\n\r\n  get dustValues() {\r\n    return this.services.dustValues;\r\n  }\r\n\r\n  get ethPrice() {\r\n    return this.services.ethPrice;\r\n  }\r\n\r\n  get ethCollateral() {\r\n    try {\r\n      return this._ethCollateral.toBigNumber();\r\n    } catch (e) {\r\n      return '--';\r\n    }\r\n  }\r\n\r\n  get _ethCollateral() {\r\n    return this._collateralAmount;\r\n  }\r\n\r\n  getCollateralIlk() {\r\n    return this.cdpType;\r\n  }\r\n\r\n  get getTokens() {\r\n    return this.sysVars.tokens;\r\n  }\r\n\r\n  get governanceFeeOwed() {\r\n    return this._governanceFee;\r\n  }\r\n\r\n  get hasProxy() {\r\n    return this.services.hasProxy;\r\n  }\r\n\r\n  get liquidationPenalty() {\r\n    if (this.cdp) {\r\n      if (this.cdp.type) {\r\n        return toBigNumber(this.cdp.type.liquidationPenalty);\r\n      }\r\n    }\r\n    const rawType = this.mcdManager\r\n      .get('mcd:cdpType')\r\n      .getCdpType(null, this.cdpType);\r\n\r\n    return toBigNumber(rawType.liquidationPenalty);\r\n  }\r\n\r\n  get liquidationRatio() {\r\n    return toBigNumber(this._liquidationRatio._amount);\r\n  }\r\n\r\n  get _liquidationRatio() {\r\n    if (Object.keys(this.cdp).length > 0) {\r\n      return this.cdp.type.liquidationRatio;\r\n    }\r\n    const rawType = this.mcdManager\r\n      .get('mcd:cdpType')\r\n      .getCdpType(null, this.cdpType);\r\n    return rawType.liquidationRatio;\r\n  }\r\n\r\n  get liquidationPrice() {\r\n    try {\r\n      return this._liquidationPrice.toBigNumber();\r\n    } catch (e) {\r\n      return '--';\r\n    }\r\n  }\r\n\r\n  get _liquidationPrice() {\r\n    return daiMath.liquidationPrice(\r\n      this._collateralAmount,\r\n      this._debtValue,\r\n      this._liquidationRatio\r\n    );\r\n  }\r\n\r\n  get maxDai() {\r\n    if (\r\n      this.currentPrice &&\r\n      this.collateralAmount &&\r\n      this.liquidationRatio &&\r\n      this.debtValue\r\n    ) {\r\n      return maxDai(\r\n        this.currentPrice,\r\n        this.collateralAmount,\r\n        this.liquidationRatio.plus(0.001),\r\n        this.debtValue\r\n      );\r\n    }\r\n    return toBigNumber(0);\r\n  }\r\n\r\n  get maxEthDraw() {\r\n    return this.collateralAmount.minus(this.minSafeCollateralAmount);\r\n  }\r\n\r\n  get maxPethDraw() {\r\n    if (this.pethPrice && this.pethCollateral && this.liquidationRatio) {\r\n      if (this.zeroDebt) {\r\n        return maxPethDraw(\r\n          this.pethCollateral,\r\n          this.liquidationRatio,\r\n          this.debtValue,\r\n          this.pethPrice,\r\n          this.pethMin.times(0)\r\n        );\r\n      }\r\n      return maxPethDraw(\r\n        this.pethCollateral,\r\n        this.liquidationRatio,\r\n        this.debtValue,\r\n        this.pethPrice\r\n      );\r\n    }\r\n    return toBigNumber(0);\r\n  }\r\n\r\n  get maxDaiDraw() {\r\n    const tl = toBigNumber(this.currentPrice).times(\r\n      toBigNumber(this.collateralAmount)\r\n    );\r\n    const tr = toBigNumber(this.debtValue).times(\r\n      toBigNumber(this.liquidationRatio)\r\n    );\r\n    return tl.minus(tr).div(toBigNumber(this.currentPrice));\r\n  }\r\n\r\n  get maxUsdDraw() {\r\n    return this.toUSD(\r\n      this.collateralAmount.minus(this.minSafeCollateralAmount)\r\n    );\r\n  }\r\n\r\n  get mcdCurrencies() {\r\n    return this.services.mcdCurrencies;\r\n  }\r\n\r\n  get mkrToken() {\r\n    return this.services._mkrToken;\r\n  }\r\n\r\n  get mkrBalance() {\r\n    return this.services.mkrBalance;\r\n  }\r\n\r\n  get mcdManager() {\r\n    return this.services._mcdManager;\r\n  }\r\n\r\n  get minSafeCollateralAmount() {\r\n    const rawType = this.mcdManager\r\n      .get('mcd:cdpType')\r\n      .getCdpType(null, this.cdpType);\r\n\r\n    return daiMath\r\n      .minSafeCollateralAmount(\r\n        this._debtValue,\r\n        rawType.liquidationRatio._amount,\r\n        rawType.price._amount\r\n      )\r\n      .toBigNumber();\r\n  }\r\n\r\n  get minEth() {\r\n    return this.services.minEth;\r\n  }\r\n\r\n  get needToFinishMigrating() {\r\n    return this._proxyAddress && this.noProxy;\r\n  }\r\n\r\n  get proxyService() {\r\n    return this.services._proxyService;\r\n  }\r\n\r\n  get proxyAddress() {\r\n    return this.services._proxyAddress;\r\n  }\r\n\r\n  get proxyAllowanceDai() {\r\n    return this.services.proxyAllowances['DAI'];\r\n  }\r\n\r\n  get proxyAllowanceMkr() {\r\n    return this.services.proxyAllowances['MKR'];\r\n  }\r\n\r\n  get pethMin() {\r\n    return this.services.pethMin;\r\n  }\r\n\r\n  get pethPrice() {\r\n    return this.services._pethPrice;\r\n  }\r\n\r\n  get stabilityFee() {\r\n    if (this.cdp) {\r\n      return toBigNumber(this.sysVars.baseStabilityFee)\r\n        .plus(this.cdpTypeObject.annualStabilityFee)\r\n        .toString();\r\n    }\r\n    return toBigNumber(0);\r\n  }\r\n\r\n  get tokenService() {\r\n    return this.services._tokenService;\r\n  }\r\n\r\n  get wethToPethRatio() {\r\n    return this.services.wethToPethRatio;\r\n  }\r\n\r\n  get usdCollateral() {\r\n    return this.toUSD(this.ethCollateral);\r\n  }\r\n\r\n  get zeroDebt() {\r\n    return toBigNumber(this.debtValue).eq(0);\r\n  }\r\n\r\n  // Utility Helpers\r\n  toUSD(amount) {\r\n    const toUsd = toBigNumber(this.currentPrice).times(amount);\r\n\r\n    if (toUsd.lt(0)) {\r\n      return toBigNumber(0);\r\n    }\r\n    return toUsd.toFixed(2, BigNumber.ROUND_DOWN);\r\n  }\r\n\r\n  // Static Helpers\r\n\r\n  static toNumber(val) {\r\n    if (BigNumber.isBigNumber(val)) {\r\n      return val.toNumber();\r\n    }\r\n    return toBigNumber(val).toNumber();\r\n  }\r\n\r\n  static displayPercentValue(raw) {\r\n    if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\r\n    return raw.times(100).toString();\r\n  }\r\n\r\n  static displayFixedValue(raw, decimals = 3, round = true) {\r\n    return displayFixedValue(raw, decimals, round);\r\n  }\r\n}\r\n","import {\r\n  calcLiquidationPrice,\r\n  calcCollatRatio,\r\n  getMakerCurrencies,\r\n  addresses,\r\n  ERC20,\r\n  toBigNumber,\r\n  bnOver\r\n} from '../makerHelpers';\r\nimport { DAI } from '@makerdao/dai-plugin-mcd';\r\nimport ethUnit from 'ethjs-unit';\r\nimport MakerCdpBase from './MakerCdpBase';\r\nimport { getUrns } from './chainCalls';\r\nimport * as daiMath from './daiMath';\r\nimport BigNumber from 'bignumber.js';\r\n\r\nexport default class MakerCDP extends MakerCdpBase {\r\n  constructor(cdpId, web3, services, sysVars) {\r\n    super(cdpId, web3, services, sysVars);\r\n    this.minDaiValue = 20.0;\r\n    if (Object.keys(this.dustValues).length > 0) {\r\n      try {\r\n        if (this.dustValues['ETH']) {\r\n          this.minDaiValue = daiMath\r\n            .debtValue(1, this.dustValues['ETH'].dust)\r\n            .toBigNumber()\r\n            .toFixed(18);\r\n        }\r\n      } catch (e) {\r\n        // eslint-disable-next-line\r\n        console.error(e);\r\n      }\r\n    }\r\n    this.dustpolling();\r\n    this.DAI_NAME = 'DAI';\r\n    this.contractAddresses = addresses;\r\n  }\r\n\r\n  dustpolling() {\r\n    if (!Object.keys(this.dustValues).length > 0) {\r\n      const checker = setInterval(() => {\r\n        try {\r\n          if (Object.keys(this.dustValues).length > 0) {\r\n            clearInterval(checker);\r\n            this.minDaiValue = daiMath\r\n              .debtValue(1, this.dustValues['ETH'].dust)\r\n              .toBigNumber()\r\n              .toFixed(18);\r\n          }\r\n        } catch (e) {\r\n          // eslint-disable-next-line\r\n          console.error(e);\r\n        }\r\n      }, 250);\r\n    }\r\n  }\r\n\r\n  get minDai() {\r\n    return this.minDaiValue;\r\n  }\r\n\r\n  // Getters\r\n  // See MakerCdpBase\r\n\r\n  // Setup Methods =====================================================================================================\r\n  async init(cdpId = this.cdpId) {\r\n    await this.updateValues(cdpId);\r\n    try {\r\n      // TODO why is this returning undefined\r\n      this._governanceFee = (await this.cdp.getGovernanceFee()).toBigNumber();\r\n    } catch (e) {\r\n      this._governanceFee = false;\r\n    }\r\n    this.ready = true;\r\n    return this;\r\n  }\r\n\r\n  async updateSystemVariables(toUpdate) {\r\n    this.services = { ...this.services, ...toUpdate };\r\n  }\r\n\r\n  async updateValues(cdpId = this.cdpId) {\r\n    try {\r\n      this._proxyAddress = await this.services.getProxy();\r\n      this.noProxy = this._proxyAddress === null;\r\n      try {\r\n        if (this._proxyAddress) {\r\n          this.cdp = await this.services.getMakerCdp(cdpId, this._proxyAddress);\r\n        } else {\r\n          this.cdp = await this.services.getMakerCdp(cdpId, false);\r\n        }\r\n        this.isSafe = this.cdp.isSafe;\r\n        await this.getValuesFromChain();\r\n      } catch (e) {\r\n        // eslint-disable-next-line\r\n        console.error(e);\r\n      }\r\n    } catch (e) {\r\n      // eslint-disable-next-line\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  async getValuesFromChain() {\r\n    if (!this.afterInitialization) {\r\n      this.afterInitialization = !this.afterInitialization;\r\n      return;\r\n    }\r\n\r\n    const urns = await getUrns(this.web3, this.cdpId, this.cdpType);\r\n    this.urns = urns;\r\n    const value = this.cdpTypeObject.currency.wei(urns.ink);\r\n    if (!this.cdp.collateralAmount.toBigNumber().eq(value.toBigNumber())) {\r\n      this.override['collateralAmount'] = this.cdpTypeObject.currency.wei(\r\n        urns.ink\r\n      );\r\n    }\r\n\r\n    // todo: think about whether the type of update should be recorded and then used to determine which override to create\r\n    // Mostly about reducing chain calls.  if the value doesn't need a particular call. it can be skipped.\r\n    this.override['debtValue'] = daiMath.debtValue(\r\n      urns.art,\r\n      this.dustValues[this.cdpCollateralType].rate\r\n    );\r\n  }\r\n\r\n  async update() {\r\n    if (this.migrated) {\r\n      const currentProxy = await this.proxyService.currentProxy();\r\n      if (currentProxy) {\r\n        this.migrated = false;\r\n        await this.cdpService.give(this.cdpId, this._proxyAddress);\r\n      }\r\n    }\r\n    if (this.needsUpdate) {\r\n      this.opening = false;\r\n      this.needsUpdate = false;\r\n      await this.updateValues(this.cdpId);\r\n      this.doUpdate++;\r\n      return this;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  // ====================== alphabetical (roughly) ============================\r\n\r\n  async approveProxyFor(symbol) {\r\n    await this.getTokens[symbol].approveUnlimited(this.proxyAddress);\r\n  }\r\n\r\n  async approveDai() {\r\n    await this.daiToken.approveUnlimited(this.proxyAddress);\r\n  }\r\n\r\n  async approveMkr() {\r\n    if (!this.proxyAddress) return;\r\n    await this.mkrToken.approveUnlimited(this.proxyAddress);\r\n  }\r\n\r\n  calcCollatRatio(ethQty, daiQty) {\r\n    if (ethQty <= 0 || daiQty <= 0) return toBigNumber(0);\r\n    const value = this.getPriceOfCurrency(this.cdpCollateralType);\r\n    return calcCollatRatio(value, ethQty, daiQty);\r\n  }\r\n\r\n  calcCollatRatioDaiChg(daiQty, changeAmountOnly = false) {\r\n    if (changeAmountOnly) {\r\n      daiQty = toBigNumber(this.debtValue).plus(toBigNumber(daiQty));\r\n    }\r\n    return toBigNumber(this.calcCollatRatio(this.collateralAmount, daiQty));\r\n  }\r\n\r\n  calcCollatRatioEthChg(ethQty, changeAmountOnly = false) {\r\n    if (changeAmountOnly) {\r\n      ethQty = toBigNumber(this.debtValue).plus(toBigNumber(ethQty));\r\n    }\r\n    return toBigNumber(this.calcCollatRatio(ethQty, this.debtValue));\r\n  }\r\n\r\n  calcLiquidationPrice(ethQty, daiQty) {\r\n    if (ethQty <= 0 || daiQty <= 0) return toBigNumber(0);\r\n    const value = this.getPriceOfCurrency(this.cdpCollateralType);\r\n    return calcLiquidationPrice(ethQty, daiQty, value, this.liquidationRatio);\r\n  }\r\n\r\n  calcLiquidationPriceDaiChg(daiQty, changeAmountOnly = false) {\r\n    if (changeAmountOnly) {\r\n      daiQty = toBigNumber(this.debtValue).plus(toBigNumber(daiQty));\r\n    }\r\n    return toBigNumber(\r\n      this.calcLiquidationPrice(this.collateralAmount, daiQty)\r\n    );\r\n  }\r\n\r\n  calcLiquidationPriceEthChg(ethQty, changeAmountOnly = false) {\r\n    if (changeAmountOnly) {\r\n      ethQty = toBigNumber(this.debtValue).plus(toBigNumber(ethQty));\r\n    }\r\n    return toBigNumber(this.calcLiquidationPrice(ethQty, this.debtValue));\r\n  }\r\n\r\n  async checkIfDestAddressHasProxy(address) {\r\n    await this.getProxy();\r\n    return await this.proxyService.getProxyAddress(address);\r\n  }\r\n\r\n  collateralOptions() {\r\n    return Object.keys(this.services.tokens).reduce((acc, entry) => {\r\n      acc.push({\r\n        symbol: entry,\r\n        name: this.services.tokens[entry].ilk\r\n      });\r\n      return acc;\r\n    }, []);\r\n  }\r\n\r\n  convertToTokenWei(value, decimals) {\r\n    const denominator = new BigNumber(10).pow(decimals);\r\n    return new BigNumber(value).times(denominator).toFixed(0).toString(10);\r\n  }\r\n\r\n  convertToTokenBase(value, decimals) {\r\n    const denominator = new BigNumber(10).pow(decimals);\r\n    return new BigNumber(value).div(denominator).toString(10);\r\n  }\r\n\r\n  enoughMkrToWipe(amount) {\r\n    return this.cdpService.enoughMkrToWipe(amount, DAI.wei);\r\n  }\r\n\r\n  async getProxy() {\r\n    this._proxyAddress = await this.services.getProxy();\r\n  }\r\n\r\n  async getCombinedDebtValue(proxyAddress = this._proxyAddress) {\r\n    return this.mcdManager.getCombinedDebtValue(proxyAddress);\r\n  }\r\n\r\n  getBalanceOf(currency) {\r\n    if (this.services.balances[currency]) {\r\n      return this.services.balances[currency];\r\n    }\r\n    return toBigNumber(0);\r\n  }\r\n\r\n  getProxyAllowancefor(currency) {\r\n    return this.services.proxyAllowances[currency];\r\n  }\r\n\r\n  async getRawProxyAllowanceforMkr() {\r\n    const contract = new this.web3.eth.Contract(\r\n      ERC20,\r\n      this.contractAddresses.MCD_GOV\r\n    );\r\n    return await contract.methods\r\n      .allowance(this.currentAddress, this.proxyAddress)\r\n      .call();\r\n  }\r\n\r\n  getTokenObjectFor(currency) {\r\n    return this.services.tokens[currency];\r\n  }\r\n\r\n  getCurrentPriceFor(symbol) {\r\n    if (!symbol) return 0;\r\n    return this.getPriceOfCurrency(symbol);\r\n  }\r\n\r\n  getEventHistory() {\r\n    return this.mcdManager.getEventHistory(this.cdp);\r\n  }\r\n\r\n  getPriceOfCurrency(type) {\r\n    const curr = this.mcdCurrencies[type];\r\n    if (curr) {\r\n      return curr.price._amount;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  async getDaiBalances() {\r\n    return await this.getTokens[this.DAI_NAME].balance();\r\n  }\r\n\r\n  hasEnough(ethQty, currency = 'ETH', balance = null) {\r\n    if (toBigNumber(ethQty).isNaN()) return false;\r\n    const _ethQty = toBigNumber(ethQty).toFixed(18);\r\n    if (currency === 'ETH' && balance !== null) {\r\n      return toBigNumber(\r\n        ethUnit.toWei(toBigNumber(_ethQty), 'ether').toString()\r\n      ).lte(balance);\r\n    }\r\n    return toBigNumber(ethUnit.toWei(_ethQty, 'ether').toString()).lte(\r\n      ethUnit.toWei(this.getBalanceOf(currency), 'ether')\r\n    );\r\n  }\r\n\r\n  hasEnoughAllowance(ethQty, currency = 'ETH') {\r\n    if (currency === 'ETH') return true;\r\n    const currentAllowance = this.getProxyAllowancefor(currency);\r\n    try {\r\n      const _ethQty = toBigNumber(ethQty).toFixed(18);\r\n      return toBigNumber(currentAllowance.toString()).gte(\r\n        toBigNumber(this.convertToTokenWei(_ethQty, 18).toString())\r\n      );\r\n    } catch (e) {\r\n      // eslint-disable-next-line\r\n      console.error(e);\r\n    }\r\n    // todo This is a temp solution\r\n    return toBigNumber(currentAllowance).gte(toBigNumber(10));\r\n  }\r\n\r\n  minDeposit(\r\n    daiQty = this.minDai,\r\n    ethPrice = this.currentPrice,\r\n    liquidationRatio = this.liquidationRatio\r\n  ) {\r\n    if (daiQty <= 0) daiQty = this.minDai;\r\n    return bnOver(liquidationRatio, daiQty, ethPrice);\r\n  }\r\n\r\n  minDepositFor(symbol) {\r\n    return this.minDeposit(this.minDai * 1.04, this.getCurrentPriceFor(symbol));\r\n  }\r\n\r\n  minInSelectedCurrency(symbol) {\r\n    const minEth = toBigNumber(this.pethMin).times(this.wethToPethRatio);\r\n    return toBigNumber(minEth)\r\n      .times(this.getCurrentPriceFor('ETH'))\r\n      .div(this.getCurrentPriceFor(symbol));\r\n  }\r\n\r\n  setType(type) {\r\n    if (this.cdpId === null) {\r\n      this.cdpTypeObject = this.mcdManager\r\n        .get('mcd:cdpType')\r\n        .getCdpType(null, type.name);\r\n      this.minDaiValue = daiMath\r\n        .debtValue(1, this.dustValues[type.symbol].dust)\r\n        .toBigNumber()\r\n        .toFixed(18);\r\n      super.cdpType = type.name;\r\n    }\r\n  }\r\n\r\n  toPeth(eth) {\r\n    return this.services.toPeth(eth);\r\n  }\r\n\r\n  // ***********************************************************************************************\r\n  // Interaction / Operation methods\r\n  // ***********************************************************************************************\r\n  async migrateCdp() {\r\n    const currentProxy = await this.getProxy();\r\n    if (!currentProxy) {\r\n      this.needsUpdate = true;\r\n      return await this.proxyService.ensureProxy();\r\n    } else if (this.needToFinishMigrating) {\r\n      this.needsUpdate = true;\r\n      await this.cdpService.give(this.cdpId, this._proxyAddress);\r\n    }\r\n  }\r\n\r\n  async openCdp(type, ethQty, daiQty) {\r\n    if (ethQty <= 0) return 0;\r\n    this.opening = true;\r\n    this.needsUpdate = true;\r\n    // TODO structure to accept multiple currencies\r\n\r\n    const newCdp = await this.mcdManager.openLockAndDraw(\r\n      type.ilk,\r\n      getMakerCurrencies()[type.currency.symbol](ethQty),\r\n      DAI(daiQty)\r\n    );\r\n    return newCdp.id;\r\n  }\r\n\r\n  async lockEth(amount) {\r\n    try {\r\n      if (this.noProxy) {\r\n        return;\r\n      }\r\n      const owner = await this.mcdManager.getOwner(this.cdpId);\r\n      this.needsUpdate = true;\r\n      await this.mcdManager.lock(\r\n        this.cdpId,\r\n        this.cdpType,\r\n        this.mcdCurrencies[this.cdpCollateralType].currency(amount),\r\n        owner\r\n      );\r\n    } catch (e) {\r\n      // eslint-disable-next-line\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  async drawDai(amount, acknowledgeBypass = false) {\r\n    if (\r\n      this.calcCollatRatio(\r\n        this.collateralAmount,\r\n        this.debtValue.plus(amount)\r\n      ).gt(2) ||\r\n      acknowledgeBypass\r\n    ) {\r\n      try {\r\n        if (this.noProxy) {\r\n          return;\r\n        }\r\n        this.needsUpdate = true;\r\n        await this.cdp.drawDai(DAI(amount));\r\n      } catch (e) {\r\n        // eslint-disable-next-line\r\n        console.error(e);\r\n      }\r\n    }\r\n  }\r\n\r\n  // This should also have a acknowledgeBypass\r\n  async freeEth(amount, acknowledgeBypass = false) {\r\n    if (\r\n      this.debtValue.eq(0) ||\r\n      this.calcCollatRatio(this.ethCollateral.minus(amount), this.debtValue).gt(\r\n        1.5\r\n      ) ||\r\n      acknowledgeBypass\r\n    ) {\r\n      try {\r\n        if (this.noProxy) {\r\n          return;\r\n        }\r\n        this.needsUpdate = true;\r\n        await this.cdp.freeCollateral(amount.toString());\r\n      } catch (e) {\r\n        // eslint-disable-next-line\r\n        console.error(e);\r\n      }\r\n    }\r\n  }\r\n\r\n  async wipeDai(amount, max = false) {\r\n    try {\r\n      if (this.noProxy) {\r\n        return;\r\n      }\r\n      this.needsUpdate = true;\r\n      if (max) {\r\n        await this.cdp.wipeAll();\r\n      } else {\r\n        await this.cdp.wipeDai(amount.toString());\r\n      }\r\n    } catch (e) {\r\n      // eslint-disable-next-line\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  async canCloseCdp() {\r\n    const value = this.debtValue.toNumber();\r\n    return await this.cdpService.enoughMkrToWipe(this.cdpId, value);\r\n  }\r\n\r\n  async closeCdp() {\r\n    try {\r\n      this.needsUpdate = true;\r\n      this.closing = true;\r\n\r\n      if (this.hasProxy) {\r\n        await this.cdpService.shutProxy(this._proxyAddress, this.cdpId);\r\n      }\r\n    } catch (e) {\r\n      // eslint-disable-next-line\r\n      console.log('closeCdp Error:');\r\n      // eslint-disable-next-line\r\n      console.error(e);\r\n    }\r\n    // }\r\n  }\r\n\r\n  async moveCdp(address) {\r\n    await this.getProxy();\r\n    const proxy = await this.proxyService.getProxyAddress(address);\r\n    if (proxy) {\r\n      this.needsUpdate = true;\r\n      this.closing = true; // for the purpose of displaying to the user closing and moving are the same\r\n      await this.cdp.giveToProxy(address);\r\n      // eslint-disable-next-line\r\n    } else if (!this.noProxy && proxy) {\r\n      this.needsUpdate = true;\r\n      this.closing = true;\r\n      await this.cdp.giveToProxy(address);\r\n    } else if (!this.noProxy) {\r\n      this.needsUpdate = true;\r\n      this.closing = true;\r\n      await this.cdp.give(address);\r\n    } else {\r\n      this.needsUpdate = true;\r\n      this.closing = true;\r\n      await this.cdp.give(address);\r\n    }\r\n  }\r\n}\r\n","import MakerCDP from '@/dapps/MakerDai/MakerCDP/MakerCDP';\r\n\r\nexport default MakerCDP;\r\n","import BigNumber from 'bignumber.js';\r\nimport { DAI } from '@makerdao/dai-plugin-mcd';\r\nimport { locateCdps } from './locateCdps';\r\nimport MakerCDP from '../MakerCDP';\r\nimport { getDustValue } from '@/dapps/MakerDai/MakerCDP/chainCalls';\r\nconst toBigNumber = num => {\r\n  return new BigNumber(num);\r\n};\r\n\r\nconst ServiceRoles = {\r\n  PRICE: 'price',\r\n  CDP: 'cdp',\r\n  PROXY: 'proxy',\r\n  TOKEN: 'token',\r\n  CDP_MANAGER: 'mcd:cdpManager',\r\n  CDP_TYPE: 'mcd:cdpType',\r\n  AUCTION: 'mcd:auction',\r\n  SYSTEM_DATA: 'mcd:systemData',\r\n  QUERY_API: 'mcd:queryApi',\r\n  SAVINGS: 'mcd:savings'\r\n};\r\n\r\nexport async function setupServices(self, maker) {\r\n  const result = await Promise.all([\r\n    maker.service(ServiceRoles.SYSTEM_DATA),\r\n    maker.service(ServiceRoles.PROXY),\r\n    maker.service(ServiceRoles.TOKEN)\r\n  ]);\r\n  self._systemData = result[0];\r\n  self._proxyService = result[1];\r\n  self._tokenService = result[2];\r\n  self._mcdManager = maker.service(ServiceRoles.CDP_MANAGER);\r\n  self._mcdSaving = maker.service(ServiceRoles.SAVINGS);\r\n  self._typeService = maker.service(ServiceRoles.CDP_TYPE);\r\n  return self;\r\n}\r\n\r\nexport async function setupPriceAndRatios(self, _priceService, _typeService) {\r\n  self.pethMin = toBigNumber(0.005);\r\n\r\n  const result = await Promise.all([self._systemData.getAnnualBaseRate()]);\r\n  self.ethPrice = toBigNumber(_typeService.getCdpType(null, 'ETH-A'));\r\n  self.liquidationRatio = toBigNumber(\r\n    _typeService.getCdpType(null, 'ETH-A').liquidationRatio\r\n  );\r\n  self.liquidationPenalty = toBigNumber(_typeService.liquidationPenalty);\r\n  self.stabilityFee = toBigNumber(\r\n    _typeService.getCdpType(null, 'ETH-A').annualStabilityFee\r\n  ).plus(result[0]);\r\n  self.baseStabilityFee = toBigNumber(result[0]);\r\n  return self;\r\n}\r\n\r\nexport async function getDetailsForTokens(self, collateralTokens) {\r\n  self.balances = {};\r\n  self.tokens = {};\r\n\r\n  for (let i = 0; i < collateralTokens.length; i++) {\r\n    const token = self._tokenService.getToken(collateralTokens[i].currency);\r\n    self.tokens[collateralTokens[i].currency.symbol] = token;\r\n    token.balance().then(res => {\r\n      self.balances[collateralTokens[i].currency.symbol] = res.toBigNumber();\r\n    });\r\n  }\r\n  const token = self._tokenService.getToken(DAI);\r\n  self.tokens[token.symbol] = token;\r\n  self.balances[token.symbol] = (await token.balance()).toBigNumber();\r\n\r\n  await getDustValues(self, collateralTokens);\r\n}\r\n\r\nexport async function getDustValues(self, collateralTokens) {\r\n  self.dustValues = {};\r\n  for (let i = 0; i < collateralTokens.length; i++) {\r\n    getDustValue(self.web3, collateralTokens[i].ilk).then(res => {\r\n      self.dustValues[collateralTokens[i].currency.symbol] = res;\r\n    });\r\n  }\r\n}\r\n\r\nexport async function checkAllowances(self, address, proxyAddress) {\r\n  self.proxyAllowances = {};\r\n  if (proxyAddress) {\r\n    const keys = Object.keys(self.tokens);\r\n    keys.push('MKR');\r\n    keys.push('DAI');\r\n    for (let i = 0; i < keys.length; i++) {\r\n      try {\r\n        if (\r\n          typeof self.tokens[keys[i]] !== 'undefined' &&\r\n          typeof self.tokens[keys[i]]._contract !== 'undefined' &&\r\n          typeof self.tokens[keys[i]]._contract.allowance === 'function'\r\n        ) {\r\n          self.tokens[keys[i]]._contract\r\n            .allowance(address, proxyAddress)\r\n            .then(res => {\r\n              self.proxyAllowances[keys[i]] = toBigNumber(res);\r\n            });\r\n        } else {\r\n          self.proxyAllowances[keys[i]] = toBigNumber(0);\r\n        }\r\n\r\n        if (self.proxyAllowances[keys[i]].isNaN()) {\r\n          self.proxyAllowances[keys[i]] = toBigNumber(0);\r\n        }\r\n      } catch (e) {\r\n        self.proxyAllowances[keys[i]] = toBigNumber(0);\r\n      }\r\n    }\r\n  }\r\n  return self.proxyAllowances;\r\n}\r\n\r\nexport async function checkAllowanceFor(\r\n  proxyAllowances,\r\n  tokens,\r\n  address,\r\n  proxyAddress,\r\n  currency\r\n) {\r\n  if (proxyAddress) {\r\n    proxyAllowances[currency] = toBigNumber(\r\n      await tokens[currency].allowance(address, proxyAddress)\r\n    );\r\n  }\r\n  return proxyAllowances;\r\n}\r\n\r\nexport function collateralOptions(mcdCurrencies) {\r\n  return Object.keys(mcdCurrencies).reduce((acc, entry) => {\r\n    acc.push({\r\n      symbol: entry,\r\n      name: mcdCurrencies[entry].ilk\r\n    });\r\n    return acc;\r\n  }, []);\r\n}\r\n\r\n// setup MakerCDP\r\n\r\nexport async function setupCdpManage(self, cdpId) {\r\n  if (!self.allCdpIds.includes(cdpId) && self.allCdpIds.length > 0) {\r\n    cdpId = self.allCdpIds[0];\r\n  }\r\n  if (self.allCdpIds.length === 0) {\r\n    self.activeValues = self.systemValues;\r\n  } else {\r\n    self.currentCdpId = cdpId;\r\n    self.activeValues = await getValuesForManage.bind(self)(cdpId);\r\n  }\r\n  return self;\r\n}\r\n\r\nexport async function getValuesForManage(cdpId) {\r\n  if (typeof cdpId !== 'number') cdpId = cdpId.id;\r\n  const currentCdp = this.activeCdps[cdpId];\r\n  this.currentCdp = currentCdp;\r\n  const systemValues = this.systemValues;\r\n  return {\r\n    ...systemValues,\r\n    cdpId: cdpId,\r\n    maxEthDraw: currentCdp.maxEthDraw,\r\n    maxUsdDraw: currentCdp.maxUsdDraw,\r\n    ethCollateral: currentCdp.ethCollateral,\r\n    usdCollateral: currentCdp.usdCollateral,\r\n    debtValue: currentCdp.debtValue,\r\n    maxDai: currentCdp.maxDai,\r\n    collateralRatio: currentCdp.collatRatio,\r\n    liquidationPrice: currentCdp.liquidationPrice,\r\n    minEth: currentCdp.minEth,\r\n    isSafe: false,\r\n    governanceFeeOwed: currentCdp.governanceFeeOwed,\r\n    ethCollateralNum: currentCdp.ethCollateral,\r\n    zeroDebt: currentCdp.zeroDebt,\r\n    cdpsWithType: this.cdpsWithType,\r\n    // _systemData: this._systemData,\r\n    baseStabilityFee: this.baseStabilityFee\r\n  };\r\n}\r\n\r\nexport async function loadCdpDetails(\r\n  self,\r\n  cdps = self.cdps,\r\n  cdpsWithoutProxy = self.cdpsWithoutProxy\r\n) {\r\n  for (let i = 0; i < cdps.length; i++) {\r\n    const cdpId = typeof cdps[i] !== 'number' ? cdps[i].id : cdps[i];\r\n    self.activeCdps[cdpId] = await buildCdpObject.bind(self)(cdpId);\r\n  }\r\n  for (let i = 0; i < cdpsWithoutProxy.length; i++) {\r\n    const cdpId =\r\n      typeof cdpsWithoutProxy[i] !== 'number'\r\n        ? cdpsWithoutProxy[i].id\r\n        : cdpsWithoutProxy[i];\r\n    self.activeCdps[cdpId] = await buildCdpObject.bind(self)(cdpId, {\r\n      noProxy: true\r\n    });\r\n  }\r\n}\r\n\r\nexport async function loadCdpDetail(self, cdpId) {\r\n  return await buildCdpObject.bind(self)(cdpId);\r\n}\r\n\r\nexport async function updateActiveCdp(self) {\r\n  const removeObject = val => {\r\n    return typeof val === 'number'\r\n      ? val\r\n      : typeof val === 'object'\r\n      ? val.hasOwnProperty('id')\r\n        ? val.id\r\n        : 0\r\n      : val;\r\n  };\r\n  const currentCdpIds = Object.keys(self.activeCdps);\r\n  const { withType, withProxy, withoutProxy } = await locateCdps(\r\n    self,\r\n    self._mcdManager\r\n  );\r\n\r\n  self.cdpsWithType = withType;\r\n  self.cdps = withProxy.map(removeObject);\r\n  self.cdpsWithoutProxy = withoutProxy;\r\n\r\n  const newCdps = self.cdps.filter(item => {\r\n    return !currentCdpIds.includes(item.toString());\r\n  });\r\n  const newCdpsWithoutProxy = self.cdpsWithoutProxy.filter(\r\n    item => !Object.keys(self.activeCdps).includes(item)\r\n  );\r\n\r\n  const removedCdps = currentCdpIds.filter(item => {\r\n    return !(\r\n      self.cdps.includes(item.toString()) ||\r\n      self.cdps.includes(parseInt(item)) ||\r\n      self.cdpsWithoutProxy.includes(item.toString()) ||\r\n      self.cdpsWithoutProxy.includes(parseInt(item))\r\n    );\r\n  });\r\n\r\n  if (removedCdps.length > 0) {\r\n    removedCdps.forEach(item => delete self.activeCdps[item]);\r\n  }\r\n\r\n  if (newCdps.length > 0) {\r\n    for (let i = 0; i < newCdps.length; i++) {\r\n      self.activeCdps[newCdps[i]] = await buildCdpObject.bind(self)(newCdps[i]);\r\n    }\r\n  }\r\n\r\n  if (newCdpsWithoutProxy.length > 0) {\r\n    for (let i = 0; i < newCdpsWithoutProxy.length; i++) {\r\n      self.activeCdps[newCdpsWithoutProxy[i]] = await buildCdpObject.bind(self)(\r\n        newCdpsWithoutProxy[i],\r\n        {\r\n          noProxy: true\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport async function buildEmpty(self) {\r\n  const result = await buildCdpObject.bind(self)(null);\r\n  return result;\r\n}\r\n\r\nexport async function buildCdpObject(cdpId, options = {}, useOld = false) {\r\n  const sysVars = {\r\n    ...options,\r\n    tokens: this.tokens,\r\n    balances: this.balances,\r\n    _proxyAddress: this.proxyAddress,\r\n    liquidationPenalty: this.liquidationPenalty,\r\n    stabilityFee: this.stabilityFee,\r\n    ethPrice: this.ethPrice,\r\n    _targetPrice: this._targetPrice,\r\n    liquidationRatio: this.liquidationRatio,\r\n    proxyAllowances: this.proxyAllowances,\r\n    _daiToken: this._daiToken,\r\n    daiBalance: this.daiBalance,\r\n    _mkrToken: this._mkrToken,\r\n    mkrBalance: this.mkrBalance,\r\n    minEth: this.minEth,\r\n    cdpsWithType: this.cdpsWithType,\r\n    baseStabilityFee: this.baseStabilityFee\r\n  };\r\n\r\n  const services = {\r\n    address: this.account.address,\r\n    _typeService: this._typeService,\r\n    _mcdManager: this._mcdManager,\r\n    _mcdSaving: this._mcdSaving,\r\n    _proxyService: this._proxyService,\r\n    priceService: this.priceService,\r\n    _cdpService: this._cdpService,\r\n    _tokenService: this._tokenService,\r\n    doUpdate: this.doUpdate,\r\n    getProxy: this.getProxy,\r\n    hasProxy: this.hasProxy,\r\n    getMakerCdp: this.getMakerCdp,\r\n    toUSD: this.toUSD,\r\n    _proxyAddress: this.proxyAddress,\r\n    liquidationPenalty: this.liquidationPenalty,\r\n    stabilityFee: this.stabilityFee,\r\n    ethPrice: this.ethPrice,\r\n    _targetPrice: this._targetPrice,\r\n    liquidationRatio: this.liquidationRatio,\r\n    _daiToken: this._daiToken,\r\n    daiBalance: this.daiBalance,\r\n    _mkrToken: this._mkrToken,\r\n    mkrBalance: this.mkrBalance,\r\n    minEth: this.minEth,\r\n    tokens: this.tokens,\r\n    balances: this.balances,\r\n    proxyAllowances: this.proxyAllowances,\r\n    mcdCurrencies: this.mcdCurrencies,\r\n    dustValues: this.dustValues,\r\n    _systemData: this._systemData\r\n  };\r\n  let makerCDP;\r\n  try {\r\n    makerCDP = new MakerCDP(cdpId, this.web3, services, sysVars);\r\n    if (cdpId) {\r\n      if (useOld) {\r\n        return await makerCDP.init(cdpId, useOld);\r\n      }\r\n      return await makerCDP.init(cdpId);\r\n    }\r\n    return makerCDP;\r\n  } catch (e) {\r\n    // eslint-disable-next-line\r\n    console.log(e);\r\n    return makerCDP;\r\n  }\r\n}\r\n\r\nexport async function doUpdate(self, Toast) {\r\n  self.proxyAddress = await self.getProxy();\r\n  let afterClose = false;\r\n  const afterOpen = self.$route.name === 'create';\r\n  await Promise.all([\r\n    self.updateActiveCdp(),\r\n    self.checkBalances(),\r\n    self.checkAllowances()\r\n  ]);\r\n  for (const idProp in self.activeCdps) {\r\n    if (self.activeCdps[idProp].needsUpdate) {\r\n      if (self.activeCdps[idProp].closing) {\r\n        afterClose = true;\r\n        delete self.activeCdps[idProp];\r\n        self.cdps = self.cdps.filter(item => item !== idProp);\r\n        self.cdpsWithoutProxy = self.cdpsWithoutProxy.filter(\r\n          item => item !== idProp\r\n        );\r\n      } else if (self.activeCdps[idProp].opening) {\r\n        await self.activeCdps[idProp].updateValues();\r\n      } else {\r\n        self.activeCdps[idProp] = await self.activeCdps[idProp].update();\r\n        self.activeCdps[idProp].updateSystemVariables({\r\n          tokens: self.tokens,\r\n          balances: self.balances,\r\n          proxyAllowances: self.proxyAllowances,\r\n          dustValues: self.dustValues\r\n        });\r\n      }\r\n    }\r\n    if (idProp === self.currentCdpId) {\r\n      await self.currentCdp.update();\r\n      await self.setupCdpManage(self.currentCdpId);\r\n    }\r\n  }\r\n\r\n  if (\r\n    Object.keys(self.activeCdps).includes(self.currentCdpId.toString()) ||\r\n    Object.keys(self.activeCdps).includes(self.currentCdpId)\r\n  ) {\r\n    await self.setupCdpManageFunc(self.currentCdpId);\r\n  } else {\r\n    await self.loadCdpDetails(); //todo: see if disableing this breaks anything (likely would happen with creation)\r\n    // todo: thie line above is where things were getting erased (new instances are being created)\r\n    await self.setupCdpManageFunc(self.currentCdpId);\r\n  }\r\n\r\n  const runAfterUpdate = () => {\r\n    if (self.afterUpdate.length > 0) {\r\n      const fn = self.afterUpdate.pop();\r\n      fn();\r\n      runAfterUpdate();\r\n    }\r\n  };\r\n  runAfterUpdate();\r\n  if (afterClose || afterOpen || self.creatingCdp) {\r\n    if (self.cdps.length > 0 || self.cdpsWithoutProxy.length > 0) {\r\n      self.goToManage();\r\n    } else if (self.$route.name === 'save') {\r\n      self.goToSave();\r\n    } else {\r\n      self.gotoCreate();\r\n    }\r\n  }\r\n  if (self.creatingCdp) {\r\n    self.creatingCdp = false;\r\n    await self.updateActiveCdp();\r\n    Toast.responseHandler(self.$t('dappsMCDMaker.vault-created'), Toast.INFO);\r\n  } else {\r\n    self.valuesUpdated++;\r\n    Toast.responseHandler(self.$t('dappsMCDMaker.vault-updated'), Toast.INFO);\r\n  }\r\n}\r\n","import Maker from '@makerdao/dai';\r\n\r\nimport * as TKNS from '@makerdao/dai-plugin-mcd';\r\n\r\nconst { DAI } = Maker;\r\n\r\nexport function getMakerCurrencies() {\r\n  const vals = { DAI, ...TKNS };\r\n  return vals;\r\n}\r\n","export default [\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'saiJoin',\r\n    outputs: [{ internalType: 'contract JoinLike', name: '', type: 'address' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'wethJoin',\r\n    outputs: [{ internalType: 'contract JoinLike', name: '', type: 'address' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'tub',\r\n    outputs: [\r\n      { internalType: 'contract SaiTubLike', name: '', type: 'address' }\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'vat',\r\n    outputs: [{ internalType: 'contract VatLike', name: '', type: 'address' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'cdpManager',\r\n    outputs: [\r\n      { internalType: 'contract ManagerLike', name: '', type: 'address' }\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'daiJoin',\r\n    outputs: [{ internalType: 'contract JoinLike', name: '', type: 'address' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [{ internalType: 'uint256', name: 'wad', type: 'uint256' }],\r\n    name: 'swapDaiToSai',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [{ internalType: 'bytes32', name: 'cup', type: 'bytes32' }],\r\n    name: 'migrate',\r\n    outputs: [{ internalType: 'uint256', name: 'cdp', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [{ internalType: 'uint256', name: 'wad', type: 'uint256' }],\r\n    name: 'swapSaiToDai',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'tub_',\r\n        type: 'address'\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'cdpManager_',\r\n        type: 'address'\r\n      },\r\n      { internalType: 'address', name: 'saiJoin_', type: 'address' },\r\n      {\r\n        internalType: 'address',\r\n        name: 'wethJoin_',\r\n        type: 'address'\r\n      },\r\n      { internalType: 'address', name: 'daiJoin_', type: 'address' }\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor'\r\n  }\r\n];\r\n","const ERC20 = [\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'name',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'string'\r\n      }\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: '_spender',\r\n        type: 'address'\r\n      },\r\n      {\r\n        name: '_value',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    name: 'approve',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'bool'\r\n      }\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'totalSupply',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: '_from',\r\n        type: 'address'\r\n      },\r\n      {\r\n        name: '_to',\r\n        type: 'address'\r\n      },\r\n      {\r\n        name: '_value',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    name: 'transferFrom',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'bool'\r\n      }\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'decimals',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint8'\r\n      }\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: '_owner',\r\n        type: 'address'\r\n      }\r\n    ],\r\n    name: 'balanceOf',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'symbol',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'string'\r\n      }\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: '_to',\r\n        type: 'address'\r\n      },\r\n      {\r\n        name: '_value',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    name: 'transfer',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'bool'\r\n      }\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: '_owner',\r\n        type: 'address'\r\n      },\r\n      {\r\n        name: '_spender',\r\n        type: 'address'\r\n      }\r\n    ],\r\n    name: 'allowance',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor'\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: '_from',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: '_to',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: '_value',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    name: 'Transfer',\r\n    type: 'event'\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: '_owner',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: '_spender',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: '_value',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    name: 'Approval',\r\n    type: 'event'\r\n  }\r\n];\r\n\r\nexport default ERC20;\r\n","export default [\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      { internalType: 'address', name: 'manager', type: 'address' },\r\n      {\r\n        internalType: 'address',\r\n        name: 'guy',\r\n        type: 'address'\r\n      }\r\n    ],\r\n    name: 'getCdpsAsc',\r\n    outputs: [\r\n      { internalType: 'uint256[]', name: 'ids', type: 'uint256[]' },\r\n      {\r\n        internalType: 'address[]',\r\n        name: 'urns',\r\n        type: 'address[]'\r\n      },\r\n      { internalType: 'bytes32[]', name: 'ilks', type: 'bytes32[]' }\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      { internalType: 'address', name: 'manager', type: 'address' },\r\n      {\r\n        internalType: 'address',\r\n        name: 'guy',\r\n        type: 'address'\r\n      }\r\n    ],\r\n    name: 'getCdpsDesc',\r\n    outputs: [\r\n      { internalType: 'uint256[]', name: 'ids', type: 'uint256[]' },\r\n      {\r\n        internalType: 'address[]',\r\n        name: 'urns',\r\n        type: 'address[]'\r\n      },\r\n      { internalType: 'bytes32[]', name: 'ilks', type: 'bytes32[]' }\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  }\r\n];\r\n","export default [\r\n  {\r\n    constant: false,\r\n    inputs: [],\r\n    name: 'build',\r\n    outputs: [\r\n      { internalType: 'address payable', name: 'proxy', type: 'address' }\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    name: 'proxies',\r\n    outputs: [{ internalType: 'contract DSProxy', name: '', type: 'address' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],\r\n    name: 'build',\r\n    outputs: [\r\n      { internalType: 'address payable', name: 'proxy', type: 'address' }\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'factory_', type: 'address' }],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor'\r\n  }\r\n];\r\n","export default [\r\n  {\r\n    constant: true,\r\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    name: 'count',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: 'uint256', name: 'cdp', type: 'uint256' },\r\n      {\r\n        internalType: 'address',\r\n        name: 'usr',\r\n        type: 'address'\r\n      },\r\n      { internalType: 'uint256', name: 'ok', type: 'uint256' }\r\n    ],\r\n    name: 'cdpAllow',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: 'bytes32', name: 'ilk', type: 'bytes32' },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'cdp',\r\n        type: 'uint256'\r\n      },\r\n      { internalType: 'address', name: 'dst', type: 'address' },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'wad',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    name: 'flux',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: 'uint256', name: 'cdp', type: 'uint256' },\r\n      {\r\n        internalType: 'address',\r\n        name: 'dst',\r\n        type: 'address'\r\n      }\r\n    ],\r\n    name: 'quit',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    name: 'urns',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    name: 'ilks',\r\n    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'vat',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: 'uint256', name: 'cdp', type: 'uint256' },\r\n      {\r\n        internalType: 'int256',\r\n        name: 'dink',\r\n        type: 'int256'\r\n      },\r\n      { internalType: 'int256', name: 'dart', type: 'int256' }\r\n    ],\r\n    name: 'frob',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: 'uint256', name: 'cdp', type: 'uint256' },\r\n      {\r\n        internalType: 'address',\r\n        name: 'dst',\r\n        type: 'address'\r\n      },\r\n      { internalType: 'int256', name: 'dink', type: 'int256' },\r\n      {\r\n        internalType: 'int256',\r\n        name: 'dart',\r\n        type: 'int256'\r\n      }\r\n    ],\r\n    name: 'frob',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      { internalType: 'address', name: '', type: 'address' },\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256'\r\n      },\r\n      { internalType: 'address', name: '', type: 'address' }\r\n    ],\r\n    name: 'cdpCan',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: 'bytes32', name: 'ilk', type: 'bytes32' },\r\n      {\r\n        internalType: 'address',\r\n        name: 'usr',\r\n        type: 'address'\r\n      }\r\n    ],\r\n    name: 'open',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: 'address', name: 'src', type: 'address' },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'cdp',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    name: 'enter',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    name: 'list',\r\n    outputs: [\r\n      { internalType: 'uint256', name: 'prev', type: 'uint256' },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'next',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    name: 'owns',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    name: 'last',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: 'uint256', name: 'cdp', type: 'uint256' },\r\n      {\r\n        internalType: 'address',\r\n        name: 'dst',\r\n        type: 'address'\r\n      },\r\n      { internalType: 'uint256', name: 'wad', type: 'uint256' }\r\n    ],\r\n    name: 'flux',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      { internalType: 'address', name: '', type: 'address' },\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address'\r\n      }\r\n    ],\r\n    name: 'urnCan',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'cdpi',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: 'address', name: 'usr', type: 'address' },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'ok',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    name: 'urnAllow',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [{ internalType: 'bytes32', name: 'ilk', type: 'bytes32' }],\r\n    name: 'open',\r\n    outputs: [{ internalType: 'uint256', name: 'cdp', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: 'uint256', name: 'cdpSrc', type: 'uint256' },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'cdpDst',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    name: 'shift',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: 'uint256', name: 'cdp', type: 'uint256' },\r\n      {\r\n        internalType: 'address',\r\n        name: 'dst',\r\n        type: 'address'\r\n      },\r\n      { internalType: 'uint256', name: 'rad', type: 'uint256' }\r\n    ],\r\n    name: 'move',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    name: 'first',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: 'uint256', name: 'cdp', type: 'uint256' },\r\n      {\r\n        internalType: 'address',\r\n        name: 'dst',\r\n        type: 'address'\r\n      }\r\n    ],\r\n    name: 'give',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'vat_', type: 'address' }],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor'\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: 'address', name: 'usr', type: 'address' },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'own',\r\n        type: 'address'\r\n      },\r\n      { indexed: false, internalType: 'uint256', name: 'cdp', type: 'uint256' }\r\n    ],\r\n    name: 'NewCdp',\r\n    type: 'event'\r\n  },\r\n  {\r\n    anonymous: true,\r\n    inputs: [\r\n      { indexed: true, internalType: 'bytes4', name: 'sig', type: 'bytes4' },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'usr',\r\n        type: 'address'\r\n      },\r\n      { indexed: true, internalType: 'bytes32', name: 'arg1', type: 'bytes32' },\r\n      {\r\n        indexed: true,\r\n        internalType: 'bytes32',\r\n        name: 'arg2',\r\n        type: 'bytes32'\r\n      },\r\n      { indexed: false, internalType: 'bytes', name: 'data', type: 'bytes' }\r\n    ],\r\n    name: 'LogNote',\r\n    type: 'event'\r\n  }\r\n];\r\n","export default [\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'vat_', type: 'address' }],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor'\r\n  },\r\n  {\r\n    anonymous: true,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'bytes4',\r\n        name: 'sig',\r\n        type: 'bytes4'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'usr',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'bytes32',\r\n        name: 'arg1',\r\n        type: 'bytes32'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'bytes32',\r\n        name: 'arg2',\r\n        type: 'bytes32'\r\n      },\r\n      { indexed: false, internalType: 'bytes', name: 'data', type: 'bytes' }\r\n    ],\r\n    name: 'LogNote',\r\n    type: 'event'\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: 'bytes32',\r\n        name: 'ilk',\r\n        type: 'bytes32'\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'bytes32',\r\n        name: 'val',\r\n        type: 'bytes32'\r\n      },\r\n      { indexed: false, internalType: 'uint256', name: 'spot', type: 'uint256' }\r\n    ],\r\n    name: 'Poke',\r\n    type: 'event'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [],\r\n    name: 'cage',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [{ internalType: 'address', name: 'guy', type: 'address' }],\r\n    name: 'deny',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 'ilk',\r\n        type: 'bytes32'\r\n      },\r\n      { internalType: 'bytes32', name: 'what', type: 'bytes32' },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'data',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    name: 'file',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 'what',\r\n        type: 'bytes32'\r\n      },\r\n      { internalType: 'uint256', name: 'data', type: 'uint256' }\r\n    ],\r\n    name: 'file',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 'ilk',\r\n        type: 'bytes32'\r\n      },\r\n      { internalType: 'bytes32', name: 'what', type: 'bytes32' },\r\n      {\r\n        internalType: 'address',\r\n        name: 'pip_',\r\n        type: 'address'\r\n      }\r\n    ],\r\n    name: 'file',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\r\n    name: 'ilks',\r\n    outputs: [\r\n      {\r\n        internalType: 'contract PipLike',\r\n        name: 'pip',\r\n        type: 'address'\r\n      },\r\n      { internalType: 'uint256', name: 'mat', type: 'uint256' }\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'live',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'par',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [{ internalType: 'bytes32', name: 'ilk', type: 'bytes32' }],\r\n    name: 'poke',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [{ internalType: 'address', name: 'guy', type: 'address' }],\r\n    name: 'rely',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'vat',\r\n    outputs: [{ internalType: 'contract VatLike', name: '', type: 'address' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    name: 'wards',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  }\r\n];\r\n","export default [\r\n  {\r\n    inputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor'\r\n  },\r\n  {\r\n    anonymous: true,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'bytes4',\r\n        name: 'sig',\r\n        type: 'bytes4'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'bytes32',\r\n        name: 'arg1',\r\n        type: 'bytes32'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'bytes32',\r\n        name: 'arg2',\r\n        type: 'bytes32'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'bytes32',\r\n        name: 'arg3',\r\n        type: 'bytes32'\r\n      },\r\n      { indexed: false, internalType: 'bytes', name: 'data', type: 'bytes' }\r\n    ],\r\n    name: 'LogNote',\r\n    type: 'event'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'Line',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [],\r\n    name: 'cage',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      { internalType: 'address', name: '', type: 'address' },\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address'\r\n      }\r\n    ],\r\n    name: 'can',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    name: 'dai',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'debt',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [{ internalType: 'address', name: 'usr', type: 'address' }],\r\n    name: 'deny',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 'ilk',\r\n        type: 'bytes32'\r\n      },\r\n      { internalType: 'bytes32', name: 'what', type: 'bytes32' },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'data',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    name: 'file',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 'what',\r\n        type: 'bytes32'\r\n      },\r\n      { internalType: 'uint256', name: 'data', type: 'uint256' }\r\n    ],\r\n    name: 'file',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 'ilk',\r\n        type: 'bytes32'\r\n      },\r\n      { internalType: 'address', name: 'src', type: 'address' },\r\n      {\r\n        internalType: 'address',\r\n        name: 'dst',\r\n        type: 'address'\r\n      },\r\n      { internalType: 'uint256', name: 'wad', type: 'uint256' }\r\n    ],\r\n    name: 'flux',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 'i',\r\n        type: 'bytes32'\r\n      },\r\n      { internalType: 'address', name: 'u', type: 'address' },\r\n      {\r\n        internalType: 'int256',\r\n        name: 'rate',\r\n        type: 'int256'\r\n      }\r\n    ],\r\n    name: 'fold',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 'ilk',\r\n        type: 'bytes32'\r\n      },\r\n      { internalType: 'address', name: 'src', type: 'address' },\r\n      {\r\n        internalType: 'address',\r\n        name: 'dst',\r\n        type: 'address'\r\n      },\r\n      { internalType: 'int256', name: 'dink', type: 'int256' },\r\n      {\r\n        internalType: 'int256',\r\n        name: 'dart',\r\n        type: 'int256'\r\n      }\r\n    ],\r\n    name: 'fork',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 'i',\r\n        type: 'bytes32'\r\n      },\r\n      { internalType: 'address', name: 'u', type: 'address' },\r\n      {\r\n        internalType: 'address',\r\n        name: 'v',\r\n        type: 'address'\r\n      },\r\n      { internalType: 'address', name: 'w', type: 'address' },\r\n      {\r\n        internalType: 'int256',\r\n        name: 'dink',\r\n        type: 'int256'\r\n      },\r\n      { internalType: 'int256', name: 'dart', type: 'int256' }\r\n    ],\r\n    name: 'frob',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      { internalType: 'bytes32', name: '', type: 'bytes32' },\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address'\r\n      }\r\n    ],\r\n    name: 'gem',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 'i',\r\n        type: 'bytes32'\r\n      },\r\n      { internalType: 'address', name: 'u', type: 'address' },\r\n      {\r\n        internalType: 'address',\r\n        name: 'v',\r\n        type: 'address'\r\n      },\r\n      { internalType: 'address', name: 'w', type: 'address' },\r\n      {\r\n        internalType: 'int256',\r\n        name: 'dink',\r\n        type: 'int256'\r\n      },\r\n      { internalType: 'int256', name: 'dart', type: 'int256' }\r\n    ],\r\n    name: 'grab',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [{ internalType: 'uint256', name: 'rad', type: 'uint256' }],\r\n    name: 'heal',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [{ internalType: 'address', name: 'usr', type: 'address' }],\r\n    name: 'hope',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\r\n    name: 'ilks',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'Art',\r\n        type: 'uint256'\r\n      },\r\n      { internalType: 'uint256', name: 'rate', type: 'uint256' },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'spot',\r\n        type: 'uint256'\r\n      },\r\n      { internalType: 'uint256', name: 'line', type: 'uint256' },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'dust',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [{ internalType: 'bytes32', name: 'ilk', type: 'bytes32' }],\r\n    name: 'init',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'live',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'src',\r\n        type: 'address'\r\n      },\r\n      { internalType: 'address', name: 'dst', type: 'address' },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'rad',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    name: 'move',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [{ internalType: 'address', name: 'usr', type: 'address' }],\r\n    name: 'nope',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [{ internalType: 'address', name: 'usr', type: 'address' }],\r\n    name: 'rely',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    name: 'sin',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 'ilk',\r\n        type: 'bytes32'\r\n      },\r\n      { internalType: 'address', name: 'usr', type: 'address' },\r\n      {\r\n        internalType: 'int256',\r\n        name: 'wad',\r\n        type: 'int256'\r\n      }\r\n    ],\r\n    name: 'slip',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'u',\r\n        type: 'address'\r\n      },\r\n      { internalType: 'address', name: 'v', type: 'address' },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'rad',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    name: 'suck',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      { internalType: 'bytes32', name: '', type: 'bytes32' },\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address'\r\n      }\r\n    ],\r\n    name: 'urns',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'ink',\r\n        type: 'uint256'\r\n      },\r\n      { internalType: 'uint256', name: 'art', type: 'uint256' }\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'vice',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    name: 'wards',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  }\r\n];\r\n","import BigNumber from 'bignumber.js';\r\nimport { ERC20 } from './ABIs';\r\n\r\nexport function toBigNumber(num) {\r\n  const bignumber = new BigNumber(num);\r\n  bignumber.displayFixed = displayFixedValue.bind(this, bignumber);\r\n  return new BigNumber(num);\r\n}\r\n\r\nexport function toNumber(val) {\r\n  if (BigNumber.isBigNumber(val)) {\r\n    return val.toNumber();\r\n  }\r\n  return toBigNumber(val).toNumber();\r\n}\r\n\r\nexport function displayPercentValue(raw) {\r\n  if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\r\n  return raw.times(100).toString();\r\n}\r\n\r\nexport function displayFixedValue(\r\n  raw,\r\n  decimals = 3,\r\n  finiteCheck = true,\r\n  round = true,\r\n  roundUp = false\r\n) {\r\n  try {\r\n    if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\r\n    if ((!isFinite(raw) || isNaN(raw)) && finiteCheck) return '--';\r\n    if (round && !roundUp)\r\n      return raw.toFixed(decimals, BigNumber.ROUND_DOWN).toString();\r\n    if (round && roundUp)\r\n      return raw.toFixed(decimals, BigNumber.ROUND_UP).toString();\r\n\r\n    return raw.toFixed(decimals).toString();\r\n  } catch (e) {\r\n    return '--';\r\n  }\r\n}\r\n\r\nexport function displayFixedPercent(raw, decimals = 3, round = true) {\r\n  try {\r\n    const value = displayFixedValue(displayPercentValue(raw), decimals, round);\r\n    if (isFinite(value) && new BigNumber(value).gt(0)) {\r\n      return value;\r\n    }\r\n    return '--';\r\n  } catch (e) {\r\n    return '--';\r\n  }\r\n}\r\n\r\n/**\r\n * @return {number}\r\n */\r\nexport function CdpNum(cdpId) {\r\n  if (cdpId === undefined) return 0;\r\n  return typeof cdpId === 'number'\r\n    ? cdpId\r\n    : typeof cdpId === 'object'\r\n    ? 0\r\n    : cdpId.hasOwnProperty('id')\r\n    ? cdpId.id\r\n    : 0;\r\n}\r\n\r\n// Calculations\r\nexport function bnOver(one, two, three) {\r\n  return toBigNumber(one).times(toBigNumber(two)).div(toBigNumber(three));\r\n}\r\n\r\nexport function maxDai(ethPrice, ethCollateral, liquidationRatio, debtValue) {\r\n  return bnOver(\r\n    toBigNumber(ethPrice),\r\n    toBigNumber(ethCollateral),\r\n    toBigNumber(liquidationRatio)\r\n  ).minus(toBigNumber(debtValue));\r\n}\r\n\r\nexport function maxPethDraw(\r\n  pethCollateral,\r\n  liquidationRatio,\r\n  debtValue,\r\n  pethPrice,\r\n  pethMin = 0\r\n) {\r\n  return toBigNumber(pethCollateral)\r\n    .minus(\r\n      bnOver(\r\n        toBigNumber(liquidationRatio).plus(0.001),\r\n        toBigNumber(debtValue),\r\n        toBigNumber(pethPrice)\r\n      )\r\n    )\r\n    .minus(toBigNumber(pethMin).times(1.0));\r\n}\r\n\r\nexport function maxEthDraw(\r\n  ethCollateral,\r\n  liquidationRatio,\r\n  debtValue,\r\n  ethPrice,\r\n  minEth = 0\r\n) {\r\n  return toBigNumber(ethCollateral)\r\n    .minus(\r\n      bnOver(\r\n        toBigNumber(liquidationRatio),\r\n        toBigNumber(debtValue),\r\n        toBigNumber(ethPrice)\r\n      )\r\n    )\r\n    .minus(toBigNumber(minEth).times(1.0));\r\n}\r\n\r\nexport function calcCollatRatio(ethPrice, ethQty, daiQty) {\r\n  return bnOver(toBigNumber(ethPrice), ethQty, daiQty);\r\n}\r\n\r\nexport function calcLiquidationPrice(\r\n  ethQty,\r\n  daiQty,\r\n  ethPrice,\r\n  liquidationRatio\r\n) {\r\n  const getInt = parseInt(ethPrice);\r\n  for (let i = getInt; i > 0; i--) {\r\n    const atValue = bnOver(i, ethQty, daiQty).lte(\r\n      toBigNumber(liquidationRatio)\r\n    );\r\n    if (atValue) {\r\n      return i;\r\n    }\r\n  }\r\n  for (let i = 100; i > 0; i--) {\r\n    const atValue = bnOver(i / 100, ethQty, daiQty).lte(\r\n      toBigNumber(liquidationRatio)\r\n    );\r\n    if (atValue) {\r\n      return i / 100;\r\n    }\r\n  }\r\n  return toBigNumber(0.01);\r\n}\r\n\r\nexport function checkAllowance(web3, tokenAddress, userAddress, proxyAddress) {\r\n  const contract = new web3.eth.contract(ERC20, tokenAddress);\r\n  return contract.methods.allowance(userAddress, proxyAddress).call();\r\n}\r\n","import {\r\n  addresses,\r\n  Vat,\r\n  Spotter,\r\n  GetCdps,\r\n  CdpManager,\r\n  ProxyRegistry\r\n} from '../makerHelpers';\r\nimport assert from 'assert';\r\n\r\nfunction padRight(string, chars, sign) {\r\n  return string + new Array(chars - string.length + 1).join(sign ? sign : '0');\r\n}\r\n\r\nfunction toHex(str, { with0x = true, rightPadding = 64 } = {}) {\r\n  let result = '';\r\n  for (let i = 0; i < str.length; i++) {\r\n    result += str.charCodeAt(i).toString(16);\r\n  }\r\n  if (rightPadding > 0) result = padRight(result, rightPadding);\r\n  return with0x ? '0x' + result : result;\r\n}\r\n\r\nfunction stringToBytes(str) {\r\n  return '0x' + Buffer.from(str).toString('hex');\r\n}\r\n\r\nfunction bytesToString(hex) {\r\n  return Buffer.from(hex.replace(/^0x/, ''), 'hex')\r\n    .toString()\r\n    .replace(/\\x00/g, ''); // eslint-disable-line no-control-regex\r\n}\r\n\r\nexport async function getProxy() {\r\n  const proxyReg = new this.web3.eth.Contract(\r\n    ProxyRegistry,\r\n    addresses.PROXY_REGISTRY\r\n  );\r\n\r\n  let proxy = await proxyReg.methods.proxies(this.account.address).call();\r\n  if (proxy === '0x0000000000000000000000000000000000000000') {\r\n    proxy = null;\r\n  }\r\n  return proxy;\r\n}\r\n\r\nexport async function getCdpIds(web3, proxyAddress) {\r\n  const contract = new web3.eth.Contract(GetCdps, addresses.GET_CDPS);\r\n  const results = await contract.methods\r\n    .getCdpsDesc(addresses.CDP_MANAGER, proxyAddress)\r\n    .call();\r\n  const ids = results.ids;\r\n  const ilks = results.ilks;\r\n  assert(ids.length === ilks.length, 'ids and ilks must be the same length');\r\n  return ids.map((id, index) => {\r\n    return { id: parseInt(id), ilk: bytesToString(ilks[index]) };\r\n  });\r\n}\r\n\r\nexport async function getDustValue(web3, symbol) {\r\n  const contract = new web3.eth.Contract(Vat, addresses.MCD_VAT);\r\n\r\n  return await contract.methods.ilks(toHex(symbol)).call();\r\n}\r\n\r\nexport async function getParValue(web3) {\r\n  const contract = new web3.eth.Contract(Spotter, addresses.MCD_SPOT);\r\n\r\n  return await contract.methods.par().call();\r\n}\r\n\r\nexport async function getUrns(web3, id, name) {\r\n  try {\r\n    const contract = new web3.eth.Contract(CdpManager, addresses.CDP_MANAGER);\r\n    const vat = new web3.eth.Contract(Vat, addresses.MCD_VAT);\r\n    const urn = await contract.methods.urns(id).call();\r\n    const result = await vat.methods.urns(stringToBytes(name), urn).call();\r\n    return result;\r\n  } catch (e) {\r\n    // eslint-disable-next-line\r\n    console.log(e);\r\n  }\r\n}\r\n","import { addresses, Vat, Spotter, GetCdps, CdpManager } from '../makerHelpers';\r\nimport assert from 'assert';\r\n\r\nfunction padRight(string, chars, sign) {\r\n  return string + new Array(chars - string.length + 1).join(sign ? sign : '0');\r\n}\r\n\r\nfunction toHex(str, { with0x = true, rightPadding = 64 } = {}) {\r\n  let result = '';\r\n  for (let i = 0; i < str.length; i++) {\r\n    result += str.charCodeAt(i).toString(16);\r\n  }\r\n  if (rightPadding > 0) result = padRight(result, rightPadding);\r\n  return with0x ? '0x' + result : result;\r\n}\r\n\r\nfunction stringToBytes(str) {\r\n  return '0x' + Buffer.from(str).toString('hex');\r\n}\r\n\r\nfunction bytesToString(hex) {\r\n  return Buffer.from(hex.replace(/^0x/, ''), 'hex')\r\n    .toString()\r\n    .replace(/\\x00/g, ''); // eslint-disable-line no-control-regex\r\n}\r\n\r\nexport async function getCdpIds(web3, proxyAddress) {\r\n  const contract = new web3.eth.Contract(GetCdps, addresses.GET_CDPS);\r\n  const results = await contract.methods\r\n    .getCdpsDesc(addresses.CDP_MANAGER, proxyAddress)\r\n    .call();\r\n  const ids = results.ids;\r\n  const ilks = results.ilks;\r\n  assert(ids.length === ilks.length, 'ids and ilks must be the same length');\r\n  const collected = ids.map((id, index) => {\r\n    return { id: parseInt(id), ilk: bytesToString(ilks[index]) };\r\n  });\r\n  return collected;\r\n}\r\n\r\nexport async function getDustValue(web3, symbol) {\r\n  const contract = new web3.eth.Contract(Vat, addresses.MCD_VAT);\r\n\r\n  return await contract.methods.ilks(toHex(symbol)).call();\r\n}\r\n\r\nexport async function getParValue(web3) {\r\n  const contract = new web3.eth.Contract(Spotter, addresses.MCD_SPOT);\r\n\r\n  return await contract.methods.par().call();\r\n}\r\n\r\nexport async function getUrns(web3, id, name) {\r\n  try {\r\n    const contract = new web3.eth.Contract(CdpManager, addresses.CDP_MANAGER);\r\n    const vat = new web3.eth.Contract(Vat, addresses.MCD_VAT);\r\n    const urn = await contract.methods.urns(id).call();\r\n    const result = await vat.methods.urns(stringToBytes(name), urn).call();\r\n    return result;\r\n  } catch (e) {\r\n    // eslint-disable-next-line\r\n    console.log(e);\r\n  }\r\n}\r\n"],"sourceRoot":""}