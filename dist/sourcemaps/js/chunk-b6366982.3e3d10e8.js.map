{"version":3,"sources":["webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/SwapContainer.vue?a1d1","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/components/SignatureModal/SignatureModal.vue?b58f","webpack:///src/layouts/InterfaceLayout/containers/SwapContainer/components/SignatureModal/SignatureModal.vue","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/components/SignatureModal/SignatureModal.vue?6ae3","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/components/SignatureModal/SignatureModal.vue","webpack:///src/layouts/InterfaceLayout/containers/SwapContainer/SwapContainer.vue","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/SwapContainer.vue?45b7","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/SwapContainer.vue","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/SwapContainer.vue?5a0f","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/components/SignatureModal/SignatureModal.vue?09b5"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","directives","name","rawName","value","bityExitToFiat","expression","ref","attrs","selectedProvider","swapDetails","currentAddress","on","resetSwapState","swap","stringToSign","sendSignedCallback","$t","_v","_s","currency","toCurrency","_e","tokenBalances","fromCurrency","swapAll","fromArray","overrideFrom","getTokenAddress","setFromCurrency","domProps","$event","target","composing","fromValue","amountChanged","fromBelowMinAllowed","hasEnough","gasNotice","fromAboveMaxAllowed","flipCurrencies","images","toArray","overrideTo","setToCurrency","toValue","toBelowMinAllowed","toAboveMaxAllowed","isExitToFiat","isBityCryptoToCrypto","overrideAddress","setToAddress","validAddress","unableToValidate","baseCurrency","setExitFromAddress","validExitAddress","unableToValidateExit","setRefundAddress","validRefundAddress","unableToValidateRefund","$tc","loadingError","haveProviderRates","providerList","noProvidersPair","loadingData","providersFound","switchCurrencyOrder","supportedProviders","providerSelectedName","setSelectedProvider","finalizingSwap","class","validSwap","swapConfirmationModalOpen","reset","exitSourceAddress","exitToFiatCallback","exitToFiatAbort","staticRenderFns","signature","sign","props","type","String","default","sendSigned","Function","computed","methods","web3","eth","component","components","InterfaceContainerTitle","SwapCurrencyPicker","SwapAddressSelector","ProvidersRadioSelector","SwapConfirmationModal","SwapExitToFiat","SwapSendToModal","SignatureModal","tokensWithBalance","Array","data","MARKET_IMPACT_CUTOFF","signedString","toAddress","refundAddress","exitFromAddress","displayToValue","displayFromValue","invalidFrom","lastBestRate","lastFeeEstimate","bitySpecialCurrencies","warningCurrencies","currencyDetails","kybernetowrk","bity","visaMaster","providerData","providerRatesRecieved","tempStatuses","providerNames","fiatCurrenciesArray","ratesRetrived","issueRecievingRates","moreEthNeeded","recalculating","showWarning","debounceUpdateEstimate","debounceDoThing","bestRate","length","provider","find","entry","errorLogger","e","checkBityMax","maxValue","includes","isProvider","showRefundAddress","allAddressesValid","validBaseToAddress","watch","mounted","account","address","utils","_","debounce","debounceReviseRateEstimate","updateRateEstimate","isTrue","to","symbol","from","updateEstimate","convertToTokenBase","getBalance","setToCurrencyBuilder","setFromCurrencyBuilder","simplex","direction","fromCur","toCur","fromVal","intermediateGasCheck","gt","openConfirmModal","dataForInitialization","maybeToken","$refs","swapConfirmation","swapconfirmation","show","Error","swapSendTo"],"mappings":"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","file":"js/chunk-b6366982.3e3d10e8.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"swap-container\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.bityExitToFiat),expression:\"!bityExitToFiat\"}]},[_c('swap-confirmation-modal',{ref:\"swapConfirmation\",attrs:{\"selected-provider\":_vm.selectedProvider,\"swap-details\":_vm.swapDetails,\"current-address\":_vm.currentAddress},on:{\"swapStarted\":_vm.resetSwapState}}),_c('swap-send-to-modal',{ref:\"swapSendTo\",attrs:{\"selected-provider\":_vm.selectedProvider,\"swap-details\":_vm.swapDetails,\"current-address\":_vm.currentAddress,\"swap\":_vm.swap},on:{\"swapStarted\":_vm.resetSwapState}}),_c('signature-modal',{ref:\"signatureModal\",attrs:{\"signature\":_vm.stringToSign,\"send-signed\":_vm.sendSignedCallback}}),_c('div',{staticClass:\"title-block\"},[_c('interface-container-title',{attrs:{\"title\":_vm.$t('common.swap')}})],1),(_vm.showWarning)?_c('div',{staticClass:\"swap-warning-message\"},[_vm._v(\" \"+_vm._s(_vm.$t('swap.warning.currency-warning', { currency: _vm.toCurrency }))+\" \")]):_vm._e(),_c('div',{staticClass:\"form-content-container\"},[_c('div',{staticClass:\"send-form\"},[_c('div',{staticClass:\"form-block amount-to-address\"},[_c('div',{staticClass:\"amount\"},[_c('div',{staticClass:\"title title-and-copy\"},[_c('h4',[_vm._v(_vm._s(_vm.$t('swap.from')))]),(_vm.tokenBalances[_vm.fromCurrency] > 0)?_c('p',{staticClass:\"all-button prevent-user-select\",on:{\"click\":_vm.swapAll}},[_vm._v(\" \"+_vm._s(_vm.$t('common.balance.total'))+\" \")]):_vm._e()]),_c('swap-currency-picker',{attrs:{\"currencies\":_vm.fromArray,\"override-currency\":_vm.overrideFrom,\"from-source\":true,\"swap-token-address\":_vm.getTokenAddress,\"page\":\"SwapContainerFrom\"},on:{\"selectedCurrency\":_vm.setFromCurrency}}),_c('div',{staticClass:\"the-form amount-number\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.fromValue),expression:\"fromValue\"}],attrs:{\"placeholder\":_vm.$t('swap.deposit-amount'),\"type\":\"number\",\"name\":\"\",\"value\":\"\",\"step\":\"any\"},domProps:{\"value\":(_vm.fromValue)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.fromValue=$event.target.value},function($event){return _vm.amountChanged('from')}]}})]),_c('div',{staticClass:\"error-message-container\"},[(_vm.fromBelowMinAllowed)?_c('p',[_vm._v(_vm._s(_vm.fromBelowMinAllowed))]):_vm._e(),(!_vm.hasEnough && !_vm.fromBelowMinAllowed)?_c('p',[_vm._v(\" \"+_vm._s(_vm.$t('swap.warning.not-enough-funds'))+\" \")]):_vm._e(),(_vm.gasNotice && _vm.fromCurrency === 'ETH')?_c('p',[_vm._v(\" \"+_vm._s(_vm.$t('swap.warning.not-enough-eth-gas'))+\" \")]):_vm._e(),(_vm.gasNotice && _vm.fromCurrency !== 'ETH')?_c('p',[_vm._v(\" \"+_vm._s(_vm.$t('swap.warning.not-enough-tx-fee'))+\" \")]):_vm._e(),(_vm.fromAboveMaxAllowed)?_c('p',[_vm._v(_vm._s(_vm.fromAboveMaxAllowed))]):_vm._e()])],1),_c('div',{staticClass:\"exchange-icon\",on:{\"click\":_vm.flipCurrencies}},[_c('img',{attrs:{\"src\":_vm.images.swap,\"alt\":\"\"}})]),_c('div',{staticClass:\"amount\"},[_c('div',{staticClass:\"title\"},[_c('h4',[_vm._v(_vm._s(_vm.$t('swap.to')))])]),_c('swap-currency-picker',{attrs:{\"currencies\":_vm.toArray,\"override-currency\":_vm.overrideTo,\"from-source\":false,\"swap-token-address\":_vm.getTokenAddress,\"page\":\"SwapContainerTo\"},on:{\"selectedCurrency\":_vm.setToCurrency}}),_c('div',{staticClass:\"the-form amount-number\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.toValue),expression:\"toValue\"}],attrs:{\"placeholder\":_vm.$t('swap.recieve-amount'),\"type\":\"number\",\"name\":\"\",\"value\":\"\",\"step\":\"any\"},domProps:{\"value\":(_vm.toValue)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.toValue=$event.target.value},function($event){return _vm.amountChanged('to')}]}})]),_c('div',{staticClass:\"error-message-container\"},[(_vm.toBelowMinAllowed)?_c('p',[_vm._v(_vm._s(_vm.toBelowMinAllowed))]):_vm._e(),(_vm.toAboveMaxAllowed)?_c('p',[_vm._v(_vm._s(_vm.toAboveMaxAllowed))]):_vm._e()])],1)])]),(!_vm.isExitToFiat && !_vm.isBityCryptoToCrypto())?_c('div',{staticClass:\"send-form\"},[_c('div',{staticClass:\"the-form gas-amount\"},[_c('swap-address-selector',{attrs:{\"currency\":_vm.toCurrency,\"current-address\":_vm.currentAddress,\"copybutton\":true,\"title\":_vm.$t('sendTx.to-addr'),\"clear-address\":_vm.overrideAddress},on:{\"toAddress\":_vm.setToAddress,\"validAddress\":function($event){_vm.validAddress = $event},\"unableToValidate\":function($event){_vm.unableToValidate = $event}}})],1)]):_vm._e(),(!_vm.isExitToFiat && _vm.isBityCryptoToCrypto(_vm.fromCurrency))?_c('div',{staticClass:\"send-form\"},[_c('div',{staticClass:\"the-form gas-amount\"},[_vm._v(\" Amount will be sent to your current wallet address. \")])]):_vm._e(),(_vm.isExitToFiat && _vm.fromCurrency !== _vm.baseCurrency)?_c('div',{staticClass:\"send-form\"},[_c('div',{staticClass:\"the-form gas-amount\"},[_c('swap-address-selector',{attrs:{\"currency\":_vm.fromCurrency,\"current-address\":_vm.currentAddress,\"copybutton\":true,\"clear-address\":_vm.overrideAddress,\"title\":_vm.$t('sendTx.from-addr')},on:{\"toAddress\":_vm.setExitFromAddress,\"validAddress\":function($event){_vm.validExitAddress = $event},\"unableToValidate\":function($event){_vm.unableToValidateExit = $event}}})],1)]):_vm._e(),(_vm.showRefundAddress)?_c('div',{staticClass:\"send-form\"},[_c('div',{staticClass:\"the-form gas-amount\"},[_c('swap-address-selector',{attrs:{\"currency\":_vm.fromCurrency,\"current-address\":_vm.currentAddress,\"copybutton\":true,\"clear-address\":_vm.overrideAddress,\"title\":_vm.$t('swap.refund', { currency: _vm.fromCurrency })},on:{\"toAddress\":_vm.setRefundAddress,\"validAddress\":function($event){_vm.validRefundAddress = $event},\"unableToValidate\":function($event){_vm.unableToValidateRefund = $event}}})],1)]):_vm._e(),_c('div',{staticClass:\"send-form\"},[_c('div',{staticClass:\"title-container\"},[_c('div',{staticClass:\"title title-and-copy\"},[_c('h4',[_vm._v(_vm._s(_vm.$tc('swap.providers.string', 2)))])])]),_c('providers-radio-selector',{attrs:{\"loading-provider-error\":_vm.loadingError,\"loading-provider-rates\":!_vm.haveProviderRates,\"provider-data\":_vm.providerList,\"from-value\":+_vm.fromValue,\"to-value\":+_vm.toValue,\"no-providers-pair\":_vm.noProvidersPair,\"loading-data\":_vm.loadingData,\"providers-found\":_vm.providersFound,\"provider-selected\":_vm.selectedProvider,\"switch-currency-order\":_vm.switchCurrencyOrder,\"all-supported-providers\":_vm.supportedProviders,\"provider-selected-name\":_vm.providerSelectedName},on:{\"selectedProvider\":_vm.setSelectedProvider}})],1),_c('div',{staticClass:\"fee-notice\"},[(_vm.gasNotice && _vm.fromCurrency === 'ETH')?_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('swap.warning.not-enough-eth-gas')))]):_vm._e(),(_vm.gasNotice && _vm.fromCurrency !== 'ETH')?_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('swap.warning.not-enough-tx-fee')))]):_vm._e()]),_c('div',{staticClass:\"submit-button-container\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.finalizingSwap),expression:\"finalizingSwap\"}],staticClass:\"disabled submit-button large-round-button-green-filled clickable\"},[_c('i',{staticClass:\"fa fa-spinner fa-spin\"}),_vm._v(\" \"+_vm._s(_vm.$t('swap.button-loading'))+\" \")]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.finalizingSwap),expression:\"!finalizingSwap\"}],class:[\n            _vm.validSwap ? '' : 'disabled',\n            'submit-button large-round-button-green-filled clickable'\n          ],on:{\"click\":_vm.swapConfirmationModalOpen}},[(_vm.recalculating)?_c('span',[_vm._v(_vm._s(_vm.$t('swap.recalculating')))]):_c('span',[_vm._v(_vm._s(_vm.$t('common.continue')))]),_c('i',{staticClass:\"fa fa-long-arrow-right\",attrs:{\"aria-hidden\":\"true\"}})]),_c('div',{staticClass:\"clear-all-btn\",on:{\"click\":function($event){return _vm.reset()}}},[_vm._v(\" \"+_vm._s(_vm.$t('common.clear-all'))+\" \")])])])],1),(_vm.bityExitToFiat)?_c('swap-exit-to-fiat',{attrs:{\"swap-details\":_vm.swapDetails,\"exit-from-address\":_vm.exitSourceAddress,\"exit-to-fiat-callback\":_vm.exitToFiatCallback},on:{\"backButtonClick\":_vm.exitToFiatAbort}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-modal',{ref:\"signatureModal\",staticClass:\"bootstrap-modal\",attrs:{\"title\":_vm.$t('swap.address-verification'),\"hide-footer\":\"\",\"centered\":\"\",\"static\":\"\",\"lazy\":\"\"}},[_c('div',{staticClass:\"modal-contents\"},[_c('div',[_c('div',{staticClass:\"copy-container\"},[_c('h4',[_vm._v(_vm._s(_vm.$t('swap.message-to-sign')))])]),_vm._v(\" \"+_vm._s(_vm.signature)+\" \"),_c('div',{staticClass:\"button-container\"},[_c('button',{staticClass:\"submit-button large-round-button-green-filled clickable\",on:{\"click\":function($event){return _vm.sign()}}},[_vm._v(\" \"+_vm._s(_vm.$t('swap.proceed-to-sign'))+\" \")])])])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <b-modal\r\n      ref=\"signatureModal\"\r\n      :title=\"$t('swap.address-verification')\"\r\n      hide-footer\r\n      centered\r\n      class=\"bootstrap-modal\"\r\n      static\r\n      lazy\r\n    >\r\n      <div class=\"modal-contents\">\r\n        <div>\r\n          <div class=\"copy-container\">\r\n            <h4>{{ $t('swap.message-to-sign') }}</h4>\r\n          </div>\r\n          {{ signature }}\r\n          <div class=\"button-container\">\r\n            <button\r\n              class=\"submit-button large-round-button-green-filled clickable\"\r\n              @click=\"sign()\"\r\n            >\r\n              {{ $t('swap.proceed-to-sign') }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Toast } from '@/helpers';\r\nimport { mapState } from 'vuex';\r\nexport default {\r\n  props: {\r\n    signature: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    sendSigned: {\r\n      type: Function,\r\n      default: function () {}\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState('main', ['account', 'web3'])\r\n  },\r\n  methods: {\r\n    sign() {\r\n      try {\r\n        this.web3.eth\r\n          .sign(this.signature, this.account.address)\r\n          .then(signed => {\r\n            this.sendSigned(signed);\r\n            this.$refs.signatureModal.hide();\r\n          })\r\n          .catch(e => {\r\n            Toast.responseHandler(e, Toast.ERROR);\r\n          });\r\n      } catch (e) {\r\n        Toast.responseHandler(e, Toast.ERROR);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import 'SignatureModal.scss';\r\n</style>\r\n","import mod from \"-!../../../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SignatureModal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SignatureModal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SignatureModal.vue?vue&type=template&id=dd6cfd3c&scoped=true&\"\nimport script from \"./SignatureModal.vue?vue&type=script&lang=js&\"\nexport * from \"./SignatureModal.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SignatureModal.vue?vue&type=style&index=0&id=dd6cfd3c&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"dd6cfd3c\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div class=\"swap-container\">\r\n    <div v-show=\"!bityExitToFiat\">\r\n      <swap-confirmation-modal\r\n        ref=\"swapConfirmation\"\r\n        :selected-provider=\"selectedProvider\"\r\n        :swap-details=\"swapDetails\"\r\n        :current-address=\"currentAddress\"\r\n        @swapStarted=\"resetSwapState\"\r\n      />\r\n\r\n      <swap-send-to-modal\r\n        ref=\"swapSendTo\"\r\n        :selected-provider=\"selectedProvider\"\r\n        :swap-details=\"swapDetails\"\r\n        :current-address=\"currentAddress\"\r\n        :swap=\"swap\"\r\n        @swapStarted=\"resetSwapState\"\r\n      />\r\n\r\n      <signature-modal\r\n        ref=\"signatureModal\"\r\n        :signature=\"stringToSign\"\r\n        :send-signed=\"sendSignedCallback\"\r\n      />\r\n\r\n      <div class=\"title-block\">\r\n        <interface-container-title :title=\"$t('common.swap')\" />\r\n      </div>\r\n      <div v-if=\"showWarning\" class=\"swap-warning-message\">\r\n        {{ $t('swap.warning.currency-warning', { currency: toCurrency }) }}\r\n      </div>\r\n      <div class=\"form-content-container\">\r\n        <div class=\"send-form\">\r\n          <div class=\"form-block amount-to-address\">\r\n            <div class=\"amount\">\r\n              <div class=\"title title-and-copy\">\r\n                <h4>{{ $t('swap.from') }}</h4>\r\n                <p\r\n                  v-if=\"tokenBalances[fromCurrency] > 0\"\r\n                  class=\"all-button prevent-user-select\"\r\n                  @click=\"swapAll\"\r\n                >\r\n                  {{ $t('common.balance.total') }}\r\n                </p>\r\n              </div>\r\n              <swap-currency-picker\r\n                :currencies=\"fromArray\"\r\n                :override-currency=\"overrideFrom\"\r\n                :from-source=\"true\"\r\n                :swap-token-address=\"getTokenAddress\"\r\n                page=\"SwapContainerFrom\"\r\n                @selectedCurrency=\"setFromCurrency\"\r\n              />\r\n              <div class=\"the-form amount-number\">\r\n                <input\r\n                  v-model=\"fromValue\"\r\n                  :placeholder=\"$t('swap.deposit-amount')\"\r\n                  type=\"number\"\r\n                  name\r\n                  value\r\n                  step=\"any\"\r\n                  @input=\"amountChanged('from')\"\r\n                />\r\n              </div>\r\n              <div class=\"error-message-container\">\r\n                <p v-if=\"fromBelowMinAllowed\">{{ fromBelowMinAllowed }}</p>\r\n                <p v-if=\"!hasEnough && !fromBelowMinAllowed\">\r\n                  {{ $t('swap.warning.not-enough-funds') }}\r\n                </p>\r\n                <p v-if=\"gasNotice && fromCurrency === 'ETH'\">\r\n                  {{ $t('swap.warning.not-enough-eth-gas') }}\r\n                </p>\r\n                <p v-if=\"gasNotice && fromCurrency !== 'ETH'\">\r\n                  {{ $t('swap.warning.not-enough-tx-fee') }}\r\n                </p>\r\n                <p v-if=\"fromAboveMaxAllowed\">{{ fromAboveMaxAllowed }}</p>\r\n              </div>\r\n            </div>\r\n            <div class=\"exchange-icon\" @click=\"flipCurrencies\">\r\n              <img :src=\"images.swap\" alt />\r\n            </div>\r\n            <div class=\"amount\">\r\n              <div class=\"title\">\r\n                <h4>{{ $t('swap.to') }}</h4>\r\n              </div>\r\n              <swap-currency-picker\r\n                :currencies=\"toArray\"\r\n                :override-currency=\"overrideTo\"\r\n                :from-source=\"false\"\r\n                :swap-token-address=\"getTokenAddress\"\r\n                page=\"SwapContainerTo\"\r\n                @selectedCurrency=\"setToCurrency\"\r\n              />\r\n              <div class=\"the-form amount-number\">\r\n                <input\r\n                  v-model=\"toValue\"\r\n                  :placeholder=\"$t('swap.recieve-amount')\"\r\n                  type=\"number\"\r\n                  name\r\n                  value\r\n                  step=\"any\"\r\n                  @input=\"amountChanged('to')\"\r\n                />\r\n              </div>\r\n              <div class=\"error-message-container\">\r\n                <p v-if=\"toBelowMinAllowed\">{{ toBelowMinAllowed }}</p>\r\n                <p v-if=\"toAboveMaxAllowed\">{{ toAboveMaxAllowed }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- form-block amount-to-address -->\r\n        </div>\r\n\r\n        <div v-if=\"!isExitToFiat && !isBityCryptoToCrypto()\" class=\"send-form\">\r\n          <div class=\"the-form gas-amount\">\r\n            <swap-address-selector\r\n              :currency=\"toCurrency\"\r\n              :current-address=\"currentAddress\"\r\n              :copybutton=\"true\"\r\n              :title=\"$t('sendTx.to-addr')\"\r\n              :clear-address=\"overrideAddress\"\r\n              @toAddress=\"setToAddress\"\r\n              @validAddress=\"validAddress = $event\"\r\n              @unableToValidate=\"unableToValidate = $event\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          v-if=\"!isExitToFiat && isBityCryptoToCrypto(fromCurrency)\"\r\n          class=\"send-form\"\r\n        >\r\n          <div class=\"the-form gas-amount\">\r\n            Amount will be sent to your current wallet address.\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          v-if=\"isExitToFiat && fromCurrency !== baseCurrency\"\r\n          class=\"send-form\"\r\n        >\r\n          <div class=\"the-form gas-amount\">\r\n            <swap-address-selector\r\n              :currency=\"fromCurrency\"\r\n              :current-address=\"currentAddress\"\r\n              :copybutton=\"true\"\r\n              :clear-address=\"overrideAddress\"\r\n              :title=\"$t('sendTx.from-addr')\"\r\n              @toAddress=\"setExitFromAddress\"\r\n              @validAddress=\"validExitAddress = $event\"\r\n              @unableToValidate=\"unableToValidateExit = $event\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div v-if=\"showRefundAddress\" class=\"send-form\">\r\n          <div class=\"the-form gas-amount\">\r\n            <swap-address-selector\r\n              :currency=\"fromCurrency\"\r\n              :current-address=\"currentAddress\"\r\n              :copybutton=\"true\"\r\n              :clear-address=\"overrideAddress\"\r\n              :title=\"$t('swap.refund', { currency: fromCurrency })\"\r\n              @toAddress=\"setRefundAddress\"\r\n              @validAddress=\"validRefundAddress = $event\"\r\n              @unableToValidate=\"unableToValidateRefund = $event\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"send-form\">\r\n          <div class=\"title-container\">\r\n            <div class=\"title title-and-copy\">\r\n              <h4>{{ $tc('swap.providers.string', 2) }}</h4>\r\n            </div>\r\n          </div>\r\n          <providers-radio-selector\r\n            :loading-provider-error=\"loadingError\"\r\n            :loading-provider-rates=\"!haveProviderRates\"\r\n            :provider-data=\"providerList\"\r\n            :from-value=\"+fromValue\"\r\n            :to-value=\"+toValue\"\r\n            :no-providers-pair=\"noProvidersPair\"\r\n            :loading-data=\"loadingData\"\r\n            :providers-found=\"providersFound\"\r\n            :provider-selected=\"selectedProvider\"\r\n            :switch-currency-order=\"switchCurrencyOrder\"\r\n            :all-supported-providers=\"supportedProviders\"\r\n            :provider-selected-name=\"providerSelectedName\"\r\n            @selectedProvider=\"setSelectedProvider\"\r\n          />\r\n        </div>\r\n        <div class=\"fee-notice\">\r\n          <span v-if=\"gasNotice && fromCurrency === 'ETH'\">\r\n            {{ $t('swap.warning.not-enough-eth-gas') }}</span\r\n          >\r\n          <span v-if=\"gasNotice && fromCurrency !== 'ETH'\">\r\n            {{ $t('swap.warning.not-enough-tx-fee') }}</span\r\n          >\r\n        </div>\r\n        <div class=\"submit-button-container\">\r\n          <div\r\n            v-show=\"finalizingSwap\"\r\n            class=\"disabled submit-button large-round-button-green-filled clickable\"\r\n          >\r\n            <i class=\"fa fa-spinner fa-spin\" />\r\n            {{ $t('swap.button-loading') }}\r\n          </div>\r\n          <div\r\n            v-show=\"!finalizingSwap\"\r\n            :class=\"[\r\n              validSwap ? '' : 'disabled',\r\n              'submit-button large-round-button-green-filled clickable'\r\n            ]\"\r\n            @click=\"swapConfirmationModalOpen\"\r\n          >\r\n            <span v-if=\"recalculating\">{{ $t('swap.recalculating') }}</span>\r\n            <span v-else>{{ $t('common.continue') }}</span>\r\n            <i class=\"fa fa-long-arrow-right\" aria-hidden=\"true\" />\r\n          </div>\r\n          <div class=\"clear-all-btn\" @click=\"reset()\">\r\n            {{ $t('common.clear-all') }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <swap-exit-to-fiat\r\n      v-if=\"bityExitToFiat\"\r\n      :swap-details=\"swapDetails\"\r\n      :exit-from-address=\"exitSourceAddress\"\r\n      :exit-to-fiat-callback=\"exitToFiatCallback\"\r\n      @backButtonClick=\"exitToFiatAbort\"\r\n    ></swap-exit-to-fiat>\r\n  </div>\r\n</template>\r\n<script>\r\nimport BigNumber from 'bignumber.js';\r\nimport debug from 'debug';\r\nimport { mapState } from 'vuex';\r\n\r\nimport { Toast } from '@/helpers';\r\nimport ProvidersRadioSelector from './components/ProvidersRadioSelector';\r\nimport SwapAddressSelector from './components/SwapAddressSelector';\r\nimport InterfaceContainerTitle from '../../components/InterfaceContainerTitle';\r\nimport swapIcon from '@/assets/images/icons/swap-widget.svg';\r\nimport ImageKybernetowrk from '@/assets/images/etc/kybernetwork.png';\r\nimport ImageBity from '@/assets/images/etc/bity.png';\r\nimport ImageVisaMaster from '@/assets/images/etc/visamaster.png';\r\n\r\nimport SwapCurrencyPicker from './components/SwapCurrencyPicker';\r\nimport SwapConfirmationModal from './components/SwapConfirmationModal';\r\nimport SwapExitToFiat from './components/SwapExitToFiat';\r\nimport SwapSendToModal from './components/SwapSendToModal';\r\nimport SignatureModal from './components/SignatureModal';\r\n\r\nimport {\r\n  SwapProviders,\r\n  providers,\r\n  bestProviderForQuantity,\r\n  bestRateForQuantity,\r\n  isValidEntry,\r\n  providerNames,\r\n  supportedProviders,\r\n  BASE_CURRENCY,\r\n  fiat,\r\n  MIN_SWAP_AMOUNT,\r\n  ERC20\r\n} from '@/partners';\r\nimport ethUnit from 'ethjs-unit';\r\n\r\nconst errorLogger = debug('v5:swapContainer');\r\n\r\nexport default {\r\n  components: {\r\n    'interface-container-title': InterfaceContainerTitle,\r\n    'swap-currency-picker': SwapCurrencyPicker,\r\n    'swap-address-selector': SwapAddressSelector,\r\n    'providers-radio-selector': ProvidersRadioSelector,\r\n    'swap-confirmation-modal': SwapConfirmationModal,\r\n    'swap-exit-to-fiat': SwapExitToFiat,\r\n    'swap-send-to-modal': SwapSendToModal,\r\n    'signature-modal': SignatureModal\r\n  },\r\n  props: {\r\n    tokensWithBalance: {\r\n      type: Array,\r\n      default: function () {\r\n        return [];\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      MARKET_IMPACT_CUTOFF: 10,\r\n      baseCurrency: BASE_CURRENCY,\r\n      stringToSign: '',\r\n      signedString: '',\r\n      providerSelectedName: '',\r\n      toAddress: '',\r\n      currentAddress: '',\r\n      refundAddress: '',\r\n      exitFromAddress: '',\r\n      fromCurrency: 'ETH',\r\n      toCurrency: 'ETH',\r\n      displayToValue: 1,\r\n      displayFromValue: 1,\r\n      fromValue: 1,\r\n      toValue: 1,\r\n      invalidFrom: 'none',\r\n      lastBestRate: 0,\r\n      lastFeeEstimate: new BigNumber(0),\r\n      bitySpecialCurrencies: ['BTC', 'REP'],\r\n      warningCurrencies: ['VET'],\r\n      selectedProvider: {},\r\n      swapDetails: {},\r\n      currencyDetails: {},\r\n      swap: new SwapProviders(\r\n        providers,\r\n        {\r\n          network: this.$store.state.main.network.type.name,\r\n          web3: this.$store.state.main.web3,\r\n          gasPrice: this.$store.state.main.gasPrice,\r\n          getRateForUnit: false\r\n        },\r\n        { tokensWithBalance: this.tokensWithBalance }\r\n      ),\r\n      images: {\r\n        kybernetowrk: ImageKybernetowrk,\r\n        bity: ImageBity,\r\n        visaMaster: ImageVisaMaster,\r\n        swap: swapIcon\r\n      },\r\n      toArray: [],\r\n      fromArray: [],\r\n      providerData: [],\r\n      tokenBalances: {},\r\n      providerRatesRecieved: [],\r\n      noProvidersPair: {},\r\n      providersFound: [],\r\n      tempStatuses: [],\r\n      overrideFrom: {},\r\n      overrideTo: {},\r\n      providerNames: providerNames,\r\n      supportedProviders: supportedProviders,\r\n      fiatCurrenciesArray: fiat.map(entry => entry.symbol),\r\n      finalizingSwap: false,\r\n      validAddress: true,\r\n      validRefundAddress: true,\r\n      validExitAddress: true,\r\n      ratesRetrived: false,\r\n      issueRecievingRates: false,\r\n      loadingData: true,\r\n      haveProviderRates: false,\r\n      loadingError: false,\r\n      switchCurrencyOrder: false,\r\n      bityExitToFiat: false,\r\n      gasNotice: false,\r\n      moreEthNeeded: false,\r\n      recalculating: true,\r\n      showWarning: false,\r\n      exitToFiatCallback: () => {},\r\n      sendSignedCallback: () => {},\r\n      debounceUpdateEstimate: {},\r\n      debounceDoThing: {},\r\n      unableToValidate: false,\r\n      unableToValidateExit: false,\r\n      unableToValidateRefund: false,\r\n      overrideAddress: false\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState('main', [\r\n      'account',\r\n      'ens',\r\n      'gasPrice',\r\n      'web3',\r\n      'network',\r\n      'online'\r\n    ]),\r\n    bestRate() {\r\n      try {\r\n        if (this.providerData.length > 0) {\r\n          if (this.selectedProvider.provider) {\r\n            return this.providerList.find(entry => {\r\n              return entry.provider === this.selectedProvider.provider;\r\n            }).rate;\r\n          }\r\n          return bestRateForQuantity([...this.providerList], this.fromValue);\r\n        }\r\n        return this.lastBestRate;\r\n      } catch (e) {\r\n        errorLogger(e);\r\n      }\r\n      return null;\r\n    },\r\n    fromBelowMinAllowed() {\r\n      if (new BigNumber(MIN_SWAP_AMOUNT).gt(new BigNumber(this.fromValue)))\r\n        return `${this.$t('swap.value-below-min')} ${MIN_SWAP_AMOUNT}`;\r\n      if (\r\n        new BigNumber(this.selectedProvider.minValue).gt(\r\n          new BigNumber(this.fromValue)\r\n        )\r\n      )\r\n        return this.$t('swap.value-below-min', {\r\n          value: this.selectedProvider.maxValue,\r\n          currency: this.fromCurrency\r\n        });\r\n      return false;\r\n    },\r\n    fromAboveMaxAllowed() {\r\n      if (this.selectedProvider.provider === this.providerNames.bity) {\r\n        if (this.checkBityMax) {\r\n          return this.$t('swap.value-above-max', {\r\n            value: this.selectedProvider.maxValue,\r\n            currency: this.fromCurrency\r\n          });\r\n        }\r\n        return false;\r\n      } else if (\r\n        new BigNumber(this.fromValue).gt(\r\n          new BigNumber(this.selectedProvider.maxValue)\r\n        ) &&\r\n        new BigNumber(this.selectedProvider.maxValue).gt(new BigNumber(0))\r\n      )\r\n        return this.$t('swap.value-above-max', {\r\n          value: this.selectedProvider.maxValue,\r\n          currency: this.fromCurrency\r\n        });\r\n      return false;\r\n    },\r\n    toBelowMinAllowed() {\r\n      if (new BigNumber(0).gte(new BigNumber(this.toValue)))\r\n        return this.$t('swap.below-min-swap');\r\n      return false;\r\n    },\r\n    toAboveMaxAllowed() {\r\n      if (this.checkBityMax) return this.$t('swap.above-max-swap');\r\n      return false;\r\n    },\r\n    providerList() {\r\n      if (this.providerData.length > 0) {\r\n        return bestProviderForQuantity([...this.providerData], this.fromValue);\r\n      }\r\n      return [];\r\n    },\r\n    isExitToFiat() {\r\n      return this.fiatCurrenciesArray.includes(this.toCurrency);\r\n    },\r\n    validSwap() {\r\n      // initial chack.  will provide an alert on the next screen if no address is provided\r\n      if (this.recalculating) return false;\r\n      if (this.gasNotice) return false;\r\n      const canExit =\r\n        this.isExitToFiat && this.fromCurrency !== this.baseCurrency\r\n          ? this.exitFromAddress !== ''\r\n          : true;\r\n      return (\r\n        this.hasEnough &&\r\n        (this.toAddress !== '' || canExit) &&\r\n        this.allAddressesValid &&\r\n        this.selectedProvider.minValue <= +this.fromValue &&\r\n        (+this.fromValue <= this.selectedProvider.maxValue ||\r\n          this.selectedProvider.maxValue === 0)\r\n      );\r\n    },\r\n    checkBityMax() {\r\n      if (this.swap.isProvider(this.providerNames.bity)) {\r\n        return (\r\n          !this.swap\r\n            .getProvider(this.providerNames.bity)\r\n            .maxCheck(\r\n              this.fromCurrency,\r\n              this.fromValue,\r\n              this.toCurrency,\r\n              this.toValue\r\n            ) && this.selectedProvider.provider === this.providerNames.bity\r\n        );\r\n      }\r\n      return false;\r\n    },\r\n    showRefundAddress() {\r\n      return (\r\n        !SwapProviders.isToken(this.fromCurrency) &&\r\n        this.selectedProvider.provider === this.providerNames.changelly\r\n      );\r\n    },\r\n    allAddressesValid() {\r\n      const validBaseToAddress = this.toAddress !== '' && this.validAddress;\r\n\r\n      if (this.isExitToFiat) {\r\n        if (this.fromCurrency === this.baseCurrency) {\r\n          return true;\r\n        }\r\n        return this.exitFromAddress !== '' && this.validExitAddress;\r\n      }\r\n      if (this.showRefundAddress) {\r\n        if (\r\n          this.fromCurrency === this.baseCurrency ||\r\n          SwapProviders.isToken(this.fromCurrency)\r\n        ) {\r\n          const validRefundAddress =\r\n            this.refundAddress === '' && this.validRefundAddress;\r\n          return validBaseToAddress && validRefundAddress;\r\n        }\r\n        return SwapProviders.checkAddress(\r\n          this.refundAddress,\r\n          this.fromCurrency\r\n        );\r\n      }\r\n\r\n      return validBaseToAddress;\r\n    },\r\n    hasEnough() {\r\n      return this.swap.hasEnough(\r\n        this.fromCurrency,\r\n        this.fromValue,\r\n        this.baseCurrency,\r\n        this.tokenBalances,\r\n        this.account.balance\r\n      );\r\n    },\r\n    exitSourceAddress() {\r\n      return this.isExitToFiat && this.fromCurrency === this.baseCurrency\r\n        ? this.currentAddress\r\n        : this.exitFromAddress;\r\n    }\r\n  },\r\n  watch: {\r\n    ['gasPrice'](value) {\r\n      if (!this.selectedProvider) {\r\n        this.selectedProvider = {};\r\n      }\r\n      this.swap.updateGasPrice(this.selectedProvider.provider, value);\r\n    },\r\n    ['this.network.type.name']() {\r\n      this.swap.updateNetwork(this.network.type.name, this.web3);\r\n    },\r\n    ['swap.updateProviderRates']() {\r\n      try {\r\n        const { toArray, fromArray } = this.swap.buildInitialCurrencyArrays();\r\n        this.toArray = toArray;\r\n        this.fromArray = fromArray;\r\n      } catch (e) {\r\n        const { toArray, fromArray } = this.swap.initialCurrencyLists;\r\n        this.toArray = toArray;\r\n        this.fromArray = fromArray;\r\n      }\r\n    },\r\n    ['swap.haveProviderRates']() {\r\n      this.haveProviderRates = this.swap.ratesRetrieved;\r\n      const { toArray, fromArray } = this.swap.buildInitialCurrencyArrays();\r\n      this.toArray = toArray;\r\n      this.fromArray = fromArray;\r\n      this.lastBestRate = bestRateForQuantity(\r\n        [...this.providerList],\r\n        this.fromValue\r\n      );\r\n      this.updateRateEstimate(\r\n        this.fromCurrency,\r\n        this.toCurrency,\r\n        this.fromValue,\r\n        'from'\r\n      );\r\n    },\r\n    network(newVal) {\r\n      this.providerData = [];\r\n      this.haveProviderRates = false;\r\n      this.loadingData = false;\r\n      this.swap = new SwapProviders(\r\n        providers,\r\n        {\r\n          network: newVal.type.name,\r\n          web3: this.web3,\r\n          gasPrice: this.gasPrice,\r\n          getRateForUnit: false\r\n        },\r\n        { tokensWithBalance: this.tokensWithBalance }\r\n      );\r\n    }\r\n  },\r\n  mounted() {\r\n    const { toArray, fromArray } = this.swap.initialCurrencyLists;\r\n    this.toArray = toArray;\r\n    this.fromArray = fromArray;\r\n    this.currentAddress = this.account.address;\r\n    this.debounceUpdateEstimate = this.web3.utils._.debounce(\r\n      this.updateEstimate,\r\n      300\r\n    );\r\n    this.debounceReviseRateEstimate = this.web3.utils._.debounce(\r\n      this.updateRateEstimate,\r\n      2000\r\n    );\r\n  },\r\n  methods: {\r\n    getTokenAddress(currency) {\r\n      return this.swap.getTokenAddress(currency, true);\r\n    },\r\n    reset() {\r\n      this.lastFeeEstimate = new BigNumber(0);\r\n      this.gasNotice = false;\r\n      this.fromCurrency = 'BTC';\r\n      this.toCurrency = 'ETH';\r\n      this.overrideFrom = { name: 'Bitcoin', symbol: 'BTC' };\r\n      this.overrideTo = { name: 'Ether', symbol: 'ETH' };\r\n      this.fromValue = 1;\r\n      this.overrideAddress = !this.overrideAddress;\r\n      this.providerSelectedName = '';\r\n      this.toAddress = '';\r\n      this.refundAddress = '';\r\n      this.exitFromAddress = '';\r\n      this.updateRateEstimate(\r\n        this.fromCurrency,\r\n        this.toCurrency,\r\n        this.fromValue,\r\n        'from'\r\n      );\r\n      this.finalizingSwap = false;\r\n      this.validAddress = true;\r\n      this.issueRecievingRates = false;\r\n      this.loadingError = false;\r\n      this.switchCurrencyOrder = false;\r\n      this.bityExitToFiat = false;\r\n      this.sendSignedCallback = () => {};\r\n    },\r\n    isBityCryptoToCrypto(currency = 'BTC') {\r\n      const isTrue =\r\n        this.bitySpecialCurrencies.includes(currency) &&\r\n        this.selectedProvider.provider === this.providerNames.bity;\r\n      if (isTrue) {\r\n        this.setToAddress(this.currentAddress);\r\n        this.validAddress = true;\r\n        this.unableToValidate = false;\r\n      }\r\n      return isTrue;\r\n    },\r\n    flipCurrencies() {\r\n      this.providerSelectedName = '';\r\n      this.switchCurrencyOrder = true;\r\n      const origTo = this.toValue;\r\n      this.fromCurrency = this.currencyDetails.to.symbol;\r\n      this.toCurrency = this.currencyDetails.from.symbol;\r\n      this.overrideFrom = this.currencyDetails.to;\r\n      this.overrideTo = this.currencyDetails.from;\r\n      this.updateRateEstimate(\r\n        this.fromCurrency,\r\n        this.toCurrency,\r\n        origTo,\r\n        'from'\r\n      );\r\n      this.switchCurrencyOrder = false;\r\n    },\r\n    setSelectedProvider(provider) {\r\n      this.selectedProvider = this.providerList.find(entry => {\r\n        return entry.provider === provider;\r\n      });\r\n      if (!this.selectedProvider) {\r\n        this.selectedProvider = {};\r\n      }\r\n      this.providerSelectedName = this.selectedProvider.provider;\r\n      this.updateEstimate('from');\r\n    },\r\n    setToAddress(address) {\r\n      this.toAddress = address;\r\n    },\r\n    setRefundAddress(address) {\r\n      this.refundAddress = address;\r\n    },\r\n    setExitFromAddress(address) {\r\n      this.exitFromAddress = address;\r\n    },\r\n    swapAll() {\r\n      this.fromValue = this.swap.convertToTokenBase(\r\n        this.fromCurrency,\r\n        this.tokenBalances[this.fromCurrency]\r\n      );\r\n      this.amountChanged('from');\r\n    },\r\n    setFromCurrency(value, dir = 'from') {\r\n      this.providerSelectedName = '';\r\n      this.currencyDetails.from = value;\r\n      this.fromCurrency = value.symbol;\r\n      this.getBalance(this.fromCurrency);\r\n      this.toArray = this.swap.setToCurrencyBuilder(value);\r\n      this.updateRateEstimate(\r\n        this.fromCurrency,\r\n        this.toCurrency,\r\n        this.fromValue,\r\n        dir\r\n      );\r\n    },\r\n    setToCurrency(value, dir = 'to') {\r\n      this.providerSelectedName = '';\r\n      this.currencyDetails.to = value;\r\n      this.toCurrency = value.symbol;\r\n      this.fromArray = this.swap.setFromCurrencyBuilder(value);\r\n      this.updateRateEstimate(\r\n        this.fromCurrency,\r\n        this.toCurrency,\r\n        this.fromValue,\r\n        dir\r\n      );\r\n    },\r\n    async getBalance(currency) {\r\n      if (SwapProviders.isToken(currency) && currency !== this.baseCurrency) {\r\n        const balance = await new this.web3.eth.Contract(\r\n          ERC20,\r\n          this.swap.getTokenAddress(currency)\r\n        ).methods\r\n          .balanceOf(this.currentAddress)\r\n          .call();\r\n\r\n        this.$set(this.tokenBalances, currency, balance);\r\n      }\r\n    },\r\n    amountChanged(direction) {\r\n      if (\r\n        (isValidEntry(this.fromValue) && direction === 'from') ||\r\n        (isValidEntry(this.toValue) && direction === 'to')\r\n      ) {\r\n        this.recalculating = true;\r\n        if (\r\n          this.swap.getProvider(this.providerNames.simplex).currencies.fiat[\r\n            this.fromCurrency\r\n          ]\r\n        ) {\r\n          this.debounceUpdateEstimate(this.providerNames.simplex + direction);\r\n          const fromCur = this.fromCurrency;\r\n          const toCur = this.toCurrency;\r\n          const fromVal = this.fromValue;\r\n          this.debounceReviseRateEstimate(fromCur, toCur, fromVal, direction);\r\n        } else {\r\n          this.debounceUpdateEstimate(direction);\r\n          const fromCur = this.fromCurrency;\r\n          const toCur = this.toCurrency;\r\n          const fromVal = this.fromValue;\r\n          this.debounceReviseRateEstimate(fromCur, toCur, fromVal, direction);\r\n        }\r\n      }\r\n    },\r\n    async updateEstimate(input) {\r\n      if (this.simplexUpdate) {\r\n        this.simplexUpdate = false;\r\n        return;\r\n      }\r\n\r\n      let fromValue, toValue, simplexProvider, simplexRateDetails;\r\n      switch (input) {\r\n        case 'to':\r\n          this.fromValue = this.swap.calculateFromValue(\r\n            this.toValue,\r\n            this.bestRate,\r\n            this.fromCurrency\r\n          );\r\n          this.intermediateGasCheck();\r\n          this.gasCheck();\r\n          break;\r\n        case 'from':\r\n          this.toValue = this.swap.calculateToValue(\r\n            this.fromValue,\r\n            this.bestRate,\r\n            this.toCurrency\r\n          );\r\n          this.intermediateGasCheck();\r\n          this.gasCheck();\r\n          break;\r\n        case `${this.providerNames.simplex}to`:\r\n          this.simplexUpdate = true;\r\n          simplexProvider = this.swap.getProvider(this.providerNames.simplex);\r\n\r\n          if (\r\n            simplexProvider.canQuote(\r\n              this.fromValue,\r\n              this.toValue,\r\n              this.fromCurrency\r\n            )\r\n          ) {\r\n            simplexRateDetails = await simplexProvider.updateDigital(\r\n              this.fromCurrency,\r\n              this.toCurrency,\r\n              this.toValue\r\n            );\r\n\r\n            this.fromValue = simplexRateDetails.fromValue;\r\n            this.toValue = simplexRateDetails.toValue;\r\n          } else {\r\n            simplexRateDetails = await simplexProvider.updateFiat(\r\n              this.fromCurrency,\r\n              this.toCurrency,\r\n              -1\r\n            );\r\n\r\n            const rate = new BigNumber(simplexRateDetails.toValue)\r\n              .div(simplexRateDetails.fromValue)\r\n              .toString(10);\r\n\r\n            this.fromValue = this.swap.calculateFromValue(\r\n              this.toValue,\r\n              rate,\r\n              this.fromCurrency\r\n            );\r\n          }\r\n\r\n          break;\r\n        case `${this.providerNames.simplex}from`:\r\n          this.simplexUpdate = true;\r\n          simplexProvider = this.swap.getProvider(this.providerNames.simplex);\r\n          if (\r\n            simplexProvider.canQuote(\r\n              this.fromValue,\r\n              this.toValue,\r\n              this.fromCurrency\r\n            )\r\n          ) {\r\n            simplexRateDetails = await simplexProvider.updateFiat(\r\n              this.fromCurrency,\r\n              this.toCurrency,\r\n              this.fromValue\r\n            );\r\n\r\n            this.fromValue = simplexRateDetails.fromValue;\r\n            this.toValue = simplexRateDetails.toValue;\r\n          } else {\r\n            simplexRateDetails = await simplexProvider.updateFiat(\r\n              this.fromCurrency,\r\n              this.toCurrency,\r\n              -1\r\n            );\r\n\r\n            const rate = new BigNumber(simplexRateDetails.toValue)\r\n              .div(simplexRateDetails.fromValue)\r\n              .toString(10);\r\n\r\n            this.toValue = this.swap.calculateToValue(this.fromValue, rate);\r\n          }\r\n\r\n          break;\r\n        default:\r\n          toValue = this.swap.calculateToValue(this.fromValue, this.bestRate);\r\n          fromValue = this.swap.calculateFromValue(this.toValue, this.bestRate);\r\n          this.toValue = toValue;\r\n          this.fromValue = fromValue;\r\n          this.intermediateGasCheck();\r\n          this.gasCheck();\r\n          break;\r\n      }\r\n    },\r\n    async updateRateEstimate(fromCurrency, toCurrency, fromValue, to) {\r\n      if (this.haveProviderRates) {\r\n        this.showWarning = this.warningCurrencies.includes(toCurrency);\r\n        this.loadingData = true;\r\n        this.recalculating = true;\r\n        this.noProvidersPair = { fromCurrency, toCurrency };\r\n        this.selectedProvider = {}; // Reset the selected provider when new rate pair is choosen\r\n        this.providerData = [];\r\n        const {\r\n          providersFound,\r\n          callsToMake\r\n        } = await this.swap.updateRateEstimate(\r\n          fromCurrency,\r\n          toCurrency,\r\n          fromValue,\r\n          this.toValue\r\n        );\r\n        this.providersFound = providersFound;\r\n        const rawResults = await Promise.all(\r\n          callsToMake.map(func =>\r\n            func(fromCurrency, toCurrency, fromValue, this.toValue)\r\n          )\r\n        );\r\n        this.loadingData = false;\r\n        this.recalculating = false;\r\n        const results = rawResults.reduce((agg, result) => {\r\n          if (Array.isArray(result)) {\r\n            agg = [...agg, ...result];\r\n          } else {\r\n            agg.push(result);\r\n          }\r\n          return agg;\r\n        }, []);\r\n\r\n        if (\r\n          results.every(\r\n            entry =>\r\n              entry.fromCurrency === this.fromCurrency &&\r\n              entry.toCurrency === this.toCurrency\r\n          )\r\n        ) {\r\n          this.providerData = bestProviderForQuantity(\r\n            results.map(entry => {\r\n              if (+entry.rate > 0) {\r\n                return {\r\n                  provider: entry.provider,\r\n                  fromCurrency,\r\n                  fromValue: this.fromValue,\r\n                  toCurrency,\r\n                  rate: +entry.rate,\r\n                  minValue: entry.minValue || 0,\r\n                  maxValue: entry.maxValue || 0,\r\n                  computeConversion: _fromValue => {\r\n                    const decimals = this.fiatCurrenciesArray.includes(\r\n                      toCurrency\r\n                    )\r\n                      ? 2\r\n                      : 6;\r\n                    return new BigNumber(_fromValue)\r\n                      .times(entry.rate)\r\n                      .toFixed(decimals)\r\n                      .toString(10);\r\n                  },\r\n                  additional: entry.additional || {}\r\n                };\r\n              } else if (entry.provider === this.providerNames.changelly) {\r\n                Toast.responseHandler(\r\n                  this.$t('swap.notice.retrieve-changelly-rate-failed', {\r\n                    fromCurrency,\r\n                    toCurrency\r\n                  }),\r\n                  3\r\n                );\r\n              } else if (entry.provider === this.providerNames.bity) {\r\n                Toast.responseHandler(\r\n                  this.$t('swap.notice.retrieve-bity-rate-failed', {\r\n                    fromCurrency,\r\n                    toCurrency\r\n                  }),\r\n                  3\r\n                );\r\n              } else if (entry.provider === this.providerNames.kyber) {\r\n                Toast.responseHandler(\r\n                  this.$t('swap.notice.retrieve-kyber-rate-failed', {\r\n                    fromCurrency,\r\n                    toCurrency\r\n                  }),\r\n                  3\r\n                );\r\n              } else if (entry.provider === this.providerNames.simplex) {\r\n                Toast.responseHandler(\r\n                  this.$t('swap.notice.retrieve-simplex-rate-failed', {\r\n                    fromCurrency,\r\n                    toCurrency\r\n                  }),\r\n                  3\r\n                );\r\n              }\r\n            }),\r\n            fromValue\r\n          );\r\n          this.updateEstimate(to);\r\n        }\r\n      }\r\n    },\r\n    async checkForEnoughGas(swapDetails) {\r\n      let ethNeeded = new BigNumber(0);\r\n      this.lastFeeEstimate = new BigNumber(0);\r\n      const gasPrice = new BigNumber(ethUnit.toWei(this.gasPrice, 'gwei'));\r\n      if (\r\n        SwapProviders.isToken(swapDetails.fromCurrency) ||\r\n        SwapProviders.isToken(swapDetails.toCurrency)\r\n      ) {\r\n        if (Array.isArray(swapDetails.dataForInitialization)) {\r\n          for (let i = 0; i < swapDetails.dataForInitialization.length; i++) {\r\n            if (swapDetails.dataForInitialization[i].gas) {\r\n              this.lastFeeEstimate = this.lastFeeEstimate.plus(\r\n                gasPrice.times(swapDetails.dataForInitialization[i].gas)\r\n              );\r\n              ethNeeded = ethNeeded.plus(\r\n                new BigNumber(swapDetails.dataForInitialization[i].value)\r\n              );\r\n            } else {\r\n              const gas = await this.web3.eth.estimateGas(\r\n                swapDetails.dataForInitialization[i]\r\n              );\r\n              this.lastFeeEstimate = this.lastFeeEstimate.plus(\r\n                gasPrice.times(gas)\r\n              );\r\n              ethNeeded = ethNeeded.plus(\r\n                swapDetails.dataForInitialization[i].value\r\n              );\r\n            }\r\n          }\r\n        }\r\n        const enoughToContinue = new BigNumber(this.account.balance)\r\n          .minus(ethNeeded.plus(this.lastFeeEstimate))\r\n          .gt(0);\r\n\r\n        this.moreEthNeeded = new BigNumber(this.account.balance).lt(\r\n          this.lastFeeEstimate\r\n        );\r\n\r\n        if (!ethNeeded.gt(0)) {\r\n          this.lastFeeEstimate = new BigNumber(0);\r\n        }\r\n\r\n        return enoughToContinue;\r\n      }\r\n    },\r\n    intermediateGasCheck() {\r\n      if (this.fromCurrency === 'ETH' && this.lastFeeEstimate.gt(0)) {\r\n        this.gasNotice = new BigNumber(this.account.balance)\r\n          .minus(\r\n            new BigNumber(\r\n              new BigNumber(ethUnit.toWei(this.fromValue, 'ether'))\r\n            ).plus(this.lastFeeEstimate)\r\n          )\r\n          .lte(0);\r\n      } else {\r\n        this.gasNotice = false;\r\n      }\r\n    },\r\n    async gasCheck() {\r\n      try {\r\n        if (\r\n          !SwapProviders.isToken(this.fromCurrency) ||\r\n          !SwapProviders.isToken(this.toCurrency)\r\n        ) {\r\n          this.gasNotice = false;\r\n          return;\r\n        }\r\n        if (!this.selectedProvider.provider) {\r\n          this.gasNotice = false;\r\n          return;\r\n        }\r\n        const providerDetails = this.providerList.find(entry => {\r\n          return entry.provider === this.selectedProvider.provider;\r\n        });\r\n        let swapDetails = {\r\n          providerDetails: providerDetails,\r\n          fromValue: this.fromValue,\r\n          toValue: this.toValue,\r\n          toAddress: this.toAddress || this.currentAddress,\r\n          fromAddress: this.currentAddress,\r\n          refundAddress: SwapProviders.isToken(providerDetails.fromCurrency)\r\n            ? this.currentAddress\r\n            : this.refundAddress,\r\n          exitFromAddress:\r\n            this.isExitToFiat && this.fromCurrency === this.baseCurrency\r\n              ? this.currentAddress\r\n              : this.exitFromAddress\r\n        };\r\n        swapDetails = await this.swap.startSwap(swapDetails);\r\n        if (swapDetails.marketImpact) {\r\n          throw Error('marketImpactAbort');\r\n        }\r\n        const enoughForGas = await this.checkForEnoughGas(swapDetails);\r\n        if (!enoughForGas) {\r\n          throw Error('notEnoughWithGas');\r\n        }\r\n        this.gasNotice = false;\r\n      } catch (e) {\r\n        if (e.message === 'marketImpactAbort') {\r\n          this.finalizingSwap = false;\r\n          // Toast.responseHandler('liquidity-too-low', 1, true);\r\n          return;\r\n        } else if (e.message === 'notEnoughWithGas') {\r\n          this.finalizingSwap = false;\r\n          this.gasNotice = true;\r\n          // Toast.responseHandler('not-enough-eth-gas', 1, true);\r\n          return;\r\n        }\r\n        this.gasNotice = false;\r\n      }\r\n    },\r\n    async swapConfirmationModalOpen() {\r\n      try {\r\n        if (this.validSwap) {\r\n          this.finalizingSwap = true;\r\n          const providerDetails = this.providerList.find(entry => {\r\n            return entry.provider === this.selectedProvider.provider;\r\n          });\r\n          const swapDetails = {\r\n            providerDetails: providerDetails,\r\n            fromValue: this.fromValue,\r\n            toValue: this.toValue,\r\n            toAddress: this.toAddress || this.currentAddress,\r\n            fromAddress: this.currentAddress,\r\n            refundAddress: SwapProviders.isToken(providerDetails.fromCurrency)\r\n              ? this.currentAddress\r\n              : this.refundAddress,\r\n            exitFromAddress:\r\n              this.isExitToFiat && this.fromCurrency === this.baseCurrency\r\n                ? this.currentAddress\r\n                : this.exitFromAddress\r\n          };\r\n          this.swapDetails = await this.swap.startSwap(swapDetails);\r\n          if (this.swapDetails.marketImpact) {\r\n            throw Error('marketImpactAbort');\r\n          }\r\n          const enoughForGas = await this.checkForEnoughGas(this.swapDetails);\r\n          if (!enoughForGas) {\r\n            throw Error('notEnoughWithGas');\r\n          }\r\n          this.finalizingSwap = false;\r\n\r\n          if (this.swapDetails.isExitToFiat) {\r\n            this.bityExitToFiat = true;\r\n            this.exitToFiatCallback = swapDetailsExit => {\r\n              this.bityExitToFiat = false;\r\n              this.swapDetails = swapDetailsExit;\r\n              this.openConfirmModal(this.swapDetails);\r\n            };\r\n          } else if (\r\n            this.isBityCryptoToCrypto() ||\r\n            this.isBityCryptoToCrypto('REP')\r\n          ) {\r\n            this.stringToSign = this.swapDetails.dataForInitialization.messageToSign.body;\r\n            this.$refs.signatureModal.$refs.signatureModal.show();\r\n            this.sendSignedCallback = async signed => {\r\n              const response = await this.swap.extraActions(\r\n                this.providerNames.bity,\r\n                'sendSigned',\r\n                {\r\n                  signature: signed,\r\n                  signature_submission_url: this.swapDetails\r\n                    .dataForInitialization.messageToSign\r\n                    .signature_submission_url,\r\n                  statusId: this.swapDetails.dataForInitialization.id,\r\n                  token: this.swapDetails.dataForInitialization.token\r\n                }\r\n              );\r\n              this.swapDetails.providerAddress =\r\n                response.payment_details.crypto_address;\r\n              this.openConfirmModal(this.swapDetails);\r\n            };\r\n          } else {\r\n            this.openConfirmModal(this.swapDetails);\r\n          }\r\n        }\r\n      } catch (e) {\r\n        if (e.message === 'marketImpactAbort') {\r\n          this.finalizingSwap = false;\r\n          Toast.responseHandler('liquidity-too-low', 1, true);\r\n          return;\r\n        } else if (e.message === 'notEnoughWithGas') {\r\n          this.finalizingSwap = false;\r\n          this.gasNotice = true;\r\n          Toast.responseHandler('error-generating-swap', 1, true);\r\n          return;\r\n        }\r\n        //abort (empty response from provider or failure to finalize details)\r\n        else if (e.message === 'abort') {\r\n          this.finalizingSwap = false;\r\n          Toast.responseHandler('error-generating-swap', 1, true);\r\n          return;\r\n        }\r\n        this.$refs.swapConfirmation.$refs.swapconfirmation.hide();\r\n        this.$refs.swapSendTo.$refs.swapconfirmation.hide();\r\n        this.finalizingSwap = false;\r\n        errorLogger(e);\r\n        Toast.responseHandler(e, false);\r\n      }\r\n    },\r\n    openConfirmModal(swapDetails) {\r\n      if (swapDetails.dataForInitialization && swapDetails.maybeToken) {\r\n        this.$refs.swapConfirmation.$refs.swapconfirmation.show();\r\n      } else if (swapDetails.dataForInitialization && !swapDetails.maybeToken) {\r\n        this.$refs.swapSendTo.$refs.swapconfirmation.show();\r\n      } else {\r\n        throw Error(this.$t('swap.notice.error-finalizing'));\r\n      }\r\n    },\r\n    exitToFiatAbort() {\r\n      // get any component state values to temporarily persist, and reset swap state to state before exit to fiat selected.\r\n      this.bityExitToFiat = !this.bityExitToFiat;\r\n    },\r\n    resetSwapState() {\r\n      this.reset();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import 'SwapContainer.scss';\r\n</style>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SwapContainer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SwapContainer.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SwapContainer.vue?vue&type=template&id=047fff10&scoped=true&\"\nimport script from \"./SwapContainer.vue?vue&type=script&lang=js&\"\nexport * from \"./SwapContainer.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SwapContainer.vue?vue&type=style&index=0&id=047fff10&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"047fff10\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SwapContainer.vue?vue&type=style&index=0&id=047fff10&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SwapContainer.vue?vue&type=style&index=0&id=047fff10&lang=scss&scoped=true&\"","import mod from \"-!../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SignatureModal.vue?vue&type=style&index=0&id=dd6cfd3c&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SignatureModal.vue?vue&type=style&index=0&id=dd6cfd3c&lang=scss&scoped=true&\""],"sourceRoot":""}