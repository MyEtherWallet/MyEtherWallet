{"version":3,"sources":["webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/SwapContainer.vue?0800","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/components/SignatureModal/SignatureModal.vue?9359","webpack:///src/layouts/InterfaceLayout/containers/SwapContainer/components/SignatureModal/SignatureModal.vue","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/components/SignatureModal/SignatureModal.vue?6ae3","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/components/SignatureModal/SignatureModal.vue","webpack:///src/layouts/InterfaceLayout/containers/SwapContainer/SwapContainer.vue","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/SwapContainer.vue?45b7","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/SwapContainer.vue","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/components/SignatureModal/SignatureModal.vue?050f","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/SwapContainer.vue?f28e"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","directives","name","rawName","value","bityExitToFiat","expression","ref","attrs","selectedProvider","swapDetails","currentAddress","on","resetSwapState","swap","stringToSign","sendSignedCallback","$t","_v","_s","currency","toCurrency","_e","tokenBalances","fromCurrency","swapAll","fromArray","overrideFrom","getTokenAddress","setFromCurrency","domProps","$event","target","composing","fromValue","amountChanged","fromBelowMinAllowed","hasEnough","gasNotice","fromAboveMaxAllowed","flipCurrencies","images","toArray","overrideTo","setToCurrency","toValue","toBelowMinAllowed","toAboveMaxAllowed","toggleAlternates","class","openAltnernates","model","callback","$$v","loadingData","_l","alt","key","symbol","setAltToPrimary","computeConversion","isExitToFiat","isBityCryptoToCrypto","fillAddress","overrideAddress","setToAddress","validAddress","unableToValidate","baseCurrency","setExitFromAddress","validExitAddress","unableToValidateExit","setRefundAddress","validRefundAddress","unableToValidateRefund","$tc","loadingError","haveProviderRates","providerList","noProvidersPair","providersFound","switchCurrencyOrder","supportedProviders","providerSelectedName","setSelectedProvider","handleChangellyTerms","slot","finalizingSwap","validSwap","swapConfirmationModalOpen","reset","exitSourceAddress","exitToFiatCallback","exitToFiatAbort","staticRenderFns","signature","sign","props","type","String","default","sendSigned","Function","computed","methods","web3","eth","component","components","InterfaceContainerTitle","SwapCurrencyPicker","SwapAddressSelector","ProvidersRadioSelector","SwapConfirmationModal","SwapExitToFiat","SwapSendToModal","SignatureModal","checkbox","CheckBox","tokensWithBalance","Array","data","MARKET_IMPACT_CUTOFF","signedString","toAddress","refundAddress","exitFromAddress","displayToValue","displayFromValue","invalidFrom","lastBestRate","lastFeeEstimate","bitySpecialCurrencies","warningCurrencies","currencyDetails","kybernetowrk","bity","visaMaster","providerData","providerRatesRecieved","tempStatuses","providerNames","fiatCurrenciesArray","ratesRetrived","issueRecievingRates","moreEthNeeded","recalculating","showWarning","debounceUpdateEstimate","debounceDoThing","alternates","acceptChangellyTerms","bestRate","length","provider","find","entry","errorLogger","e","checkBityMax","maxValue","includes","isProvider","showRefundAddress","allAddressesValid","validBaseToAddress","showAlternates","getAlternatives","alternativesOrdered","watch","standAloneRateEstimate","mounted","account","address","utils","_","debounce","debounceReviseRateEstimate","val","newCurrency","$nextTick","updateRateEstimate","isTrue","to","from","updateEstimate","convertToTokenBase","getBalance","setToCurrencyBuilder","setFromCurrencyBuilder","simplex","direction","fromCur","toCur","fromVal","decimalsGenerally","toLowerCase","intermediateGasCheck","gt","openConfirmModal","dataForInitialization","maybeToken","$refs","swapConfirmation","swapconfirmation","show","Error","swapSendTo"],"mappings":"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","file":"js/chunk-503eeee4.bf91b3a6.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"swap-container\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.bityExitToFiat),expression:\"!bityExitToFiat\"}]},[_c('swap-confirmation-modal',{ref:\"swapConfirmation\",attrs:{\"selected-provider\":_vm.selectedProvider,\"swap-details\":_vm.swapDetails,\"current-address\":_vm.currentAddress},on:{\"swapStarted\":_vm.resetSwapState}}),_c('swap-send-to-modal',{ref:\"swapSendTo\",attrs:{\"selected-provider\":_vm.selectedProvider,\"swap-details\":_vm.swapDetails,\"current-address\":_vm.currentAddress,\"swap\":_vm.swap},on:{\"swapStarted\":_vm.resetSwapState}}),_c('signature-modal',{ref:\"signatureModal\",attrs:{\"signature\":_vm.stringToSign,\"send-signed\":_vm.sendSignedCallback}}),_c('div',{staticClass:\"title-block\"},[_c('interface-container-title',{attrs:{\"title\":_vm.$t('common.swap')}})],1),(_vm.showWarning)?_c('div',{staticClass:\"swap-warning-message\"},[_vm._v(\" \"+_vm._s(_vm.$t('swap.warning.currency-warning', { currency: _vm.toCurrency }))+\" \")]):_vm._e(),_c('div',{staticClass:\"form-content-container\"},[_c('div',{staticClass:\"send-form\"},[_c('div',{staticClass:\"form-block amount-to-address\"},[_c('div',{staticClass:\"amount\"},[_c('div',{staticClass:\"title title-and-copy\"},[_c('h4',[_vm._v(_vm._s(_vm.$t('swap.from')))]),(_vm.tokenBalances[_vm.fromCurrency] > 0)?_c('p',{staticClass:\"all-button prevent-user-select\",on:{\"click\":_vm.swapAll}},[_vm._v(\" \"+_vm._s(_vm.$t('common.balance.total'))+\" \")]):_vm._e()]),_c('swap-currency-picker',{attrs:{\"currencies\":_vm.fromArray,\"override-currency\":_vm.overrideFrom,\"from-source\":true,\"swap-token-address\":_vm.getTokenAddress,\"page\":\"SwapContainerFrom\"},on:{\"selectedCurrency\":_vm.setFromCurrency}}),_c('div',{staticClass:\"the-form amount-number\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.fromValue),expression:\"fromValue\"}],attrs:{\"placeholder\":_vm.$t('swap.deposit-amount'),\"type\":\"number\",\"name\":\"\",\"value\":\"\",\"step\":\"any\"},domProps:{\"value\":(_vm.fromValue)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.fromValue=$event.target.value},function($event){return _vm.amountChanged('from')}]}})]),_c('div',{staticClass:\"error-message-container\"},[(_vm.fromBelowMinAllowed)?_c('p',[_vm._v(_vm._s(_vm.fromBelowMinAllowed))]):_vm._e(),(!_vm.hasEnough && !_vm.fromBelowMinAllowed)?_c('p',[_vm._v(\" \"+_vm._s(_vm.$t('swap.warning.not-enough-funds'))+\" \")]):_vm._e(),(_vm.gasNotice && _vm.fromCurrency === 'ETH')?_c('p',[_vm._v(\" \"+_vm._s(_vm.$t('swap.warning.not-enough-eth-gas'))+\" \")]):_vm._e(),(_vm.gasNotice && _vm.fromCurrency !== 'ETH')?_c('p',[_vm._v(\" \"+_vm._s(_vm.$t('swap.warning.not-enough-tx-fee'))+\" \")]):_vm._e(),(_vm.fromAboveMaxAllowed)?_c('p',[_vm._v(_vm._s(_vm.fromAboveMaxAllowed))]):_vm._e()])],1),_c('div',{staticClass:\"exchange-icon\",on:{\"click\":_vm.flipCurrencies}},[_c('img',{attrs:{\"src\":_vm.images.swap,\"alt\":\"\"}})]),_c('div',{staticClass:\"amount\"},[_c('div',{staticClass:\"title\"},[_c('h4',[_vm._v(_vm._s(_vm.$t('swap.to')))])]),_c('swap-currency-picker',{attrs:{\"currencies\":_vm.toArray,\"override-currency\":_vm.overrideTo,\"from-source\":false,\"swap-token-address\":_vm.getTokenAddress,\"page\":\"SwapContainerTo\"},on:{\"selectedCurrency\":_vm.setToCurrency}}),_c('div',{staticClass:\"the-form amount-number\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.toValue),expression:\"toValue\"}],attrs:{\"placeholder\":_vm.$t('swap.recieve-amount'),\"type\":\"number\",\"name\":\"\",\"value\":\"\",\"step\":\"any\"},domProps:{\"value\":(_vm.toValue)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.toValue=$event.target.value},function($event){return _vm.amountChanged('to')}]}})]),_c('div',{staticClass:\"error-message-container\"},[(_vm.toBelowMinAllowed)?_c('p',[_vm._v(_vm._s(_vm.toBelowMinAllowed))]):_vm._e(),(_vm.toAboveMaxAllowed)?_c('p',[_vm._v(_vm._s(_vm.toAboveMaxAllowed))]):_vm._e()])],1)])]),(_vm.showAlternates)?_c('div',{staticClass:\"btc-alternates\"},[_c('div',{staticClass:\"mb-1\",attrs:{\"no-body\":\"\"}},[_c('div',{staticClass:\"title-container\",on:{\"click\":_vm.toggleAlternates}},[_c('h3',[_vm._v(_vm._s(_vm.$t('swap.alternates.title')))]),_c('i',{class:[\n                _vm.openAltnernates ? 'fa-chevron-up' : 'fa-chevron-down',\n                'fa'\n              ]})]),_c('b-collapse',{attrs:{\"accordion\":\"btc-alternatives\",\"role\":\"tabpanel\"},model:{value:(_vm.openAltnernates),callback:function ($$v) {_vm.openAltnernates=$$v},expression:\"openAltnernates\"}},[_c('div',{staticClass:\"btc-body\"},[_c('p',[_vm._v(\" \"+_vm._s(_vm.$t('swap.alternates.body'))+\" \"),_c('a',{attrs:{\"href\":\"https://kb.myetherwallet.com/en/swap/btc-to-ethereum/\",\"target\":\"_blank\"}},[_vm._v(_vm._s(_vm.$t('swap.alternates.learn-more')))])]),(!_vm.loadingData)?_c('div',{staticClass:\"alternative-btn-container\"},_vm._l((_vm.alternativesOrdered),function(alt){return _c('div',{key:alt.symbol},[(alt.hasValue)?_c('button',{staticClass:\"alternative-btn\",on:{\"click\":function($event){return _vm.setAltToPrimary(alt)}}},[_vm._v(\" \"+_vm._s(_vm.fromValue)+\" \"+_vm._s(_vm.fromCurrency)+\" / \"+_vm._s(alt.computeConversion(_vm.fromValue) || alt.toValue)+\" \"+_vm._s(alt.symbol)+\" \")]):_vm._e()])}),0):_c('div',{staticClass:\"alternative-btn-container\"},[_c('button',{staticClass:\"alternative-btn\"},[_c('div',{staticClass:\"text-line\"})])])])])],1)]):_vm._e(),(!_vm.isExitToFiat && !_vm.isBityCryptoToCrypto())?_c('div',{staticClass:\"send-form\"},[_c('div',{staticClass:\"the-form gas-amount\"},[_c('swap-address-selector',{attrs:{\"currency\":_vm.toCurrency,\"current-address\":_vm.currentAddress,\"fill-address\":_vm.fillAddress,\"copybutton\":true,\"title\":_vm.$t('sendTx.to-addr'),\"clear-address\":_vm.overrideAddress},on:{\"toAddress\":_vm.setToAddress,\"validAddress\":function($event){_vm.validAddress = $event},\"unableToValidate\":function($event){_vm.unableToValidate = $event}}})],1)]):_vm._e(),(!_vm.isExitToFiat && _vm.isBityCryptoToCrypto(_vm.fromCurrency))?_c('div',{staticClass:\"send-form\"},[_c('div',{staticClass:\"the-form gas-amount\"},[_vm._v(\" Amount will be sent to your current wallet address. \")])]):_vm._e(),(_vm.isExitToFiat && _vm.fromCurrency !== _vm.baseCurrency)?_c('div',{staticClass:\"send-form\"},[_c('div',{staticClass:\"the-form gas-amount\"},[_c('swap-address-selector',{attrs:{\"currency\":_vm.fromCurrency,\"current-address\":_vm.currentAddress,\"copybutton\":true,\"clear-address\":_vm.overrideAddress,\"title\":_vm.$t('sendTx.from-addr')},on:{\"toAddress\":_vm.setExitFromAddress,\"validAddress\":function($event){_vm.validExitAddress = $event},\"unableToValidate\":function($event){_vm.unableToValidateExit = $event}}})],1)]):_vm._e(),(_vm.showRefundAddress)?_c('div',{staticClass:\"send-form\"},[_c('div',{staticClass:\"the-form gas-amount\"},[_c('swap-address-selector',{attrs:{\"currency\":_vm.fromCurrency,\"current-address\":_vm.currentAddress,\"copybutton\":true,\"clear-address\":_vm.overrideAddress,\"title\":_vm.$t('swap.refund', { currency: _vm.fromCurrency })},on:{\"toAddress\":_vm.setRefundAddress,\"validAddress\":function($event){_vm.validRefundAddress = $event},\"unableToValidate\":function($event){_vm.unableToValidateRefund = $event}}})],1)]):_vm._e(),_c('div',{staticClass:\"send-form\"},[_c('div',{staticClass:\"title-container\"},[_c('div',{staticClass:\"title title-and-copy\"},[_c('h4',[_vm._v(_vm._s(_vm.$tc('swap.providers.string', 2)))])])]),_c('providers-radio-selector',{attrs:{\"loading-provider-error\":_vm.loadingError,\"loading-provider-rates\":!_vm.haveProviderRates,\"provider-data\":_vm.providerList,\"from-value\":+_vm.fromValue,\"to-value\":+_vm.toValue,\"no-providers-pair\":_vm.noProvidersPair,\"loading-data\":_vm.loadingData,\"providers-found\":_vm.providersFound,\"provider-selected\":_vm.selectedProvider,\"switch-currency-order\":_vm.switchCurrencyOrder,\"all-supported-providers\":_vm.supportedProviders,\"provider-selected-name\":_vm.providerSelectedName},on:{\"selectedProvider\":_vm.setSelectedProvider}})],1),_c('div',{staticClass:\"fee-notice\"},[(_vm.gasNotice && _vm.fromCurrency === 'ETH')?_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('swap.warning.not-enough-eth-gas')))]):_vm._e(),(_vm.gasNotice && _vm.fromCurrency !== 'ETH')?_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('swap.warning.not-enough-tx-fee')))]):_vm._e()]),(_vm.providerSelectedName === 'changelly')?_c('div',{staticClass:\"changelly-terms-container\"},[_c('checkbox',{on:{\"changeStatus\":_vm.handleChangellyTerms}}),_c('i18n',{attrs:{\"path\":\"swap.notice.changelly-terms\",\"tag\":\"p\"}},[_c('a',{attrs:{\"slot\":\"aml\",\"href\":\"https://changelly.com/aml-kyc\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"},slot:\"aml\"},[_vm._v(\"AML/KYC\")]),_c('a',{attrs:{\"slot\":\"terms\",\"href\":\"https://changelly.com/terms-of-use\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"},slot:\"terms\"},[_vm._v(\"Terms of Use\")])])],1):_vm._e(),_c('div',{staticClass:\"submit-button-container\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.finalizingSwap),expression:\"finalizingSwap\"}],staticClass:\"disabled submit-button large-round-button-green-filled clickable\"},[_c('i',{staticClass:\"fa fa-spinner fa-spin\"}),_vm._v(\" \"+_vm._s(_vm.$t('swap.button-loading'))+\" \")]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.finalizingSwap),expression:\"!finalizingSwap\"}],class:[\n            _vm.validSwap ? '' : 'disabled',\n            'submit-button large-round-button-green-filled clickable'\n          ],on:{\"click\":_vm.swapConfirmationModalOpen}},[(_vm.recalculating)?_c('span',[_vm._v(_vm._s(_vm.$t('swap.recalculating')))]):_c('span',[_vm._v(_vm._s(_vm.$t('common.continue')))]),_c('i',{staticClass:\"fa fa-long-arrow-right\",attrs:{\"aria-hidden\":\"true\"}})]),_c('div',{staticClass:\"clear-all-btn\",on:{\"click\":function($event){return _vm.reset()}}},[_vm._v(\" \"+_vm._s(_vm.$t('common.clear-all'))+\" \")])])])],1),(_vm.bityExitToFiat)?_c('swap-exit-to-fiat',{attrs:{\"swap-details\":_vm.swapDetails,\"exit-from-address\":_vm.exitSourceAddress,\"exit-to-fiat-callback\":_vm.exitToFiatCallback},on:{\"backButtonClick\":_vm.exitToFiatAbort}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-modal',{ref:\"signatureModal\",staticClass:\"bootstrap-modal\",attrs:{\"title\":_vm.$t('swap.address-verification'),\"hide-footer\":\"\",\"centered\":\"\",\"static\":\"\",\"lazy\":\"\"}},[_c('div',{staticClass:\"modal-contents\"},[_c('div',[_c('div',{staticClass:\"copy-container\"},[_c('h4',[_vm._v(_vm._s(_vm.$t('swap.message-to-sign')))])]),_vm._v(\" \"+_vm._s(_vm.signature)+\" \"),_c('div',{staticClass:\"button-container\"},[_c('button',{staticClass:\"submit-button large-round-button-green-filled clickable\",on:{\"click\":function($event){return _vm.sign()}}},[_vm._v(\" \"+_vm._s(_vm.$t('swap.proceed-to-sign'))+\" \")])])])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <b-modal\n      ref=\"signatureModal\"\n      :title=\"$t('swap.address-verification')\"\n      hide-footer\n      centered\n      class=\"bootstrap-modal\"\n      static\n      lazy\n    >\n      <div class=\"modal-contents\">\n        <div>\n          <div class=\"copy-container\">\n            <h4>{{ $t('swap.message-to-sign') }}</h4>\n          </div>\n          {{ signature }}\n          <div class=\"button-container\">\n            <button\n              class=\"submit-button large-round-button-green-filled clickable\"\n              @click=\"sign()\"\n            >\n              {{ $t('swap.proceed-to-sign') }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport { Toast } from '@/helpers';\nimport { mapState } from 'vuex';\nexport default {\n  props: {\n    signature: {\n      type: String,\n      default: ''\n    },\n    sendSigned: {\n      type: Function,\n      default: function () {}\n    }\n  },\n  computed: {\n    ...mapState('main', ['account', 'web3'])\n  },\n  methods: {\n    sign() {\n      try {\n        this.web3.eth\n          .sign(this.signature, this.account.address)\n          .then(signed => {\n            this.sendSigned(signed);\n            this.$refs.signatureModal.hide();\n          })\n          .catch(e => {\n            Toast.responseHandler(e, Toast.ERROR);\n          });\n      } catch (e) {\n        Toast.responseHandler(e, Toast.ERROR);\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'SignatureModal.scss';\n</style>\n","import mod from \"-!../../../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SignatureModal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SignatureModal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SignatureModal.vue?vue&type=template&id=1ffa034d&scoped=true&\"\nimport script from \"./SignatureModal.vue?vue&type=script&lang=js&\"\nexport * from \"./SignatureModal.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SignatureModal.vue?vue&type=style&index=0&id=1ffa034d&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1ffa034d\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"swap-container\">\n    <div v-show=\"!bityExitToFiat\">\n      <swap-confirmation-modal\n        ref=\"swapConfirmation\"\n        :selected-provider=\"selectedProvider\"\n        :swap-details=\"swapDetails\"\n        :current-address=\"currentAddress\"\n        @swapStarted=\"resetSwapState\"\n      />\n\n      <swap-send-to-modal\n        ref=\"swapSendTo\"\n        :selected-provider=\"selectedProvider\"\n        :swap-details=\"swapDetails\"\n        :current-address=\"currentAddress\"\n        :swap=\"swap\"\n        @swapStarted=\"resetSwapState\"\n      />\n\n      <signature-modal\n        ref=\"signatureModal\"\n        :signature=\"stringToSign\"\n        :send-signed=\"sendSignedCallback\"\n      />\n\n      <div class=\"title-block\">\n        <interface-container-title :title=\"$t('common.swap')\" />\n      </div>\n      <div v-if=\"showWarning\" class=\"swap-warning-message\">\n        {{ $t('swap.warning.currency-warning', { currency: toCurrency }) }}\n      </div>\n      <div class=\"form-content-container\">\n        <div class=\"send-form\">\n          <div class=\"form-block amount-to-address\">\n            <div class=\"amount\">\n              <div class=\"title title-and-copy\">\n                <h4>{{ $t('swap.from') }}</h4>\n                <p\n                  v-if=\"tokenBalances[fromCurrency] > 0\"\n                  class=\"all-button prevent-user-select\"\n                  @click=\"swapAll\"\n                >\n                  {{ $t('common.balance.total') }}\n                </p>\n              </div>\n              <swap-currency-picker\n                :currencies=\"fromArray\"\n                :override-currency=\"overrideFrom\"\n                :from-source=\"true\"\n                :swap-token-address=\"getTokenAddress\"\n                page=\"SwapContainerFrom\"\n                @selectedCurrency=\"setFromCurrency\"\n              />\n              <div class=\"the-form amount-number\">\n                <input\n                  v-model=\"fromValue\"\n                  :placeholder=\"$t('swap.deposit-amount')\"\n                  type=\"number\"\n                  name\n                  value\n                  step=\"any\"\n                  @input=\"amountChanged('from')\"\n                />\n              </div>\n              <div class=\"error-message-container\">\n                <p v-if=\"fromBelowMinAllowed\">{{ fromBelowMinAllowed }}</p>\n                <p v-if=\"!hasEnough && !fromBelowMinAllowed\">\n                  {{ $t('swap.warning.not-enough-funds') }}\n                </p>\n                <p v-if=\"gasNotice && fromCurrency === 'ETH'\">\n                  {{ $t('swap.warning.not-enough-eth-gas') }}\n                </p>\n                <p v-if=\"gasNotice && fromCurrency !== 'ETH'\">\n                  {{ $t('swap.warning.not-enough-tx-fee') }}\n                </p>\n                <p v-if=\"fromAboveMaxAllowed\">{{ fromAboveMaxAllowed }}</p>\n              </div>\n            </div>\n            <div class=\"exchange-icon\" @click=\"flipCurrencies\">\n              <img :src=\"images.swap\" alt />\n            </div>\n            <div class=\"amount\">\n              <div class=\"title\">\n                <h4>{{ $t('swap.to') }}</h4>\n              </div>\n              <swap-currency-picker\n                :currencies=\"toArray\"\n                :override-currency=\"overrideTo\"\n                :from-source=\"false\"\n                :swap-token-address=\"getTokenAddress\"\n                page=\"SwapContainerTo\"\n                @selectedCurrency=\"setToCurrency\"\n              />\n              <div class=\"the-form amount-number\">\n                <input\n                  v-model=\"toValue\"\n                  :placeholder=\"$t('swap.recieve-amount')\"\n                  type=\"number\"\n                  name\n                  value\n                  step=\"any\"\n                  @input=\"amountChanged('to')\"\n                />\n              </div>\n              <div class=\"error-message-container\">\n                <p v-if=\"toBelowMinAllowed\">{{ toBelowMinAllowed }}</p>\n                <p v-if=\"toAboveMaxAllowed\">{{ toAboveMaxAllowed }}</p>\n              </div>\n            </div>\n          </div>\n          <!-- form-block amount-to-address -->\n        </div>\n        <div v-if=\"showAlternates\" class=\"btc-alternates\">\n          <div no-body class=\"mb-1\">\n            <div class=\"title-container\" @click=\"toggleAlternates\">\n              <h3>{{ $t('swap.alternates.title') }}</h3>\n              <i\n                :class=\"[\n                  openAltnernates ? 'fa-chevron-up' : 'fa-chevron-down',\n                  'fa'\n                ]\"\n              />\n            </div>\n            <b-collapse\n              v-model=\"openAltnernates\"\n              accordion=\"btc-alternatives\"\n              role=\"tabpanel\"\n            >\n              <div class=\"btc-body\">\n                <p>\n                  {{ $t('swap.alternates.body') }}\n                  <a\n                    href=\"https://kb.myetherwallet.com/en/swap/btc-to-ethereum/\"\n                    target=\"_blank\"\n                    >{{ $t('swap.alternates.learn-more') }}</a\n                  >\n                </p>\n                <div v-if=\"!loadingData\" class=\"alternative-btn-container\">\n                  <div v-for=\"alt in alternativesOrdered\" :key=\"alt.symbol\">\n                    <button\n                      v-if=\"alt.hasValue\"\n                      class=\"alternative-btn\"\n                      @click=\"setAltToPrimary(alt)\"\n                    >\n                      {{ fromValue }} {{ fromCurrency }} /\n                      {{ alt.computeConversion(fromValue) || alt.toValue }}\n                      {{ alt.symbol }}\n                    </button>\n                  </div>\n                </div>\n                <div v-else class=\"alternative-btn-container\">\n                  <button class=\"alternative-btn\">\n                    <div class=\"text-line\"></div>\n                  </button>\n                </div>\n              </div>\n            </b-collapse>\n          </div>\n        </div>\n        <div v-if=\"!isExitToFiat && !isBityCryptoToCrypto()\" class=\"send-form\">\n          <div class=\"the-form gas-amount\">\n            <swap-address-selector\n              :currency=\"toCurrency\"\n              :current-address=\"currentAddress\"\n              :fill-address=\"fillAddress\"\n              :copybutton=\"true\"\n              :title=\"$t('sendTx.to-addr')\"\n              :clear-address=\"overrideAddress\"\n              @toAddress=\"setToAddress\"\n              @validAddress=\"validAddress = $event\"\n              @unableToValidate=\"unableToValidate = $event\"\n            />\n          </div>\n        </div>\n\n        <div\n          v-if=\"!isExitToFiat && isBityCryptoToCrypto(fromCurrency)\"\n          class=\"send-form\"\n        >\n          <div class=\"the-form gas-amount\">\n            Amount will be sent to your current wallet address.\n          </div>\n        </div>\n        <div\n          v-if=\"isExitToFiat && fromCurrency !== baseCurrency\"\n          class=\"send-form\"\n        >\n          <div class=\"the-form gas-amount\">\n            <swap-address-selector\n              :currency=\"fromCurrency\"\n              :current-address=\"currentAddress\"\n              :copybutton=\"true\"\n              :clear-address=\"overrideAddress\"\n              :title=\"$t('sendTx.from-addr')\"\n              @toAddress=\"setExitFromAddress\"\n              @validAddress=\"validExitAddress = $event\"\n              @unableToValidate=\"unableToValidateExit = $event\"\n            />\n          </div>\n        </div>\n        <div v-if=\"showRefundAddress\" class=\"send-form\">\n          <div class=\"the-form gas-amount\">\n            <swap-address-selector\n              :currency=\"fromCurrency\"\n              :current-address=\"currentAddress\"\n              :copybutton=\"true\"\n              :clear-address=\"overrideAddress\"\n              :title=\"$t('swap.refund', { currency: fromCurrency })\"\n              @toAddress=\"setRefundAddress\"\n              @validAddress=\"validRefundAddress = $event\"\n              @unableToValidate=\"unableToValidateRefund = $event\"\n            />\n          </div>\n        </div>\n\n        <div class=\"send-form\">\n          <div class=\"title-container\">\n            <div class=\"title title-and-copy\">\n              <h4>{{ $tc('swap.providers.string', 2) }}</h4>\n            </div>\n          </div>\n          <providers-radio-selector\n            :loading-provider-error=\"loadingError\"\n            :loading-provider-rates=\"!haveProviderRates\"\n            :provider-data=\"providerList\"\n            :from-value=\"+fromValue\"\n            :to-value=\"+toValue\"\n            :no-providers-pair=\"noProvidersPair\"\n            :loading-data=\"loadingData\"\n            :providers-found=\"providersFound\"\n            :provider-selected=\"selectedProvider\"\n            :switch-currency-order=\"switchCurrencyOrder\"\n            :all-supported-providers=\"supportedProviders\"\n            :provider-selected-name=\"providerSelectedName\"\n            @selectedProvider=\"setSelectedProvider\"\n          />\n        </div>\n        <div class=\"fee-notice\">\n          <span v-if=\"gasNotice && fromCurrency === 'ETH'\">\n            {{ $t('swap.warning.not-enough-eth-gas') }}</span\n          >\n          <span v-if=\"gasNotice && fromCurrency !== 'ETH'\">\n            {{ $t('swap.warning.not-enough-tx-fee') }}</span\n          >\n        </div>\n        <div\n          v-if=\"providerSelectedName === 'changelly'\"\n          class=\"changelly-terms-container\"\n        >\n          <checkbox @changeStatus=\"handleChangellyTerms\" />\n          <i18n path=\"swap.notice.changelly-terms\" tag=\"p\">\n            <a\n              slot=\"aml\"\n              href=\"https://changelly.com/aml-kyc\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              >AML/KYC</a\n            >\n            <a\n              slot=\"terms\"\n              href=\"https://changelly.com/terms-of-use\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              >Terms of Use</a\n            >\n          </i18n>\n        </div>\n        <div class=\"submit-button-container\">\n          <div\n            v-show=\"finalizingSwap\"\n            class=\"disabled submit-button large-round-button-green-filled clickable\"\n          >\n            <i class=\"fa fa-spinner fa-spin\" />\n            {{ $t('swap.button-loading') }}\n          </div>\n          <div\n            v-show=\"!finalizingSwap\"\n            :class=\"[\n              validSwap ? '' : 'disabled',\n              'submit-button large-round-button-green-filled clickable'\n            ]\"\n            @click=\"swapConfirmationModalOpen\"\n          >\n            <span v-if=\"recalculating\">{{ $t('swap.recalculating') }}</span>\n            <span v-else>{{ $t('common.continue') }}</span>\n            <i class=\"fa fa-long-arrow-right\" aria-hidden=\"true\" />\n          </div>\n          <div class=\"clear-all-btn\" @click=\"reset()\">\n            {{ $t('common.clear-all') }}\n          </div>\n        </div>\n      </div>\n    </div>\n    <swap-exit-to-fiat\n      v-if=\"bityExitToFiat\"\n      :swap-details=\"swapDetails\"\n      :exit-from-address=\"exitSourceAddress\"\n      :exit-to-fiat-callback=\"exitToFiatCallback\"\n      @backButtonClick=\"exitToFiatAbort\"\n    ></swap-exit-to-fiat>\n  </div>\n</template>\n<script>\nimport BigNumber from 'bignumber.js';\nimport debug from 'debug';\nimport { mapState } from 'vuex';\n\nimport { Toast } from '@/helpers';\nimport ProvidersRadioSelector from './components/ProvidersRadioSelector';\nimport SwapAddressSelector from './components/SwapAddressSelector';\nimport InterfaceContainerTitle from '../../components/InterfaceContainerTitle';\nimport swapIcon from '@/assets/images/icons/swap-widget.svg';\nimport ImageKybernetowrk from '@/assets/images/etc/kybernetwork.png';\nimport ImageBity from '@/assets/images/etc/bity.png';\nimport ImageVisaMaster from '@/assets/images/etc/visamaster.png';\n\nimport SwapCurrencyPicker from './components/SwapCurrencyPicker';\nimport SwapConfirmationModal from './components/SwapConfirmationModal';\nimport SwapExitToFiat from './components/SwapExitToFiat';\nimport SwapSendToModal from './components/SwapSendToModal';\nimport SignatureModal from './components/SignatureModal';\n\nimport CheckBox from '@/components/Buttons/CheckBox/CheckBox.vue';\n\nimport {\n  SwapProviders,\n  providers,\n  bestProviderForQuantity,\n  bestRateForQuantity,\n  isValidEntry,\n  providerNames,\n  supportedProviders,\n  BASE_CURRENCY,\n  fiat,\n  MIN_SWAP_AMOUNT,\n  ERC20\n} from '@/partners';\nimport ethUnit from 'ethjs-unit';\n\nconst errorLogger = debug('v5:swapContainer');\n\nexport default {\n  components: {\n    'interface-container-title': InterfaceContainerTitle,\n    'swap-currency-picker': SwapCurrencyPicker,\n    'swap-address-selector': SwapAddressSelector,\n    'providers-radio-selector': ProvidersRadioSelector,\n    'swap-confirmation-modal': SwapConfirmationModal,\n    'swap-exit-to-fiat': SwapExitToFiat,\n    'swap-send-to-modal': SwapSendToModal,\n    'signature-modal': SignatureModal,\n    checkbox: CheckBox\n  },\n  props: {\n    tokensWithBalance: {\n      type: Array,\n      default: function () {\n        return [];\n      }\n    }\n  },\n  data() {\n    return {\n      MARKET_IMPACT_CUTOFF: 10,\n      baseCurrency: BASE_CURRENCY,\n      stringToSign: '',\n      signedString: '',\n      providerSelectedName: '',\n      toAddress: '',\n      currentAddress: '',\n      refundAddress: '',\n      exitFromAddress: '',\n      fromCurrency: 'ETH',\n      toCurrency: 'ETH',\n      displayToValue: 1,\n      displayFromValue: 1,\n      fromValue: 1,\n      toValue: 1,\n      invalidFrom: 'none',\n      lastBestRate: 0,\n      lastFeeEstimate: new BigNumber(0),\n      bitySpecialCurrencies: ['BTC', 'REP'],\n      warningCurrencies: ['VET'],\n      selectedProvider: {},\n      swapDetails: {},\n      currencyDetails: {},\n      swap: new SwapProviders(\n        providers,\n        {\n          network: this.$store.state.main.network.type.name,\n          web3: this.$store.state.main.web3,\n          gasPrice: this.$store.state.main.gasPrice,\n          getRateForUnit: false\n        },\n        { tokensWithBalance: this.tokensWithBalance }\n      ),\n      images: {\n        kybernetowrk: ImageKybernetowrk,\n        bity: ImageBity,\n        visaMaster: ImageVisaMaster,\n        swap: swapIcon\n      },\n      toArray: [],\n      fromArray: [],\n      providerData: [],\n      tokenBalances: {},\n      providerRatesRecieved: [],\n      noProvidersPair: {},\n      providersFound: [],\n      tempStatuses: [],\n      overrideFrom: {},\n      overrideTo: {},\n      providerNames: providerNames,\n      supportedProviders: supportedProviders,\n      fiatCurrenciesArray: fiat.map(entry => entry.symbol),\n      finalizingSwap: false,\n      validAddress: true,\n      validRefundAddress: true,\n      validExitAddress: true,\n      ratesRetrived: false,\n      issueRecievingRates: false,\n      loadingData: true,\n      haveProviderRates: false,\n      loadingError: false,\n      switchCurrencyOrder: false,\n      bityExitToFiat: false,\n      gasNotice: false,\n      moreEthNeeded: false,\n      recalculating: true,\n      showWarning: false,\n      exitToFiatCallback: () => {},\n      sendSignedCallback: () => {},\n      debounceUpdateEstimate: {},\n      debounceDoThing: {},\n      unableToValidate: false,\n      unableToValidateExit: false,\n      unableToValidateRefund: false,\n      overrideAddress: false,\n      openAltnernates: true,\n      alternates: [\n        {\n          symbol: 'RENBTC',\n          rates: [],\n          computeConversion: () => {},\n          hasValue: false\n        },\n        {\n          symbol: 'WBTC',\n          rates: [],\n          computeConversion: () => {},\n          hasValue: false\n        },\n        {\n          symbol: 'PBTC',\n          rates: [],\n          computeConversion: () => {},\n          hasValue: false\n        }\n      ],\n      acceptChangellyTerms: false\n    };\n  },\n  computed: {\n    ...mapState('main', [\n      'account',\n      'ens',\n      'gasPrice',\n      'web3',\n      'network',\n      'online'\n    ]),\n    bestRate() {\n      try {\n        if (this.providerData.length > 0) {\n          if (this.selectedProvider.provider) {\n            return this.providerList.find(entry => {\n              return entry.provider === this.selectedProvider.provider;\n            }).rate;\n          }\n          return bestRateForQuantity([...this.providerList], this.fromValue);\n        }\n        return this.lastBestRate;\n      } catch (e) {\n        errorLogger(e);\n      }\n      return null;\n    },\n    fillAddress() {\n      return SwapProviders.isToken(this.toCurrency);\n    },\n    fromBelowMinAllowed() {\n      if (new BigNumber(MIN_SWAP_AMOUNT).gt(new BigNumber(this.fromValue)))\n        return `${this.$t('swap.value-below-min')} ${MIN_SWAP_AMOUNT}`;\n      if (\n        new BigNumber(this.selectedProvider.minValue).gt(\n          new BigNumber(this.fromValue)\n        )\n      )\n        return this.$t('swap.value-below-min', {\n          value: this.selectedProvider.maxValue,\n          currency: this.fromCurrency\n        });\n      return false;\n    },\n    fromAboveMaxAllowed() {\n      if (this.selectedProvider.provider === this.providerNames.bity) {\n        if (this.checkBityMax) {\n          return this.$t('swap.value-above-max', {\n            value: this.selectedProvider.maxValue,\n            currency: this.fromCurrency\n          });\n        }\n        return false;\n      } else if (\n        new BigNumber(this.fromValue).gt(\n          new BigNumber(this.selectedProvider.maxValue)\n        ) &&\n        new BigNumber(this.selectedProvider.maxValue).gt(new BigNumber(0))\n      )\n        return this.$t('swap.value-above-max', {\n          value: this.selectedProvider.maxValue,\n          currency: this.fromCurrency\n        });\n      return false;\n    },\n    toBelowMinAllowed() {\n      if (new BigNumber(0).gte(new BigNumber(this.toValue)))\n        return this.$t('swap.below-min-swap');\n      return false;\n    },\n    toAboveMaxAllowed() {\n      if (this.checkBityMax) return this.$t('swap.above-max-swap');\n      return false;\n    },\n    providerList() {\n      if (this.providerData.length > 0) {\n        return bestProviderForQuantity([...this.providerData], this.fromValue);\n      }\n      return [];\n    },\n    isExitToFiat() {\n      return this.fiatCurrenciesArray.includes(this.toCurrency);\n    },\n    validSwap() {\n      // initial chack.  will provide an alert on the next screen if no address is provided\n      if (this.recalculating) return false;\n      if (this.gasNotice) return false;\n      const canExit =\n        this.isExitToFiat && this.fromCurrency !== this.baseCurrency\n          ? this.exitFromAddress !== ''\n          : true;\n      const canSwap =\n        this.hasEnough &&\n        (this.toAddress !== '' || canExit) &&\n        this.allAddressesValid &&\n        this.selectedProvider.minValue <= +this.fromValue &&\n        (+this.fromValue <= this.selectedProvider.maxValue ||\n          this.selectedProvider.maxValue === 0);\n      return this.providerSelectedName === 'changelly'\n        ? canSwap && this.acceptChangellyTerms\n        : canSwap;\n    },\n    checkBityMax() {\n      if (this.swap.isProvider(this.providerNames.bity)) {\n        return (\n          !this.swap\n            .getProvider(this.providerNames.bity)\n            .maxCheck(\n              this.fromCurrency,\n              this.fromValue,\n              this.toCurrency,\n              this.toValue\n            ) && this.selectedProvider.provider === this.providerNames.bity\n        );\n      }\n      return false;\n    },\n    showRefundAddress() {\n      return (\n        !SwapProviders.isToken(this.fromCurrency) &&\n        this.selectedProvider.provider === this.providerNames.changelly\n      );\n    },\n    allAddressesValid() {\n      const validBaseToAddress = this.toAddress !== '' && this.validAddress;\n\n      if (this.isExitToFiat) {\n        if (this.fromCurrency === this.baseCurrency) {\n          return true;\n        }\n        return this.exitFromAddress !== '' && this.validExitAddress;\n      }\n      if (this.showRefundAddress) {\n        if (\n          this.fromCurrency === this.baseCurrency ||\n          SwapProviders.isToken(this.fromCurrency)\n        ) {\n          const validRefundAddress =\n            this.refundAddress === '' && this.validRefundAddress;\n          return validBaseToAddress && validRefundAddress;\n        }\n        return SwapProviders.checkAddress(\n          this.refundAddress,\n          this.fromCurrency\n        );\n      }\n\n      return validBaseToAddress;\n    },\n    hasEnough() {\n      return this.swap.hasEnough(\n        this.fromCurrency,\n        this.fromValue,\n        this.baseCurrency,\n        this.tokenBalances,\n        this.account.balance\n      );\n    },\n    exitSourceAddress() {\n      return this.isExitToFiat && this.fromCurrency === this.baseCurrency\n        ? this.currentAddress\n        : this.exitFromAddress;\n    },\n    showAlternates() {\n      if (this.toCurrency === 'BTC') {\n        return true;\n      }\n      return false;\n    },\n    getAlternatives() {\n      if (this.toCurrency === 'BTC') {\n        return true;\n      }\n      return false;\n    },\n    alternativesOrdered() {\n      return [...this.alternates].sort((a, b) => b.rates - a.rates);\n    }\n  },\n  watch: {\n    toCurrency(value) {\n      if (value === 'BTC') {\n        this.standAloneRateEstimate();\n      }\n    },\n    fromValue() {\n      if (this.toCurrency === 'BTC') {\n        this.standAloneRateEstimate();\n      }\n    },\n    ['gasPrice'](value) {\n      if (!this.selectedProvider) {\n        this.selectedProvider = {};\n      }\n      this.swap.updateGasPrice(this.selectedProvider.provider, value);\n    },\n    ['this.network.type.name']() {\n      this.swap.updateNetwork(this.network.type.name, this.web3);\n    },\n    ['swap.updateProviderRates']() {\n      try {\n        const { toArray, fromArray } = this.swap.buildInitialCurrencyArrays();\n        this.toArray = toArray;\n        this.fromArray = fromArray;\n      } catch (e) {\n        const { toArray, fromArray } = this.swap.initialCurrencyLists;\n        this.toArray = toArray;\n        this.fromArray = fromArray;\n      }\n    },\n    ['swap.haveProviderRates']() {\n      this.haveProviderRates = this.swap.ratesRetrieved;\n      const { toArray, fromArray } = this.swap.buildInitialCurrencyArrays();\n      this.toArray = toArray;\n      this.fromArray = fromArray;\n      this.lastBestRate = bestRateForQuantity(\n        [...this.providerList],\n        this.fromValue\n      );\n      this.updateRateEstimate(\n        this.fromCurrency,\n        this.toCurrency,\n        this.fromValue,\n        'from'\n      );\n      this.standAloneRateEstimate();\n    },\n    network(newVal) {\n      this.providerData = [];\n      this.haveProviderRates = false;\n      this.loadingData = false;\n      this.swap = new SwapProviders(\n        providers,\n        {\n          network: newVal.type.name,\n          web3: this.web3,\n          gasPrice: this.gasPrice,\n          getRateForUnit: false\n        },\n        { tokensWithBalance: this.tokensWithBalance }\n      );\n    },\n    alternates: {\n      deep: true,\n      handler: function (newVal) {\n        this.alternates = newVal;\n      }\n    }\n  },\n  mounted() {\n    const { toArray, fromArray } = this.swap.initialCurrencyLists;\n    this.toArray = toArray;\n    this.fromArray = fromArray;\n    this.currentAddress = this.account.address;\n    this.debounceUpdateEstimate = this.web3.utils._.debounce(\n      this.updateEstimate,\n      300\n    );\n    this.debounceReviseRateEstimate = this.web3.utils._.debounce(\n      this.updateRateEstimate,\n      2000\n    );\n  },\n  methods: {\n    handleChangellyTerms(val) {\n      this.acceptChangellyTerms = val;\n    },\n    getTokenAddress(currency) {\n      return this.swap.getTokenAddress(currency, true);\n    },\n    async standAloneRateEstimate() {\n      const checkAndSetup = res => {\n        setTimeout(() => {\n          if (res) {\n            const idx = this.alternates.findIndex(\n              item => item.symbol === res[0].toCurrency\n            );\n            if (idx > -1) {\n              this.alternates[idx].rates = res[0].rate;\n              this.alternates[idx].fromValue = res[0].fromValue;\n              this.alternates[idx].toValue = res[0].computeConversion(\n                this.fromValue\n              );\n              this.alternates[\n                idx\n              ].computeConversion = res[0].computeConversion.bind(res[0]);\n              this.alternates[idx].hasValue = true;\n              if (this.bestRate > 0) {\n                this.alternates[idx].hasValue = new BigNumber(res[0].rate)\n                  .div(this.bestRate)\n                  .gte(0.9);\n              }\n              return res;\n            }\n          }\n        }, 250);\n      };\n      this.alternates.forEach(val => {\n        this.swap\n          .standAloneRateEstimate(this.fromCurrency, val.symbol, this.fromValue)\n          .then(checkAndSetup);\n        return { symbol: val.symbol, rates: [] };\n      });\n    },\n    toggleAlternates() {\n      this.openAltnernates = !this.openAltnernates;\n    },\n    setAltToPrimary(newCurrency) {\n      const details = this.toArray.find(\n        item => item.symbol.toLowerCase() === newCurrency.symbol.toLowerCase()\n      );\n      this.toCurrency = newCurrency.symbol;\n      this.overrideTo = {};\n      this.$nextTick(() => {\n        this.overrideTo = details;\n        this.setToCurrency(newCurrency);\n      });\n    },\n    reset() {\n      this.lastFeeEstimate = new BigNumber(0);\n      this.gasNotice = false;\n      this.fromCurrency = 'BTC';\n      this.toCurrency = 'ETH';\n      this.overrideFrom = { name: 'Bitcoin', symbol: 'BTC' };\n      this.overrideTo = { name: 'Ether', symbol: 'ETH' };\n      this.fromValue = 1;\n      this.overrideAddress = !this.overrideAddress;\n      this.providerSelectedName = '';\n      this.toAddress = '';\n      this.refundAddress = '';\n      this.exitFromAddress = '';\n      this.updateRateEstimate(\n        this.fromCurrency,\n        this.toCurrency,\n        this.fromValue,\n        'from'\n      );\n      this.finalizingSwap = false;\n      this.validAddress = true;\n      this.issueRecievingRates = false;\n      this.loadingError = false;\n      this.switchCurrencyOrder = false;\n      this.bityExitToFiat = false;\n      this.sendSignedCallback = () => {};\n    },\n    isBityCryptoToCrypto(currency = 'BTC') {\n      const isTrue =\n        this.bitySpecialCurrencies.includes(currency) &&\n        this.selectedProvider.provider === this.providerNames.bity;\n      if (isTrue) {\n        this.setToAddress(this.currentAddress);\n        this.validAddress = true;\n        this.unableToValidate = false;\n      }\n      return isTrue;\n    },\n    flipCurrencies() {\n      this.providerSelectedName = '';\n      this.switchCurrencyOrder = true;\n      const origTo = this.toValue;\n      this.fromCurrency = this.currencyDetails.to.symbol;\n      this.toCurrency = this.currencyDetails.from.symbol;\n      this.overrideFrom = this.currencyDetails.to;\n      this.overrideTo = this.currencyDetails.from;\n      this.updateRateEstimate(\n        this.fromCurrency,\n        this.toCurrency,\n        origTo,\n        'from'\n      );\n      this.switchCurrencyOrder = false;\n    },\n    setSelectedProvider(provider) {\n      this.selectedProvider = this.providerList.find(entry => {\n        return entry.provider === provider;\n      });\n      if (!this.selectedProvider) {\n        this.selectedProvider = {};\n      }\n      this.providerSelectedName = this.selectedProvider.provider;\n      this.updateEstimate('from');\n    },\n    setToAddress(address) {\n      this.toAddress = address;\n    },\n    setRefundAddress(address) {\n      this.refundAddress = address;\n    },\n    setExitFromAddress(address) {\n      this.exitFromAddress = address;\n    },\n    swapAll() {\n      this.fromValue = this.swap.convertToTokenBase(\n        this.fromCurrency,\n        this.tokenBalances[this.fromCurrency]\n      );\n      this.amountChanged('from');\n    },\n    setFromCurrency(value, dir = 'from') {\n      this.providerSelectedName = '';\n      this.currencyDetails.from = value;\n      this.fromCurrency = value.symbol;\n      this.getBalance(this.fromCurrency);\n      this.toArray = this.swap.setToCurrencyBuilder(value);\n      this.updateRateEstimate(\n        this.fromCurrency,\n        this.toCurrency,\n        this.fromValue,\n        dir\n      );\n    },\n    setToCurrency(value, dir = 'to') {\n      this.providerSelectedName = '';\n      this.currencyDetails.to = value;\n      this.toCurrency = value.symbol;\n      this.fromArray = this.swap.setFromCurrencyBuilder(value);\n      this.updateRateEstimate(\n        this.fromCurrency,\n        this.toCurrency,\n        this.fromValue,\n        dir\n      );\n    },\n    async getBalance(currency) {\n      if (SwapProviders.isToken(currency) && currency !== this.baseCurrency) {\n        const balance = await new this.web3.eth.Contract(\n          ERC20,\n          this.swap.getTokenAddress(currency)\n        ).methods\n          .balanceOf(this.currentAddress)\n          .call();\n\n        this.$set(this.tokenBalances, currency, balance);\n      }\n    },\n    amountChanged(direction) {\n      if (\n        (isValidEntry(this.fromValue) && direction === 'from') ||\n        (isValidEntry(this.toValue) && direction === 'to')\n      ) {\n        this.recalculating = true;\n        if (\n          this.swap.getProvider(this.providerNames.simplex).currencies.fiat[\n            this.fromCurrency\n          ]\n        ) {\n          this.debounceUpdateEstimate(this.providerNames.simplex + direction);\n          const fromCur = this.fromCurrency;\n          const toCur = this.toCurrency;\n          const fromVal = this.fromValue;\n          this.debounceReviseRateEstimate(fromCur, toCur, fromVal, direction);\n        } else {\n          this.debounceUpdateEstimate(direction);\n          const fromCur = this.fromCurrency;\n          const toCur = this.toCurrency;\n          const fromVal = this.fromValue;\n          this.debounceReviseRateEstimate(fromCur, toCur, fromVal, direction);\n        }\n      }\n    },\n    async updateEstimate(input) {\n      if (this.simplexUpdate) {\n        this.simplexUpdate = false;\n        return;\n      }\n\n      let fromValue, toValue, simplexProvider, simplexRateDetails;\n      switch (input) {\n        case 'to':\n          this.fromValue = this.swap.calculateFromValue(\n            this.toValue,\n            this.bestRate,\n            this.fromCurrency\n          );\n          this.intermediateGasCheck();\n          this.gasCheck();\n          break;\n        case 'from':\n          this.toValue = this.swap.calculateToValue(\n            this.fromValue,\n            this.bestRate,\n            this.toCurrency\n          );\n          this.intermediateGasCheck();\n          this.gasCheck();\n          break;\n        case `${this.providerNames.simplex}to`:\n          this.simplexUpdate = true;\n          simplexProvider = this.swap.getProvider(this.providerNames.simplex);\n\n          if (\n            simplexProvider.canQuote(\n              this.fromValue,\n              this.toValue,\n              this.fromCurrency\n            )\n          ) {\n            simplexRateDetails = await simplexProvider.updateDigital(\n              this.fromCurrency,\n              this.toCurrency,\n              this.toValue\n            );\n\n            this.fromValue = simplexRateDetails.fromValue;\n            this.toValue = simplexRateDetails.toValue;\n          } else {\n            simplexRateDetails = await simplexProvider.updateFiat(\n              this.fromCurrency,\n              this.toCurrency,\n              -1\n            );\n\n            const rate = new BigNumber(simplexRateDetails.toValue)\n              .div(simplexRateDetails.fromValue)\n              .toString(10);\n\n            this.fromValue = this.swap.calculateFromValue(\n              this.toValue,\n              rate,\n              this.fromCurrency\n            );\n          }\n\n          break;\n        case `${this.providerNames.simplex}from`:\n          this.simplexUpdate = true;\n          simplexProvider = this.swap.getProvider(this.providerNames.simplex);\n          if (\n            simplexProvider.canQuote(\n              this.fromValue,\n              this.toValue,\n              this.fromCurrency\n            )\n          ) {\n            simplexRateDetails = await simplexProvider.updateFiat(\n              this.fromCurrency,\n              this.toCurrency,\n              this.fromValue\n            );\n\n            this.fromValue = simplexRateDetails.fromValue;\n            this.toValue = simplexRateDetails.toValue;\n          } else {\n            simplexRateDetails = await simplexProvider.updateFiat(\n              this.fromCurrency,\n              this.toCurrency,\n              -1\n            );\n\n            const rate = new BigNumber(simplexRateDetails.toValue)\n              .div(simplexRateDetails.fromValue)\n              .toString(10);\n\n            this.toValue = this.swap.calculateToValue(this.fromValue, rate);\n          }\n\n          break;\n        default:\n          toValue = this.swap.calculateToValue(this.fromValue, this.bestRate);\n          fromValue = this.swap.calculateFromValue(this.toValue, this.bestRate);\n          this.toValue = toValue;\n          this.fromValue = fromValue;\n          this.intermediateGasCheck();\n          this.gasCheck();\n          break;\n      }\n    },\n    decimalsGenerally(toCurrency) {\n      if (toCurrency.toLowerCase() === 'neo') {\n        return 0;\n      }\n      return this.fiatCurrenciesArray.includes(toCurrency) ? 2 : 6;\n    },\n    async updateRateEstimate(fromCurrency, toCurrency, fromValue, to) {\n      if (this.haveProviderRates) {\n        this.showWarning = this.warningCurrencies.includes(toCurrency);\n        this.loadingData = true;\n        this.recalculating = true;\n        this.noProvidersPair = { fromCurrency, toCurrency };\n        this.selectedProvider = {}; // Reset the selected provider when new rate pair is choosen\n        this.providerData = [];\n        const {\n          providersFound,\n          callsToMake\n        } = await this.swap.updateRateEstimate(\n          fromCurrency,\n          toCurrency,\n          fromValue,\n          this.toValue\n        );\n        this.providersFound = providersFound;\n        const rawResults = await Promise.all(\n          callsToMake.map(func =>\n            func(fromCurrency, toCurrency, fromValue, this.toValue)\n          )\n        );\n        this.loadingData = false;\n        this.recalculating = false;\n        const results = rawResults.reduce((agg, result) => {\n          if (Array.isArray(result)) {\n            agg = [...agg, ...result];\n          } else {\n            agg.push(result);\n          }\n          return agg;\n        }, []);\n\n        if (\n          results.every(\n            entry =>\n              entry.fromCurrency === this.fromCurrency &&\n              entry.toCurrency === this.toCurrency\n          )\n        ) {\n          this.providerData = bestProviderForQuantity(\n            results.map(entry => {\n              if (+entry.rate > 0) {\n                return {\n                  provider: entry.provider,\n                  fromCurrency,\n                  fromValue: this.fromValue,\n                  toCurrency,\n                  rate: +entry.rate,\n                  minValue: entry.minValue || 0,\n                  maxValue: entry.maxValue || 0,\n                  computeConversion: _fromValue => {\n                    const decimals = this.decimalsGenerally(toCurrency);\n                    return new BigNumber(_fromValue)\n                      .times(entry.rate)\n                      .toFixed(decimals)\n                      .toString(10);\n                  },\n                  additional: entry.additional || {}\n                };\n              } else if (entry.provider === this.providerNames.changelly) {\n                Toast.responseHandler(\n                  this.$t('swap.notice.retrieve-changelly-rate-failed', {\n                    fromCurrency,\n                    toCurrency\n                  }),\n                  3\n                );\n              } else if (entry.provider === this.providerNames.bity) {\n                Toast.responseHandler(\n                  this.$t('swap.notice.retrieve-bity-rate-failed', {\n                    fromCurrency,\n                    toCurrency\n                  }),\n                  3\n                );\n              } else if (entry.provider === this.providerNames.kyber) {\n                Toast.responseHandler(\n                  this.$t('swap.notice.retrieve-kyber-rate-failed', {\n                    fromCurrency,\n                    toCurrency\n                  }),\n                  3\n                );\n              } else if (entry.provider === this.providerNames.simplex) {\n                Toast.responseHandler(\n                  this.$t('swap.notice.retrieve-simplex-rate-failed', {\n                    fromCurrency,\n                    toCurrency\n                  }),\n                  3\n                );\n              }\n            }),\n            fromValue\n          );\n          this.updateEstimate(to);\n        }\n      }\n    },\n    async checkForEnoughGas(swapDetails) {\n      let ethNeeded = new BigNumber(0);\n      this.lastFeeEstimate = new BigNumber(0);\n      const gasPrice = new BigNumber(ethUnit.toWei(this.gasPrice, 'gwei'));\n      if (\n        SwapProviders.isToken(swapDetails.fromCurrency) ||\n        SwapProviders.isToken(swapDetails.toCurrency)\n      ) {\n        if (Array.isArray(swapDetails.dataForInitialization)) {\n          for (let i = 0; i < swapDetails.dataForInitialization.length; i++) {\n            if (swapDetails.dataForInitialization[i].gas) {\n              this.lastFeeEstimate = this.lastFeeEstimate.plus(\n                gasPrice.times(swapDetails.dataForInitialization[i].gas)\n              );\n              ethNeeded = ethNeeded.plus(\n                new BigNumber(swapDetails.dataForInitialization[i].value)\n              );\n            } else {\n              const gas = await this.web3.eth.estimateGas(\n                swapDetails.dataForInitialization[i]\n              );\n              this.lastFeeEstimate = this.lastFeeEstimate.plus(\n                gasPrice.times(gas)\n              );\n              ethNeeded = ethNeeded.plus(\n                swapDetails.dataForInitialization[i].value\n              );\n            }\n          }\n        }\n        const enoughToContinue = new BigNumber(this.account.balance)\n          .minus(ethNeeded.plus(this.lastFeeEstimate))\n          .gt(0);\n\n        this.moreEthNeeded = new BigNumber(this.account.balance).lt(\n          this.lastFeeEstimate\n        );\n\n        if (!ethNeeded.gt(0)) {\n          this.lastFeeEstimate = new BigNumber(0);\n        }\n\n        return enoughToContinue;\n      }\n      return true;\n    },\n    intermediateGasCheck() {\n      if (this.fromCurrency === 'ETH' && this.lastFeeEstimate.gt(0)) {\n        this.gasNotice = new BigNumber(this.account.balance)\n          .minus(\n            new BigNumber(\n              new BigNumber(ethUnit.toWei(this.fromValue, 'ether'))\n            ).plus(this.lastFeeEstimate)\n          )\n          .lte(0);\n      } else {\n        this.gasNotice = false;\n      }\n    },\n    async gasCheck() {\n      try {\n        if (\n          !SwapProviders.isToken(this.fromCurrency) ||\n          !SwapProviders.isToken(this.toCurrency)\n        ) {\n          this.gasNotice = false;\n          return;\n        }\n        if (!this.selectedProvider.provider) {\n          this.gasNotice = false;\n          return;\n        }\n        const providerDetails = this.providerList.find(entry => {\n          return entry.provider === this.selectedProvider.provider;\n        });\n        let swapDetails = {\n          providerDetails: providerDetails,\n          fromValue: this.fromValue,\n          toValue: this.toValue,\n          toAddress: this.toAddress || this.currentAddress,\n          fromAddress: this.currentAddress,\n          refundAddress: SwapProviders.isToken(providerDetails.fromCurrency)\n            ? this.currentAddress\n            : this.refundAddress,\n          exitFromAddress:\n            this.isExitToFiat && this.fromCurrency === this.baseCurrency\n              ? this.currentAddress\n              : this.exitFromAddress\n        };\n        swapDetails = await this.swap.startSwap(swapDetails);\n        if (swapDetails.marketImpact) {\n          throw Error('marketImpactAbort');\n        }\n        const enoughForGas = await this.checkForEnoughGas(swapDetails);\n        if (!enoughForGas) {\n          throw Error('notEnoughWithGas');\n        }\n        this.gasNotice = false;\n      } catch (e) {\n        if (e.message === 'marketImpactAbort') {\n          this.finalizingSwap = false;\n          // Toast.responseHandler('liquidity-too-low', 1, true);\n          return;\n        } else if (e.message === 'notEnoughWithGas') {\n          this.finalizingSwap = false;\n          this.gasNotice = true;\n          // Toast.responseHandler('not-enough-eth-gas', 1, true);\n          return;\n        }\n        this.gasNotice = false;\n      }\n    },\n    async swapConfirmationModalOpen() {\n      try {\n        if (this.validSwap) {\n          this.finalizingSwap = true;\n          const providerDetails = this.providerList.find(entry => {\n            return entry.provider === this.selectedProvider.provider;\n          });\n          const swapDetails = {\n            providerDetails: providerDetails,\n            fromValue: this.fromValue,\n            toValue: this.toValue,\n            toAddress: this.toAddress || this.currentAddress,\n            fromAddress: this.currentAddress,\n            refundAddress: SwapProviders.isToken(providerDetails.fromCurrency)\n              ? this.currentAddress\n              : this.refundAddress,\n            exitFromAddress:\n              this.isExitToFiat && this.fromCurrency === this.baseCurrency\n                ? this.currentAddress\n                : this.exitFromAddress\n          };\n          this.swapDetails = await this.swap.startSwap(swapDetails);\n          if (this.swapDetails.marketImpact) {\n            throw Error('marketImpactAbort');\n          }\n          const enoughForGas = await this.checkForEnoughGas(this.swapDetails);\n          if (!enoughForGas) {\n            throw Error('notEnoughWithGas');\n          }\n          this.finalizingSwap = false;\n\n          if (this.swapDetails.isExitToFiat) {\n            this.bityExitToFiat = true;\n            this.exitToFiatCallback = swapDetailsExit => {\n              this.bityExitToFiat = false;\n              this.swapDetails = swapDetailsExit;\n              this.openConfirmModal(this.swapDetails);\n            };\n          } else if (\n            this.isBityCryptoToCrypto() ||\n            this.isBityCryptoToCrypto('REP')\n          ) {\n            this.stringToSign = this.swapDetails.dataForInitialization.messageToSign.body;\n            this.$refs.signatureModal.$refs.signatureModal.show();\n            this.sendSignedCallback = async signed => {\n              const response = await this.swap.extraActions(\n                this.providerNames.bity,\n                'sendSigned',\n                {\n                  signature: signed,\n                  signature_submission_url: this.swapDetails\n                    .dataForInitialization.messageToSign\n                    .signature_submission_url,\n                  statusId: this.swapDetails.dataForInitialization.id,\n                  token: this.swapDetails.dataForInitialization.token\n                }\n              );\n              this.swapDetails.providerAddress =\n                response.payment_details.crypto_address;\n              this.openConfirmModal(this.swapDetails);\n            };\n          } else {\n            this.openConfirmModal(this.swapDetails);\n          }\n        }\n      } catch (e) {\n        if (e.message === 'marketImpactAbort') {\n          this.finalizingSwap = false;\n          Toast.responseHandler('liquidity-too-low', 1, true);\n          return;\n        } else if (e.message === 'notEnoughWithGas') {\n          this.finalizingSwap = false;\n          this.gasNotice = true;\n          Toast.responseHandler('error-generating-swap', 1, true);\n          return;\n        }\n        //abort (empty response from provider or failure to finalize details)\n        else if (e.message === 'abort') {\n          this.finalizingSwap = false;\n          Toast.responseHandler('error-generating-swap', 1, true);\n          return;\n        }\n        this.$refs.swapConfirmation.$refs.swapconfirmation.hide();\n        this.$refs.swapSendTo.$refs.swapconfirmation.hide();\n        this.finalizingSwap = false;\n        errorLogger(e);\n        Toast.responseHandler(e, false);\n      }\n    },\n    openConfirmModal(swapDetails) {\n      if (swapDetails.dataForInitialization && swapDetails.maybeToken) {\n        this.$refs.swapConfirmation.$refs.swapconfirmation.show();\n      } else if (swapDetails.dataForInitialization && !swapDetails.maybeToken) {\n        this.$refs.swapSendTo.$refs.swapconfirmation.show();\n      } else {\n        throw Error(this.$t('swap.notice.error-finalizing'));\n      }\n    },\n    exitToFiatAbort() {\n      // get any component state values to temporarily persist, and reset swap state to state before exit to fiat selected.\n      this.bityExitToFiat = !this.bityExitToFiat;\n    },\n    resetSwapState() {\n      this.reset();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'SwapContainer.scss';\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SwapContainer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SwapContainer.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SwapContainer.vue?vue&type=template&id=50e3e29a&scoped=true&\"\nimport script from \"./SwapContainer.vue?vue&type=script&lang=js&\"\nexport * from \"./SwapContainer.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SwapContainer.vue?vue&type=style&index=0&id=50e3e29a&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"50e3e29a\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SignatureModal.vue?vue&type=style&index=0&id=1ffa034d&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SignatureModal.vue?vue&type=style&index=0&id=1ffa034d&lang=scss&scoped=true&\"","import mod from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SwapContainer.vue?vue&type=style&index=0&id=50e3e29a&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SwapContainer.vue?vue&type=style&index=0&id=50e3e29a&lang=scss&scoped=true&\""],"sourceRoot":""}