# openapi.yaml
openapi: 3.1.0
info:
  title: Mew API
  version: 1.0.0
paths:
  /get:
    get:
      operationId: GetRoot
      responses:
        200:
          $ref: '#/components/responses/GetRootSuccess'

  /health:
    get:
      operationId: GetHealth
      responses:
        200:
          $ref: '#/components/responses/GetHealthSuccess'

  /version:
    get:
      operationId: GetVersion
      responses:
        200:
          $ref: '#/components/responses/GetVersionSuccess'

  /schema:
    get:
      operationId: GetSchema
      responses:
        200:
          $ref: '#/components/responses/GetSchemaJSONSuccess'

  /schema.json:
    get:
      operationId: GetSchemaJSON
      responses:
        200:
          $ref: '#/components/responses/GetSchemaJSONSuccess'

  /schema.yml:
    get:
      operationId: GetSchemaYML
      responses:
        200:
          $ref: '#/components/responses/GetSchemaYAMLSuccess'

  /schema.yaml:
    get:
      operationId: GetSchemaYAML
      responses:
        200:
          $ref: '#/components/responses/GetSchemaYAMLSuccess'

  /pubkey:
    get:
      operationId: GetPubkey
      responses:
        200:
          $ref: '#/components/responses/GetPubkeySuccess'

  /chains:
    get:
      operationId: GetChainMetadataList
      responses:
        200:
          $ref: '#/components/responses/GetChainMetadaListSuccess'

  /chains/{chainName}:
    get:
      operationId: GetChainMetadata
      parameters:
        - $ref: '#/components/parameters/ChainName'
      responses:
        200:
          $ref: '#/components/responses/GetChainMetadataSuccess'

  # Balances

  /balances/{chainName}/{address}:
    get:
      operationId: GetBalancesByChainNameAndAddress
      parameters:
        - $ref: '#/components/parameters/ChainName'
        - $ref: '#/components/parameters/Address'
      responses:
        200:
          $ref: '#/components/responses/GetBalancesByChainNameAndAddressSuccess'

  # Bitcoin balances
  #
  /v1/btc/{chainName}/balances:
    get:
      operationId: GetBtcBalanceByChainNameAndAddresses
      parameters:
        - $ref: '#/components/parameters/ChainName'
        - $ref: '#/components/parameters/BtcAddresses'
        - $ref: '#/components/parameters/AumAddressType'
        - $ref: '#/components/parameters/AumAddressPlatform'
      responses:
        200:
          $ref: '#/components/responses/GetBtcBalanceByChainNameAndAddressesSuccess'

  /v1/btc/{chainName}/balances/{address}:
    get:
      operationId: GetBtcBalanceByChainNameAndAddress
      parameters:
        - $ref: '#/components/parameters/ChainName'
        - $ref: '#/components/parameters/BtcAddress'
        - $ref: '#/components/parameters/AumAddressType'
        - $ref: '#/components/parameters/AumAddressPlatform'
      responses:
        200:
          $ref: '#/components/responses/GetBtcBalanceByChainNameAndAddressSuccess'

  # Bitcoin Transaction fees

  /v1/btc/{chainName}/fees:
    get:
      operationId: GetBtcTransactionFees
      parameters:
        - $ref: '#/components/parameters/ChainName'
      responses:
        200:
          $ref: '#/components/responses/GetBtcTransactionFeesSuccess'

  # Bitcoin transaction routes

  /v1/btc/{chainName}/transactions/{transactionId}/status:
    get:
      operationId: GetBtcTransactionStatus
      parameters:
        - $ref: '#/components/parameters/ChainName'
        - $ref: '#/components/parameters/BtcTransactionId'
      responses:
        200:
          $ref: '#/components/responses/GetBtcTransactionStatusSuccess'

  /v1/btc/{chainName}/transactions/{transactionId}:
    get:
      operationId: GetBtcTransaction
      parameters:
        - $ref: '#/components/parameters/ChainName'
        - $ref: '#/components/parameters/BtcTransactionId'
      responses:
        200:
          $ref: '#/components/responses/GetBtcTransactionSuccess'

  /v1/btc/{chainName}/estimates:
    post:
      operationId: GetBtcTransactionEstimate
      parameters:
        - $ref: '#/components/parameters/ChainName'
      requestBody:
        $ref: '#/components/requestBodies/GetBtcTransactionEstimate'
      responses:
        201:
          $ref: '#/components/responses/GetBtcTransactionEstimateSuccess'

  /v1/btc/{chainName}/quotes:
    post:
      operationId: GetBtcTransactionQuote
      parameters:
        - $ref: '#/components/parameters/ChainName'
      requestBody:
        $ref: '#/components/requestBodies/GetBtcTransactionQuote'
      responses:
        201:
          $ref: '#/components/responses/GetBtcTransactionQuoteSuccess'

  /v1/btc/{chainName}/quotes/{quoteId}/unsigned:
    get:
      operationId: GetUnsignedBtcTransaction
      parameters:
        - $ref: '#/components/parameters/ChainName'
        - $ref: '#/components/parameters/QuoteId'
        - $ref: '#/components/parameters/PriorityId'
      # requestBody:
      #   $ref: '#/components/requestBodies/GetUnsignedBtcTransaction'
      responses:
        200:
          $ref: '#/components/responses/GetUnsignedBtcTransactionSuccess'

  /v1/btc/{chainName}/broadcasts:
    post:
      operationId: BroadcastBtcTransaction
      parameters:
        - $ref: '#/components/parameters/ChainName'
      requestBody:
        $ref: '#/components/requestBodies/BroadcastBtcTransaction'
      responses:
        201:
          $ref: '#/components/responses/BroadcastBtcTransactionSuccess'

  # EVM transaction routes

  /v1/evm/{chainId}/transactions/{txHash}/status:
    get:
      operationId: GetEvmTransactionStatus
      parameters:
        - $ref: '#/components/parameters/ChainId'
        - $ref: '#/components/parameters/EvmHash'
      responses:
        200:
          $ref: '#/components/responses/GetEvmTransactionStatusSuccess'

  /v1/evm/{chainId}/transactions/{txHash}:
    get:
      operationId: GetEvmTransaction
      parameters:
        - $ref: '#/components/parameters/ChainId'
        - $ref: '#/components/parameters/EvmHash'
      responses:
        200:
          $ref: '#/components/responses/GetEvmTransactionSuccess'

  /v1/evm/{chainId}/estimates:
    post:
      operationId: GetEvmTransactionEstimate
      parameters:
        - $ref: '#/components/parameters/ChainId'
      requestBody:
        $ref: '#/components/requestBodies/GetEvmTransactionEstimate'
      responses:
        201:
          $ref: '#/components/responses/GetEvmTransactionEstimateSuccess'

  /v1/evm/{chainId}/quotes:
    post:
      operationId: GetEvmTransactionQuote
      parameters:
        - $ref: '#/components/parameters/ChainId'
      requestBody:
        $ref: '#/components/requestBodies/GetEvmTransactionQuote'
      responses:
        201:
          $ref: '#/components/responses/GetEvmTransactionQuoteSuccess'

  /v1/evm/{chainId}/quotes/{quoteId}/unsigned:
    get:
      operationId: GetUnsignedEvmTransaction
      parameters:
        - $ref: '#/components/parameters/ChainId'
        - $ref: '#/components/parameters/QuoteId'
        - $ref: '#/components/parameters/PriorityId'
      # requestBody:
      #   $ref: '#/components/requestBodies/GetUnsignedEvmTransaction'
      responses:
        200:
          $ref: '#/components/responses/GetUnsignedEvmTransactionSuccess'

  /v1/evm/{chainId}/broadcasts:
    post:
      operationId: BroadcastEvmTransaction
      parameters:
        - $ref: '#/components/parameters/ChainId'
      requestBody:
        $ref: '#/components/requestBodies/BroadcastEvmTransaction'
      responses:
        201:
          $ref: '#/components/responses/BroadcastEvmTransactionSuccess'

components:
  parameters:
    ChainId:
      name: chainId
      in: path
      schema:
        $ref: '#/components/schemas/BigIntInput'
    ChainName:
      name: chainName
      in: path
      schema:
        type: string
    AumAddressType:
      name: type
      in: query
      schema:
        type: string
    AumAddressPlatform:
      name: platform
      in: query
      schema:
        type: string
    EvmHash:
      in: path
      name: txHash
      schema:
        $ref: '#/components/schemas/EvmHashInput'
    QuoteId:
      in: path
      name: quoteId
      schema:
        $ref: '#/components/schemas/UUID'
    PriorityId:
      in: query
      name: priority
      schema:
        $ref: '#/components/schemas/FeePriority'
    BtcAddress:
      in: path
      name: btcAddress
      schema:
        $ref: '#/components/schemas/BtcAddressInput'
    BtcAddresses:
      in: query
      name: addresses
      schema:
        type: string
    BtcTransactionId:
      in: path
      name: txid
      schema:
        $ref: '#/components/schemas/BtcTransactionIdInput'
    EvmAddress:
      in: path
      name: address
      schema:
        $ref: '#/components/schemas/EvmAddressInput'
    Address:
      in: path
      name: address
      schema:
        $ref: '#/components/schemas/AnyAddressInput'

  requestBodies:
    GetEvmTransactionEstimate:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEvmTransactionEstimateRequest'

    GetEvmTransactionQuote:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEvmTransactionQuoteRequest'

    # GetUnsignedEvmTransaction:
    #   required: true
    #   content:
    #     application/json:
    #       schema:
    #         $ref: '#/components/schemas/GetUnsignedEvmTransactionRequest'

    BroadcastEvmTransaction:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BroadcastEvmTransactionRequest'

    GetBtcTransactionEstimate:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBtcTransactionEstimateRequest'

    GetBtcTransactionQuote:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBtcTransactionQuoteRequest'

    # GetUnsignedBtcTransaction:
    #   required: true
    #   content:
    #     application/json:
    #       schema:
    #         $ref: '#/components/schemas/GetUnsignedBtcTransactionRequest'

    BroadcastBtcTransaction:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BroadcastBtcTransactionRequest'

  responses:
    GetRootSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetRootResponse'

    GetHealthSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetHealthResponse'

    GetVersionSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetVersionResponse'

    GetSchemaYAMLSuccess:
      content:
        application/yaml:
          schema:
            $ref: '#/components/schemas/GetSchemaYAMLResponse'

    GetSchemaJSONSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetSchemaJSONResponse'

    GetPubkeySuccess:
      content:
        text/plain:
          schema:
            $ref: '#/components/schemas/GetPubkeyResponse'

    GetChainMetadaListSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetChainMetadataListResponse'

    GetChainMetadataSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetChainMetadataResponse'

    GetBalancesByChainNameAndAddressSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBalancesByChainNameAndAddressResponse'

    GetBtcTransactionStatusSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBtcTransactionStatusResponse'

    GetBtcTransactionSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBtcTransactionResponse'

    GetBtcBalanceByChainNameAndAddressesSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBtcBalanceByChainNameAndAddressesResponse'

    GetBtcBalanceByChainNameAndAddressSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBtcBalanceByChainNameAndAddressResponse'

    GetBtcTransactionFeesSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBtcTransactionFeesResponse'

    GetBtcTransactionEstimateSuccess:
      headers:
        X-MEW-API-Signature:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBtcTransactionEstimateResponse'

    GetBtcTransactionQuoteSuccess:
      headers:
        X-MEW-API-Signature:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBtcTransactionQuoteResponse'

    GetUnsignedBtcTransactionSuccess:
      headers:
        X-MEW-API-Signature:
          schema:
            type: string
        X-MEW-API-Timestamp:
          schema:
            $ref: '#/components/schemas/ISO8601'
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetUnsignedBtcTransactionResponse"

    BroadcastBtcTransactionSuccess:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BroadcastBtcTransactionResponse"

    GetEvmTransactionStatusSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEvmTransactionStatusResponse'

    GetEvmTransactionSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEvmTransactionResponse'

    GetEvmTransactionEstimateSuccess:
      headers:
        X-MEW-API-Signature:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEvmTransactionEstimateResponse'

    GetEvmTransactionQuoteSuccess:
      headers:
        X-MEW-API-Signature:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEvmTransactionQuoteResponse'

    GetUnsignedEvmTransactionSuccess:
      headers:
        X-MEW-API-Signature:
          schema:
            type: string
        X-MEW-API-Timestamp:
          schema:
            $ref: '#/components/schemas/ISO8601'
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetUnsignedEvmTransactionResponse"

    BroadcastEvmTransactionSuccess:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BroadcastEvmTransactionResponse"

  schemas:
    # Input primitives
    BigIntInput:
      type: string
      # Patterns:
        # - 0x[0-9a-fA-F]+
        # - [0-9]+
    EvmAddressInput:
      type: string
      pattern: '^((0|\\)[xX])?[0-9a-fA-F]{40}$'
    EvmHashInput:
      type: string
      pattern: '^((0|\\)[xX])?[0-9a-fA-F]{64}$'
    BtcAddressInput:
      type: string
      # Any alphanumeric string that's not too small or too big
      pattern: '^[0-9a-zA-Z]{10,100}$'
    BtcTransactionIdInput:
      type: string
      pattern: '^((0|\\)[xX])?[0-9a-fA-F]{64}$'
    AnyAddressInput:
      type: string
    BtcSatoshiValue:
      type: number
    BtcTransactionSpeed:
      type: string
      enum: ['MANUAL', 'FAST', 'ECONOMY', 'MINIMUM']
    BtcBroadcastType:
      type: string
      enum: ['MEMPOOL', 'RPC']
    ByteStringInput:
      type: string
      pattern: '^((0|\\)[xX])?([0-9a-fA-F]{2})*$'
    StringDecimalUintInput:
      type: string
      pattern: '^[0-9]+$'
    StringDecimalUint64Input:
      type: string
      pattern: '^[0-9]{1,20}$' # Requires additional validation that it's actually within uint64
    HexUintInput:
      type: string
      pattern: '^((0|\\)[xX])[0-9a-fA-F]+$'
    HexUint16Input:
      type: string
      pattern: '^((0|\\)[xX])[0-9a-fA-F]{1,4}$'
    HexUint32Input:
      type: string
      pattern: '^((0|\\)[xX])[0-9a-fA-F]{1,8}$'
    HexUint64Input:
      type: string
      pattern: '^((0|\\)[xX])[0-9a-fA-F]{1,16}$'
    HexUint256Input:
      type: string
      pattern: '^((0|\\)[xX])[0-9a-fA-F]{1,64}$'
    UUIDInput:
      type: string
      pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$

    # Output primitives
    EvmAddress:
      type: string
      pattern: '^0x[0-9a-f]{40}$'
    EvmHash:
      type: string
      pattern: '^0x[0-9a-f]{64}$'
    BtcAddress:
      type: string
      pattern: '^[0-9a-zA-Z]+$'
    ByteString:
      type: string
      pattern: '^0x([0-9a-f]{2})*$'
    HexUint:
      type: string
      pattern: '^0x[0-9a-f]+$'
    HexUint16:
      type: string
      pattern: '^0x[0-9a-f]{1,4}$'
    HexUint32:
      type: string
      pattern: '^0x[0-9a-f]{1,8}$'
    HexUint64:
      type: string
      pattern: '^0x[0-9a-f]{1,16}$'
    HexUint256:
      type: string
      pattern: '^0x[0-9a-f]{1,64}$'
    Hex:
      type: string
      pattern: '^0x[0-9a-fA-F]*$'
    UUID:
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
    ISO8601:
      type: string

    # Composite types
    BtcOutputInput:
      type: object
      required:
        - address
        - amount
      properties:
        address:
          $ref: '#/components/schemas/BtcAddressInput'
        amount:
          oneOf:
            - type: number
            - $ref: '#/components/schemas/StringDecimalUint64Input'
            - $ref: '#/components/schemas/HexUint64Input'

    BtcTransactionQuote:
      type: object
      required:
        - speed
        - feeRate
        - raw
        - psbt
      properties:
        speed:
          $ref: '#/components/schemas/BtcTransactionSpeed'
        feeRate:
          $ref: '#/components/schemas/BtcSatoshiValue'
        raw:
          type: object
          required:
            - fee
            - leftover
            - txHex
          properties:
            fee:
              $ref: '#/components/schemas/BtcSatoshiValue'
            leftover:
              $ref: '#/components/schemas/BtcSatoshiValue'
            txHex:
              type: string
        psbt:
          type: object
          required:
            - fee
            - leftover
            - psbtBase64
          properties:
            fee:
              $ref: '#/components/schemas/BtcSatoshiValue'
            leftover:
              $ref: '#/components/schemas/BtcSatoshiValue'
            psbtBase64:
              type: string

    ChainMetadata:
      type: object
      required:
        - name
        - nameLong
        - type
        - blockExplorerTX
        - blockExplorerAddr
        - isTestNetwork
        - currencyName
        - currencyNameLong
        - icon
      properties:
        name:
          type: string
        nameLong:
          type: string
        type:
          type: string
        blockExplorerTX:
          type: string
        blockExplorerAddr:
          type: string
        chainID:
          type: string
        isTestNetwork:
          type: boolean
        currencyName:
          type: string
        currencyNameLong:
          type: string
        icon:
          type: string
        rpcUrls:
          type: array
          items:
            type: string

    AccessTuple:
      type: object
      required:
        - address
        - storageKeys
      properties:
        address:
          $ref: '#/components/schemas/EvmAddress'
        storageKeys:
          type: array
          items:
            $ref: '#/components/schemas/EvmAddress'

    AccessList:
      type: array
      items:
        $ref: '#/components/schemas/AccessTuple'

    GetRootResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string

    GetHealthResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string

    GetVersionResponse:
      type: object
      required:
        - version
      properties:
        version:
          type: string

    GetSchemaYAMLResponse:
      type: string

    GetSchemaJSONResponse:
      type: object
      additionalProperties: true

    GetPubkeyResponse:
      type: string

    # ================
    # Supported chains
    # ================

    GetChainMetadataListResponse:
      type: object
      required:
        - result
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/ChainMetadata'

    GetChainMetadataResponse:
      type: object
      required:
        - result
      properties:
        result:
          $ref: '#/components/schemas/ChainMetadata'

    # ====================
    # Transaction Statuses
    # ====================

    EvmTransactionStatus:
      type: string
      enum:
        - NOT_FOUND
        - PENDING
        - SUCCESS
        - FAIL

    # TODO: Modify these statuses
    BtcTransactionStatus:
      type: string
      enum:
        - NOT_FOUND
        - PENDING
        - SUCCESS
        - FAIL

    # ========
    # Gas fees
    # ========

    FeePriority:
      type: string
      enum:
        - ECONOMY
        - REGULAR
        - FAST
        - FASTEST

    # =================================================
    # Bitcoin transaction fees
    # =================================================

    BtcTransactionFeeQuote:
      type: object
      required:
        - nativeValue
        - nativeSymbol
      properties:
        nativeSymbol:
          type: string
        nativeFeeRate:
          type: string
        nativeFeeTotal:
          type: string
        fiatSymbol:
          type: string
        fiatFeeRate:
          type: string
        fiatFeeTotal:
          type: string

    BtcTransactionFeeEstimate:
      type: object
      required:
        - nativeValue
        - nativeSymbol
      properties:
        nativeSymbol:
          type: string
        nativeFeeRate:
          type: string
        fiatSymbol:
          type: string
        fiatFeeRate:
          type: string

    BtcTransactionQuotes:
      type: object
      required:
        # - feeProvider
        - ECONOMY
        - REGULAR
        - FAST
        - FASTEST
      properties:
        # feeProvider:
        #   type: string
        ECONOMY:
          $ref: '#/components/schemas/BtcTransactionFeeQuote'
        REGULAR:
          $ref: '#/components/schemas/BtcTransactionFeeQuote'
        FAST:
          $ref: '#/components/schemas/BtcTransactionFeeQuote'
        FASTEST:
          $ref: '#/components/schemas/BtcTransactionFeeQuote'

    GetBtcTransactionFeesResponse:
      type: object
      required:
        # - provider
        - ECONOMY
        - REGULAR
        - FAST
        - FASTEST
      properties:
        # TODO: Remove this (provider)
        provider:
          type: string
        ECONOMY:
          $ref: '#/components/schemas/BtcTransactionFeeEstimate'
        REGULAR:
          $ref: '#/components/schemas/BtcTransactionFeeEstimate'
        FAST:
          $ref: '#/components/schemas/BtcTransactionFeeEstimate'
        FASTEST:
          $ref: '#/components/schemas/BtcTransactionFeeEstimate'

    # ===============================================
    # EVM (Ethereum Virtual Machine) Transaction Fees
    # ===============================================

    EvmGasFeeInfo:
      type: object
      required:
        - nativeValue
      properties:
        nativeValue:
          $ref: '#/components/schemas/HexUint'
        fiatValue:
          $ref: '#/components/schemas/HexUint'
        nativeSymbol:
          type: string
        fiatSymbol:
          type: string

    EvmGasFees:
      type: object
      required:
        - ECONOMY
        - REGULAR
        - FAST
        - FASTEST
      properties:
        ECONOMY:
          $ref: '#/components/schemas/EvmGasFeeInfo'
        REGULAR:
          $ref: '#/components/schemas/EvmGasFeeInfo'
        FAST:
          $ref: '#/components/schemas/EvmGasFeeInfo'
        FASTEST:
          $ref: '#/components/schemas/EvmGasFeeInfo'

    # ========
    # Balances
    # ========

    GetBalancesByChainNameAndAddressResponse:
      type: object
      required:
        - result
      properties:
        result:
          type: array
          items:
            type: object
            required:
              - contract
              - balance
            properties:
              balance:
                type: string
              contract:
                type: string
              decimals:
                type: number
              logo_url:
                type: string
              name:
                type: string
              price:
                type: number
              symbol:
                type: string

    BtcBalance:
      type: object
      required:
        - nativeValue
        - nativeSymbol
      properties:
        nativeValue:
          type: string
        fiatValue:
          type: string
        nativeSymbol:
          type: string
        fiatSymbol:
          type: string
        # logoUrl:
        #   type: string

    BtcAddressWithBalance:
      type: object
      required:
        - address
        - balance
      properties:
        address:
          $ref: '#/components/schemas/BtcAddress'
        balance:
          $ref: '#/components/schemas/BtcBalance'

    GetBtcBalanceByChainNameAndAddressesResponse:
      type: array
      items:
        $ref: '#/components/schemas/BtcAddressWithBalance'

    GetBtcBalanceByChainNameAndAddressResponse:
      $ref: '#/components/schemas/BtcAddressWithBalance'

    # ===========================================
    # EVM (Ethereum Virtual Machine) Transactions
    # ===========================================

    GetEvmTransactionEstimateRequest:
      type: object
      required:
        - address
        - to
        - value
        - data
      properties:
        address:
          $ref: '#/components/schemas/EvmAddressInput'
        to:
          oneOf:
            - $ref: '#/components/schemas/EvmAddressInput'
            - type: 'null'
        value:
          $ref: '#/components/schemas/HexUintInput'
        data:
          $ref: '#/components/schemas/ByteStringInput'
        accessList:
          $ref: '#/components/schemas/AccessList'

    GetEvmTransactionQuoteRequest:
      type: object
      required:
        - address
        - to
        - value
        - data
      properties:
        address:
          $ref: '#/components/schemas/EvmAddressInput'
        to:
          oneOf:
            - $ref: '#/components/schemas/EvmAddressInput'
            - type: 'null'
        value:
          $ref: '#/components/schemas/HexUintInput'
        data:
          $ref: '#/components/schemas/ByteStringInput'
        accessList:
          $ref: '#/components/schemas/AccessList'

    # ====================
    # EVM Transactions
    # ====================

    GetEvmTransactionStatusResponse:
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/EvmTransactionStatus'

    GetEvmTransactionResponse:
      type: object
      properties:
        TODO:
          type: string

    GetEvmTransactionEstimateResponse:
      type: object
      required:
        - fees
      properties:
        fees:
          $ref: '#/components/schemas/EvmGasFees'

    GetEvmTransactionQuoteResponse:
      type: object
      required:
        # - transactionId
        - quoteId
        - fees
      properties:
        quoteId:
          $ref: '#/components/schemas/UUID'
        fees:
          $ref: '#/components/schemas/EvmGasFees'

    # GetUnsignedEvmTransactionRequest:
    #   type: object
    #   required:
    #     - transactionId
    #     - priority
    #   properties:
    #     transactionId:
    #       $ref: '#/components/schemas/UUIDInput'
    #     priority:
    #       $ref: '#/components/schemas/FeePriority'

    GetUnsignedEvmTransactionResponse:
      type: object
      required:
        - serialized
      properties:
        serialized:
          $ref: '#/components/schemas/ByteString'

    BroadcastEvmTransactionRequest:
      type: object
      required:
        - signedTransaction
      properties:
        signedTransaction:
          $ref: '#/components/schemas/ByteStringInput'

    BroadcastEvmTransactionResponse:
      type: object
      required:
        - txHash
      properties:
        txHash:
          type: string

    # ====================
    # Bitcoin Transactions
    # ====================

    GetBtcTransactionStatusResponse:
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/BtcTransactionStatus'

    BtcOutput2:
      type: object
      required:
        - scriptPubkey
        - value
      properties:
        scriptPubkey:
          type: string
        value: # Decimal number
          type: string

    GetBtcTransactionResponse:
      type: object
      required:
        - txid
        - fee
        - outputs
      properties:
        txid:
          type: string
        fee:
          type: string
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/BtcOutput2'
        block:
          type: object
          properties:
            height:
              type: string
            # position:
            #   type: string

    GetBtcTransactionEstimateRequest:
      type: object
      required:
        - fromAddresses
      properties:
        doNotFilterOutOrdinals:
          type: boolean
        allowSendingDust:
          type: boolean
        changeAddress:
          $ref: '#/components/schemas/BtcAddressInput'
        consolidationAddress:
          $ref: '#/components/schemas/BtcAddressInput'
        fromAddresses:
          minItems: 1
          maxItems: 255
          type: array
          items:
            $ref: '#/components/schemas/BtcAddressInput'
        outputs:
          type: array
          minItems: 0
          maxItems: 255
          items:
            $ref: '#/components/schemas/BtcOutputInput'

    GetBtcTransactionQuoteRequest:
      type: object
      required:
        - fromAddresses
      properties:
        doNotFilterOutOrdinals:
          type: boolean
        allowSendingDust:
          type: boolean
        changeAddress:
          $ref: '#/components/schemas/BtcAddressInput'
        consolidationAddress:
          $ref: '#/components/schemas/BtcAddressInput'
        fromAddresses:
          minItems: 1
          maxItems: 255
          type: array
          items:
            $ref: '#/components/schemas/BtcAddressInput'
        outputs:
          type: array
          minItems: 0
          maxItems: 255
          items:
            $ref: '#/components/schemas/BtcOutputInput'

    GetBtcTransactionEstimateResponse:
      type: object
      required:
        - fees
        - ordinalsFilteredOut
      properties:
        quoteId:
          $ref: '#/components/schemas/UUID'
        fees:
          $ref: '#/components/schemas/BtcTransactionQuotes'
        ordinalsFilteredOut:
          type: boolean

    GetBtcTransactionQuoteResponse:
      type: object
      required:
        - quoteId
        - fees
        - ordinalsFilteredOut
      properties:
        quoteId:
          $ref: '#/components/schemas/UUID'
        fees:
          $ref: '#/components/schemas/BtcTransactionQuotes'
        ordinalsFilteredOut:
          type: boolean

    GetUnsignedBtcTransactionResponse:
      type: object
      required:
        - serialized
        - ordinalsFilteredOut
      properties:
        serialized:
          $ref: '#/components/schemas/ByteString'
        ordinalsFilteredOut:
          type: boolean

    BroadcastBtcTransactionRequest:
      type: object
      required:
        - signedTransaction
      properties:
        signedTransaction:
          type: string

    BroadcastBtcTransactionResponse:
      type: object
      required:
        - txid
      properties:
        txid:
          type: string
