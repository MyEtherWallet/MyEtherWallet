# openapi.yaml
openapi: 3.1.0
info:
  title: Mew API
  version: 1.0.0
paths:
  /get:
    get:
      operationId: GetRoot
      responses:
        200:
          $ref: '#/components/responses/GetRootSuccess'

  /health:
    get:
      operationId: GetHealth
      responses:
        200:
          $ref: '#/components/responses/GetHealthSuccess'

  /version:
    get:
      operationId: GetVersion
      responses:
        200:
          $ref: '#/components/responses/GetVersionSuccess'

  /schema:
    get:
      operationId: GetSchema
      responses:
        200:
          $ref: '#/components/responses/GetSchemaJSONSuccess'

  /schema.json:
    get:
      operationId: GetSchemaJSON
      responses:
        200:
          $ref: '#/components/responses/GetSchemaJSONSuccess'

  /schema.yml:
    get:
      operationId: GetSchemaYML
      responses:
        200:
          $ref: '#/components/responses/GetSchemaYAMLSuccess'

  /schema.yaml:
    get:
      operationId: GetSchemaYAML
      responses:
        200:
          $ref: '#/components/responses/GetSchemaYAMLSuccess'

  /pubkey:
    get:
      operationId: GetPubkey
      responses:
        200:
          $ref: '#/components/responses/GetPubkeySuccess'

  /chains:
    get:
      operationId: GetChainMetadataList
      responses:
        200:
          $ref: '#/components/responses/GetChainMetadaListSuccess'

  /chains/{chainName}:
    get:
      operationId: GetChainMetadata
      parameters:
        - $ref: '#/components/parameters/ChainName'
      responses:
        200:
          $ref: '#/components/responses/GetChainMetadataSuccess'

  # Tokens

  /v1/web/trending-tokens:
    get:
      operationId: GetWebTrendingTokens
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/SortDirection'
      responses:
        200:
          $ref: '#/components/responses/GetWebTrendingTokensSuccess'

  /v1/web/tokens-table:
    get:
      operationId: GetWebTokensTable
      parameters:
        - $ref: '#/components/parameters/AddressChain'
        - $ref: '#/components/parameters/FilterChain'
        - $ref: '#/components/parameters/Category'
        - $ref: '#/components/parameters/Search'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/WebTokensTableSort'
      responses:
        200:
          $ref: '#/components/responses/GetWebTokensTableSuccess'

  /v1/web/tokens-watchlist:
    get:
      operationId: GetWebTokensWatchlist
      parameters:
        - $ref: '#/components/parameters/AddressChain'
        - $ref: '#/components/parameters/CoinIds'
      responses:
        200:
          $ref: '#/components/responses/GetWebTokensWatchlistSuccess'

  /v1/web/top-gainers:
    get:
      operationId: GetWebTopGainers
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/SortDirection'
      responses:
        200:
          $ref: '#/components/responses/GetWebTopGainersSuccess'

  /v1/coingecko/chains/{chainName}/preview:
    get:
      operationId: GetCoinGeckoChainPreview
      parameters:
        - $ref: '#/components/parameters/ChainName'
      responses:
        200:
          $ref: '#/components/responses/GetCoinGeckoChainPreviewSuccess'

  # TODO: ? Remove ?
  /v1/coingecko/market-data:
    get:
      operationId: GetCoinGeckoAllMarketData
      responses:
        200:
          $ref: '#/components/responses/GetCoinGeckoAllMarketDataSuccess'

  # Balances

  # Ideally this would be: GET /v1/multi/chains/{chainName}/addresses/{address}/token-balances # /balances/{chainName}/{address}:
  /balances/{chainName}/{address}:
    get:
      operationId: GetBalancesByChainNameAndAddress
      parameters:
        - $ref: '#/components/parameters/ChainName'
        - $ref: '#/components/parameters/Address'
      responses:
        200:
          $ref: '#/components/responses/GetBalancesByChainNameAndAddressSuccess'

  # Bitcoin balances

  /v1/btc/{chainName}/balances:
    get:
      operationId: GetBtcBalanceByChainNameAndAddresses
      parameters:
        - $ref: '#/components/parameters/ChainName'
        - $ref: '#/components/parameters/BtcAddresses'
        - $ref: '#/components/parameters/AumAddressType'
        - $ref: '#/components/parameters/AumAddressPlatform'
      responses:
        200:
          $ref: '#/components/responses/GetBtcBalanceByChainNameAndAddressesSuccess'

  /v1/btc/{chainName}/balances/{address}:
    get:
      operationId: GetBtcBalanceByChainNameAndAddress
      parameters:
        - $ref: '#/components/parameters/ChainName'
        - $ref: '#/components/parameters/BtcAddress'
        - $ref: '#/components/parameters/AumAddressType'
        - $ref: '#/components/parameters/AumAddressPlatform'
      responses:
        200:
          $ref: '#/components/responses/GetBtcBalanceByChainNameAndAddressSuccess'

  # Bitcoin Transaction fees

  /v1/btc/{chainName}/fees:
    get:
      operationId: GetBtcTransactionFees
      parameters:
        - $ref: '#/components/parameters/ChainName'
      responses:
        200:
          $ref: '#/components/responses/GetBtcTransactionFeesSuccess'

  # Bitcoin transaction routes

  /v1/btc/{chainName}/transactions/{transactionId}/status:
    get:
      operationId: GetBtcTransactionStatus
      parameters:
        - $ref: '#/components/parameters/ChainName'
        - $ref: '#/components/parameters/BtcTransactionId'
      responses:
        200:
          $ref: '#/components/responses/GetBtcTransactionStatusSuccess'

  /v1/btc/{chainName}/transactions/{transactionId}:
    get:
      operationId: GetBtcTransaction
      parameters:
        - $ref: '#/components/parameters/ChainName'
        - $ref: '#/components/parameters/BtcTransactionId'
      responses:
        200:
          $ref: '#/components/responses/GetBtcTransactionSuccess'

  /v1/btc/{chainName}/estimates:
    post:
      operationId: GetBtcTransactionEstimate
      parameters:
        - $ref: '#/components/parameters/ChainName'
      requestBody:
        $ref: '#/components/requestBodies/GetBtcTransactionEstimate'
      responses:
        201:
          $ref: '#/components/responses/GetBtcTransactionEstimateSuccess'

  /v1/btc/{chainName}/quotes:
    post:
      operationId: GetBtcTransactionQuote
      parameters:
        - $ref: '#/components/parameters/ChainName'
      requestBody:
        $ref: '#/components/requestBodies/GetBtcTransactionQuote'
      responses:
        201:
          $ref: '#/components/responses/GetBtcTransactionQuoteSuccess'

  /v1/btc/{chainName}/quotes/{quoteId}/unsigned:
    get:
      operationId: GetUnsignedBtcTransaction
      parameters:
        - $ref: '#/components/parameters/ChainName'
        - $ref: '#/components/parameters/QuoteId'
        - $ref: '#/components/parameters/PriorityId'
      responses:
        200:
          $ref: '#/components/responses/GetUnsignedBtcTransactionSuccess'

  /v1/btc/{chainName}/broadcasts:
    post:
      operationId: BroadcastBtcTransaction
      parameters:
        - $ref: '#/components/parameters/ChainName'
      requestBody:
        $ref: '#/components/requestBodies/BroadcastBtcTransaction'
      responses:
        201:
          $ref: '#/components/responses/BroadcastBtcTransactionSuccess'

  # EVM swap routes

  # TODO:
  # /v1/evm/{chainId}/swap/estimates:
  #   post:
  #     operationId: GetEvmSwapEstimate
  #     parameters:
  #       - $ref: '#/components/parameters/ChainId'
  #     requestBody:
  #       $ref: '#/components/requestBodies/GetEvmSwapEstimate'
  #     responses:
  #       201:
  #         $ref: '#/components/responses/GetEvmSwapEstimateSuccess'

  # TODO:
  # /v1/evm/{chainId}/swap/quotes:
  #   post:
  #     operationId: GetEvmSwapQuote
  #     parameters:
  #       - $ref: '#/components/parameters/ChainId'
  #     requestBody:
  #       $ref: '#/components/requestBodies/GetEvmSwapQuote'
  #     responses:
  #       201:
  #         $ref: '#/components/responses/GetEvmSwapQuoteSuccess'

  # TODO:
  # /v1/evm/{chainId}/swap/quotes/{quoteId}/unsigned:
  #   get:
  #     operationId: GetUnsignedEvmSwapTransaction
  #     parameters:
  #       - $ref: '#/components/parameters/ChainId'
  #     responses:
  #       200:
  #         $ref: '#/components/responses/GetUnsignedEvmSwapTransactionSuccess'

  # EVM balances routes

  # TODO:
  /v1/evm/addresses/{address}/token-balances:
    get:
      operationId: GetTokenBalancesByChainNamesAndAddress
      parameters:
        - $ref: '#/components/parameters/Address'
        - $ref: '#/components/parameters/ChainNames'
      responses:
        200:
          $ref: '#/components/responses/GetTokenBalancesByChainNamesAndAddressSuccess'

  # EVM contract routes

  /v1/evm/chains/{chainId}/erc20/{contract}/metadata:
    get:
      operationId: GetErc20ContractMetadata
      parameters:
        - $ref: '#/components/parameters/ChainId'
        - $ref: '#/components/parameters/EvmContractAddress'
      responses:
        200:
          $ref: '#/components/responses/GetErc20ContractMetadataSuccess'

  /v1/evm/chains/{chainId}/erc20/{contract}/addresses/{address}/balance:
    get:
      operationId: GetErc20AddressBalance
      parameters:
        - $ref: '#/components/parameters/ChainId'
        - $ref: '#/components/parameters/EvmContractAddress'
        - $ref: '#/components/parameters/EvmAddress'
      responses:
        200:
          $ref: '#/components/responses/GetErc20AddressBalanceSuccess'

  /v1/evm/chains/{chainId}/erc721/{contract}/metadata:
    get:
      operationId: GetErc721ContractMetadata
      parameters:
        - $ref: '#/components/parameters/ChainId'
        - $ref: '#/components/parameters/EvmContractAddress'
      responses:
        200:
          $ref: '#/components/responses/GetErc721ContractMetadataSuccess'

  # EVM transaction routes

  /v1/evm/chains/{chainId}/transactions/{txHash}/status:
    get:
      operationId: GetEvmTransactionStatus
      parameters:
        - $ref: '#/components/parameters/ChainId'
        - $ref: '#/components/parameters/EvmHash'
      responses:
        200:
          $ref: '#/components/responses/GetEvmTransactionStatusSuccess'

  /v1/evm/chains/{chainId}/transactions/{txHash}:
    get:
      operationId: GetEvmTransaction
      parameters:
        - $ref: '#/components/parameters/ChainId'
        - $ref: '#/components/parameters/EvmHash'
      responses:
        200:
          $ref: '#/components/responses/GetEvmTransactionSuccess'

  /v1/evm/chains/{chainId}/estimates:
    post:
      operationId: GetEvmTransactionEstimate
      parameters:
        - $ref: '#/components/parameters/ChainId'
      requestBody:
        $ref: '#/components/requestBodies/GetEvmTransactionEstimate'
      responses:
        201:
          $ref: '#/components/responses/GetEvmTransactionEstimateSuccess'

  /v1/evm/chains/{chainId}/multi-estimates:
    post:
      operationId: GetEvmMultiTransactionEstimate
      parameters:
        - $ref: '#/components/parameters/ChainId'
      requestBody:
        $ref: '#/components/requestBodies/GetEvmMultiTransactionEstimate'
      responses:
        201:
          $ref: '#/components/responses/GetEvmMultiTransactionEstimateSuccess'

  /v1/evm/chains/{chainId}/quotes:
    post:
      operationId: GetEvmTransactionQuote
      parameters:
        - $ref: '#/components/parameters/ChainId'
      requestBody:
        $ref: '#/components/requestBodies/GetEvmTransactionQuote'
      responses:
        201:
          $ref: '#/components/responses/GetEvmTransactionQuoteSuccess'

  /v1/evm/chains/{chainId}/quotes/{quoteId}/unsigned:
    get:
      operationId: GetUnsignedEvmTransaction
      parameters:
        - $ref: '#/components/parameters/ChainId'
        - $ref: '#/components/parameters/QuoteId'
        - $ref: '#/components/parameters/PriorityId'
      responses:
        200:
          $ref: '#/components/responses/GetUnsignedEvmTransactionSuccess'

  /v1/evm/chains/{chainId}/multi-quotes:
    post:
      operationId: GetEvmMultiTransactionQuote
      parameters:
        - $ref: '#/components/parameters/ChainId'
      requestBody:
        $ref: '#/components/requestBodies/GetEvmMultiTransactionQuote'
      responses:
        201:
          $ref: '#/components/responses/GetEvmMultiTransactionQuoteSuccess'

  /v1/evm/chains/{chainId}/multi-quotes/{quoteId}/unsigned:
    get:
      operationId: GetUnsignedEvmMultiTransaction
      parameters:
        - $ref: '#/components/parameters/ChainId'
        - $ref: '#/components/parameters/QuoteId'
        - $ref: '#/components/parameters/PriorityId'
      responses:
        200:
          $ref: '#/components/responses/GetUnsignedEvmMultiTransactionSuccess'

  /v1/evm/chains/{chainId}/broadcasts:
    post:
      operationId: BroadcastEvmTransaction
      parameters:
        - $ref: '#/components/parameters/ChainId'
      requestBody:
        $ref: '#/components/requestBodies/BroadcastEvmTransaction'
      responses:
        201:
          $ref: '#/components/responses/BroadcastEvmTransactionSuccess'

components:
  parameters:
    CoinIds:
      name: coins
      in: query
      schema:
        type: string
    ChainId:
      name: chainId
      in: path
      schema:
        $ref: '#/components/schemas/BigIntInput'
    ChainName:
      name: chainName
      in: path
      schema:
        type: string
    AddressChain:
      name: addressChain
      in: query
      schema:
        type: string
    FilterChain:
      name: filterChain
      in: query
      schema:
        type: string
    Category:
      name: category
      in: query
      schema:
        type: string
    Search:
      name: search
      in: query
      schema:
        type: string
    Page:
      name: page
      in: query
      schema:
        type: number
    PerPage:
      name: perPage
      in: query
      schema:
        type: number
    SortDirection:
      name: sort
      in: query
      schema:
        $ref: '#/components/schemas/SortDirection'
    WebTokensTableSort:
      name: sort
      in: query
      schema:
        $ref: '#/components/schemas/WebTokensTableSort'
    ChainNames:
      name: chains
      in: query
      schema:
        type: string
    AumAddressType:
      name: type
      in: query
      schema:
        type: string
    AumAddressPlatform:
      name: platform
      in: query
      schema:
        type: string
    EvmHash:
      in: path
      name: txHash
      schema:
        $ref: '#/components/schemas/EvmHashInput'
    QuoteId:
      in: path
      name: quoteId
      schema:
        $ref: '#/components/schemas/UUID'
    PriorityId:
      in: query
      name: priority
      schema:
        $ref: '#/components/schemas/FeePriority'
    BtcAddress:
      in: path
      name: btcAddress
      schema:
        $ref: '#/components/schemas/BtcAddressInput'
    BtcAddresses:
      in: query
      name: addresses
      schema:
        type: string
    BtcTransactionId:
      in: path
      name: txid
      schema:
        $ref: '#/components/schemas/BtcTransactionIdInput'
    EvmAddress:
      in: path
      name: address
      schema:
        $ref: '#/components/schemas/EvmAddressInput'
    EvmContractAddress:
      in: path
      name: contract
      schema:
        $ref: '#/components/schemas/EvmAddressInput'
    Address:
      in: path
      name: address
      schema:
        $ref: '#/components/schemas/AnyAddressInput'

  requestBodies:
    # TODO:
    # GetEvmSwapEstimate:
    #   required: true
    #   content:
    #     application/json:
    #       schema:
    #         $ref: '#/components/schemas/GetEvmSwapEstimateRequest'

    # TODO:
    # GetEvmSwapQuote:
    #   required: true
    #   content:
    #     application/json:
    #       schema:
    #         $ref: '#/components/schemas/GetEvmSwapQuoteRequest'

    GetEvmTransactionEstimate:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEvmTransactionEstimateRequest'

    GetEvmMultiTransactionEstimate:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEvmMultiTransactionEstimateRequest'

    GetEvmTransactionQuote:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEvmTransactionQuoteRequest'

    GetEvmMultiTransactionQuote:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEvmMultiTransactionQuoteRequest'

    BroadcastEvmTransaction:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BroadcastEvmTransactionRequest'

    GetBtcTransactionEstimate:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBtcTransactionEstimateRequest'

    GetBtcTransactionQuote:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBtcTransactionQuoteRequest'

    BroadcastBtcTransaction:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BroadcastBtcTransactionRequest'

  responses:
    GetRootSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetRootResponse'

    GetHealthSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetHealthResponse'

    GetVersionSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetVersionResponse'

    GetSchemaYAMLSuccess:
      content:
        application/yaml:
          schema:
            $ref: '#/components/schemas/GetSchemaYAMLResponse'

    GetSchemaJSONSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetSchemaJSONResponse'

    GetPubkeySuccess:
      content:
        text/plain:
          schema:
            $ref: '#/components/schemas/GetPubkeyResponse'

    GetChainMetadaListSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetChainMetadataListResponse'

    GetChainMetadataSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetChainMetadataResponse'

    GetWebTrendingTokensSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetWebTrendingTokensResponse'

    GetWebTokensTableSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetWebTokensTableResponse'

    GetWebTokensWatchlistSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetWebTokensWatchlistResponse'

    GetWebTopGainersSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetWebTopGainersResponse'

    GetCoinGeckoChainPreviewSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCoinGeckoChainPreviewResponse'

    GetCoinGeckoAllMarketDataSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCoinGeckoAllMarketDataResponse'

    GetBalancesByChainNameAndAddressSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBalancesByChainNameAndAddressResponse'

    GetTokenBalancesByChainNamesAndAddressSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetTokenBalancesByChainNamesAndAddressResponse'

    GetBtcTransactionStatusSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBtcTransactionStatusResponse'

    GetBtcTransactionSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBtcTransactionResponse'

    GetBtcBalanceByChainNameAndAddressesSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBtcBalanceByChainNameAndAddressesResponse'

    GetBtcBalanceByChainNameAndAddressSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBtcBalanceByChainNameAndAddressResponse'

    GetBtcTransactionFeesSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBtcTransactionFeesResponse'

    GetBtcTransactionEstimateSuccess:
      headers:
        X-MEW-API-Signature:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBtcTransactionEstimateResponse'

    GetBtcTransactionQuoteSuccess:
      headers:
        X-MEW-API-Signature:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBtcTransactionQuoteResponse'

    GetUnsignedBtcTransactionSuccess:
      headers:
        X-MEW-API-Signature:
          schema:
            type: string
        X-MEW-API-Timestamp:
          schema:
            $ref: '#/components/schemas/ISO8601'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetUnsignedBtcTransactionResponse'

    BroadcastBtcTransactionSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BroadcastBtcTransactionResponse'

    GetErc20ContractMetadataSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetErc20ContractMetadataResponse'

    GetErc20AddressBalanceSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetErc20AddressBalanceResponse'

    GetErc721ContractMetadataSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetErc721ContractMetadataResponse'

    GetEvmTransactionStatusSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEvmTransactionStatusResponse'

    GetEvmTransactionSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEvmTransactionResponse'

    # TODO:
    # GetEvmSwapEstimateSuccess:
    #   headers:
    #     X-MEW-API-Signature:
    #       schema:
    #         type: string
    #   content:
    #     application/json:
    #       schema:
    #         $ref: '#/components/schemas/GetEvmSwapEstimateResponse'

    # TODO:
    # GetEvmSwapQuoteSuccess:
    #   headers:
    #     X-MEW-API-Signature:
    #       schema:
    #         type: string
    #   content:
    #     application/json:
    #       schema:
    #         $ref: '#/components/schemas/GetEvmSwapQuoteResponse'

    # TODO:
    # GetUnsignedEvmSwapTransactionSuccess:
    #   headers:
    #     X-MEW-API-Signature:
    #       schema:
    #         type: string
    #   content:
    #     application/json:
    #       schema:
    #         $ref: '#/components/schemas/GetUnsignedEvmSwapTransactionResponse'

    GetEvmTransactionEstimateSuccess:
      headers:
        X-MEW-API-Signature:
          schema:
            type: string
        X-MEW-API-Timestamp:
          schema:
            $ref: '#/components/schemas/ISO8601'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEvmTransactionEstimateResponse'

    GetEvmMultiTransactionEstimateSuccess:
      headers:
        X-MEW-API-Signature:
          schema:
            type: string
        X-MEW-API-Timestamp:
          schema:
            $ref: '#/components/schemas/ISO8601'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEvmMultiTransactionEstimateResponse'

    GetEvmTransactionQuoteSuccess:
      headers:
        X-MEW-API-Signature:
          schema:
            type: string
        X-MEW-API-Timestamp:
          schema:
            $ref: '#/components/schemas/ISO8601'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEvmTransactionQuoteResponse'

    GetEvmMultiTransactionQuoteSuccess:
      headers:
        X-MEW-API-Signature:
          schema:
            type: string
        X-MEW-API-Timestamp:
          schema:
            $ref: '#/components/schemas/ISO8601'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEvmMultiTransactionQuoteResponse'

    GetUnsignedEvmTransactionSuccess:
      headers:
        X-MEW-API-Signature:
          schema:
            type: string
        X-MEW-API-Timestamp:
          schema:
            $ref: '#/components/schemas/ISO8601'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetUnsignedEvmTransactionResponse'

    GetUnsignedEvmMultiTransactionSuccess:
      headers:
        X-MEW-API-Signature:
          schema:
            type: string
        X-MEW-API-Timestamp:
          schema:
            $ref: '#/components/schemas/ISO8601'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetUnsignedEvmMultiTransactionResponse'

    BroadcastEvmTransactionSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BroadcastEvmTransactionResponse'

  schemas:
    # Input primitives
    BigIntInput:
      type: string
      # Patterns:
      # - 0x[0-9a-fA-F]+
      # - [0-9]+
    EvmAddressInput:
      type: string
      pattern: '^((0|\\)[xX])?[0-9a-fA-F]{40}$'
    EvmHashInput:
      type: string
      pattern: '^((0|\\)[xX])?[0-9a-fA-F]{64}$'
    BtcAddressInput:
      type: string
      # Any alphanumeric string that's not too small or too big
      pattern: '^[0-9a-zA-Z]{10,100}$'
    BtcTransactionIdInput:
      type: string
      pattern: '^((0|\\)[xX])?[0-9a-fA-F]{64}$'
    AnyAddressInput:
      type: string
    ByteStringInput:
      type: string
      pattern: '^((0|\\)[xX])?([0-9a-fA-F]{2})*$'
    StringDecimalUintInput:
      type: string
      pattern: '^[0-9]+$'
    StringDecimalUint64Input:
      type: string
      pattern: '^[0-9]{1,20}$' # Requires additional validation that it's actually within uint64
    HexUintInput:
      type: string
      pattern: '^((0|\\)[xX])[0-9a-fA-F]+$'
    HexUint16Input:
      type: string
      pattern: '^((0|\\)[xX])[0-9a-fA-F]{1,4}$'
    HexUint32Input:
      type: string
      pattern: '^((0|\\)[xX])[0-9a-fA-F]{1,8}$'
    HexUint64Input:
      type: string
      pattern: '^((0|\\)[xX])[0-9a-fA-F]{1,16}$'
    HexUint256Input:
      type: string
      pattern: '^((0|\\)[xX])[0-9a-fA-F]{1,64}$'
    UUIDInput:
      type: string
      pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$

    # Output primitives
    EvmAddress:
      type: string
      pattern: '^0x[0-9a-f]{40}$'
    EvmHash:
      type: string
      pattern: '^0x[0-9a-f]{64}$'
    BtcAddress:
      type: string
      pattern: '^[0-9a-zA-Z]+$'
    ByteString:
      type: string
      pattern: '^0x([0-9a-f]{2})*$'
    HexUint:
      type: string
      pattern: '^0x[0-9a-f]+$'
    HexUint16:
      type: string
      pattern: '^0x[0-9a-f]{1,4}$'
    HexUint32:
      type: string
      pattern: '^0x[0-9a-f]{1,8}$'
    HexUint64:
      type: string
      pattern: '^0x[0-9a-f]{1,16}$'
    HexUint256:
      type: string
      pattern: '^0x[0-9a-f]{1,64}$'
    Hex:
      type: string
      pattern: '^0x[0-9a-fA-F]*$'
    UUID:
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
    ISO8601:
      type: string

    # Enums:
    # BtcSatoshiValue:
    #   type: number
    # BtcTransactionSpeed:
    #   type: string
    #   enum: ['MANUAL', 'FAST', 'ECONOMY', 'MINIMUM']
    # BtcBroadcastType:
    #   type: string
    #   enum: ['MEMPOOL', 'RPC']
    ChainType:
      type: string
      enum:
        - BITCOIN
        - EVM
        - POLKADOT
        - KADENA
        - SOLANA
    EvmTransactionAction:
      type: string
      enum:
        - TOKEN_SWAP
        - TOKEN_APPROVAL
        - TOKEN_TRANSFER

    SortDirection:
      type: string
      enum:
        - ASC
        - DESC

    WebTokensTableSort:
      type: string
      enum:
        - NAME_ASC
        - NAME_DESC
        - PRICE_ASC
        - PRICE_DESC
        - PRICE_CHANGE_PERCENTAGE_1H_ASC
        - PRICE_CHANGE_PERCENTAGE_1H_DESC
        - PRICE_CHANGE_PERCENTAGE_24H_ASC
        - PRICE_CHANGE_PERCENTAGE_24H_DESC
        - PRICE_CHANGE_PERCENTAGE_7D_ASC
        - PRICE_CHANGE_PERCENTAGE_7D_DESC
        - MARKET_CAP_ASC
        - MARKET_CAP_DESC
        - TOTAL_VOLUME_ASC
        - TOTAL_VOLUME_DESC

    # Composite types
    BtcOutputInput:
      type: object
      required:
        - address
        - amount
      properties:
        address:
          $ref: '#/components/schemas/BtcAddressInput'
        amount:
          oneOf:
            - type: number
            - $ref: '#/components/schemas/StringDecimalUint64Input'
            - $ref: '#/components/schemas/HexUint64Input'

    # BtcTransactionQuote:
    #   type: object
    #   required:
    #     - speed
    #     - feeRate
    #     - raw
    #     - psbt
    #   properties:
    #     speed:
    #       $ref: '#/components/schemas/BtcTransactionSpeed'
    #     feeRate:
    #       $ref: '#/components/schemas/BtcSatoshiValue'
    #     raw:
    #       type: object
    #       required:
    #         - fee
    #         - leftover
    #         - txHex
    #       properties:
    #         fee:
    #           $ref: '#/components/schemas/BtcSatoshiValue'
    #         leftover:
    #           $ref: '#/components/schemas/BtcSatoshiValue'
    #         txHex:
    #           type: string
    #     psbt:
    #       type: object
    #       required:
    #         - fee
    #         - leftover
    #         - psbtBase64
    #       properties:
    #         fee:
    #           $ref: '#/components/schemas/BtcSatoshiValue'
    #         leftover:
    #           $ref: '#/components/schemas/BtcSatoshiValue'
    #         psbtBase64:
    #           type: string

    ChainMetadata:
      type: object
      required:
        - name
        - nameLong
        - type
        - blockExplorerTX
        - blockExplorerAddr
        - isTestNetwork
        - currencyName
        - currencyNameLong
        - icon
      properties:
        name:
          type: string
        nameLong:
          type: string
        type:
          $ref: '#/components/schemas/ChainType'
        blockExplorerTX:
          type: string
        blockExplorerAddr:
          type: string
        chainID:
          type: string
        isTestNetwork:
          type: boolean
        currencyName:
          type: string
        currencyNameLong:
          type: string
        icon:
          type: string
        rpcUrls:
          type: array
          items:
            type: string

    AccessTuple:
      type: object
      required:
        - address
        - storageKeys
      properties:
        address:
          $ref: '#/components/schemas/EvmAddress'
        storageKeys:
          type: array
          items:
            $ref: '#/components/schemas/EvmAddress'

    AccessList:
      type: array
      items:
        $ref: '#/components/schemas/AccessTuple'

    GetRootResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string

    GetHealthResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string

    GetVersionResponse:
      type: object
      required:
        - version
      properties:
        version:
          type: string

    GetSchemaYAMLResponse:
      type: string

    GetSchemaJSONResponse:
      type: object
      additionalProperties: true

    GetPubkeyResponse:
      type: string

    # ================
    # Supported chains
    # ================

    GetChainMetadataListResponse:
      type: object
      required:
        - result
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/ChainMetadata'

    GetChainMetadataResponse:
      type: object
      required:
        - result
      properties:
        result:
          $ref: '#/components/schemas/ChainMetadata'

    # ====================
    # Transaction Statuses
    # ====================

    EvmTransactionStatus:
      type: string
      enum:
        - NOT_FOUND
        - PENDING
        - SUCCESS
        - FAIL

    # TODO: Modify these statuses
    BtcTransactionStatus:
      type: string
      enum:
        - NOT_FOUND
        - PENDING
        - SUCCESS
        - FAIL

    # ========
    # Gas fees
    # ========

    FeePriority:
      type: string
      enum:
        - ECONOMY
        - REGULAR
        - FAST
        - FASTEST

    # =================================================
    # Bitcoin transaction fees
    # =================================================

    BtcTransactionFeeQuote:
      type: object
      required:
        - nativeValue
        - nativeSymbol
      properties:
        nativeSymbol:
          type: string
        nativeFeeRate:
          type: string
        nativeFeeTotal:
          type: string
        fiatSymbol:
          type: string
        fiatFeeRate:
          type: string
        fiatFeeTotal:
          type: string

    BtcTransactionFeeEstimate:
      type: object
      required:
        - nativeValue
        - nativeSymbol
      properties:
        nativeSymbol:
          type: string
        nativeFeeRate:
          type: string
        fiatSymbol:
          type: string
        fiatFeeRate:
          type: string

    BtcTransactionQuotes:
      type: object
      required:
        # - feeProvider
        - ECONOMY
        - REGULAR
        - FAST
        - FASTEST
      properties:
        # feeProvider:
        #   type: string
        ECONOMY:
          $ref: '#/components/schemas/BtcTransactionFeeQuote'
        REGULAR:
          $ref: '#/components/schemas/BtcTransactionFeeQuote'
        FAST:
          $ref: '#/components/schemas/BtcTransactionFeeQuote'
        FASTEST:
          $ref: '#/components/schemas/BtcTransactionFeeQuote'

    GetBtcTransactionFeesResponse:
      type: object
      required:
        # - provider
        - ECONOMY
        - REGULAR
        - FAST
        - FASTEST
      properties:
        # TODO: Remove this (provider)
        provider:
          type: string
        ECONOMY:
          $ref: '#/components/schemas/BtcTransactionFeeEstimate'
        REGULAR:
          $ref: '#/components/schemas/BtcTransactionFeeEstimate'
        FAST:
          $ref: '#/components/schemas/BtcTransactionFeeEstimate'
        FASTEST:
          $ref: '#/components/schemas/BtcTransactionFeeEstimate'

    # ===============================================
    # EVM (Ethereum Virtual Machine) Transaction Fees
    # ===============================================

    EvmGasFeeInfo:
      type: object
      required:
        - nativeValue
      properties:
        nativeValue:
          $ref: '#/components/schemas/HexUint'
        # TODO: Are you sure?
        fiatValue:
          $ref: '#/components/schemas/HexUint'
        nativeSymbol:
          type: string
        fiatSymbol:
          type: string

    EvmGasFees:
      type: object
      required:
        - ECONOMY
        - REGULAR
        - FAST
        - FASTEST
      properties:
        ECONOMY:
          $ref: '#/components/schemas/EvmGasFeeInfo'
        REGULAR:
          $ref: '#/components/schemas/EvmGasFeeInfo'
        FAST:
          $ref: '#/components/schemas/EvmGasFeeInfo'
        FASTEST:
          $ref: '#/components/schemas/EvmGasFeeInfo'

    # Web

    GetWebTrendingTokensResponse:
      type: object
      required:
        - page
        - pages
        - perPage
        - total
        - items
      properties:
        page:
          type: number
        pages:
          type: number
        perPage:
          type: number
        total:
          type: number
        items:
          type: array
          items:
            type: object
            required:
              - coinId
              - name
              - symbol
              - priceChangePercentage24h
              - logoUrl
            properties:
              coinId:
                type: string
              name:
                type: string
              symbol:
                type: string
              priceChangePercentage24h:
                type: number
              logoUrl:
                type: [string, 'null']

    GetWebTokensTableResponse:
      type: object
      required:
        - page
        - pages
        - perPage
        - total
        - items
      properties:
        page:
          type: number
        pages:
          type: number
        perPage:
          type: number
        total:
          type: number
        items:
          type: array
          items:
            type: object
            required:
              - coinId
              - name
              - price
              - priceChangePercentage1h
              - priceChangePercentage24h
              - priceChangePercentage7d
              - totalVolume
              - marketCap
              - address
              - logoUrl
              - sparklineIn7d
            properties:
              coinId:
                type: string
              name:
                type: string
              price:
                type: [number, 'null']
              priceChangePercentage1h:
                type: [number, 'null']
              priceChangePercentage24h:
                type: [number, 'null']
              priceChangePercentage7d:
                type: [number, 'null']
              totalVolume:
                type: [number, 'null']
              marketCap:
                type: [number, 'null']
              address:
                type: [string, 'null']
              logoUrl:
                type: [string, 'null']
              sparklineIn7d:
                oneOf:
                  - type: 'null'
                  - type: array
                    items:
                      type: number

    GetWebTokensWatchlistResponse:
      type: array
      items:
        type: object
        required:
          - coinId
          - name
          - price
          - priceChangePercentage1h
          - priceChangePercentage24h
          - priceChangePercentage7d
          - totalVolume
          - marketCap
          - address
          - logoUrl
          - sparklineIn7d
        properties:
          coinId:
            type: string
          name:
            type: string
          price:
            type: [number, 'null']
          priceChangePercentage1h:
            type: [number, 'null']
          priceChangePercentage24h:
            type: [number, 'null']
          priceChangePercentage7d:
            type: [number, 'null']
          totalVolume:
            type: [number, 'null']
          marketCap:
            type: [number, 'null']
          address:
            type: [string, 'null']
          logoUrl:
            type: [string, 'null']
          sparklineIn7d:
            oneOf:
              - type: 'null'
              - type: array
                items:
                  type: number

    GetWebTopGainersResponse:
      type: object
      required:
        - page
        - pages
        - perPage
        - total
        - items
      properties:
        page:
          type: number
        pages:
          type: number
        perPage:
          type: number
        total:
          type: number
        items:
          type: array
          items:
            type: object
            required:
              - coinId
              - name
              - symbol
              - price
              - priceChangePercentage24h
              - logoUrl
            properties:
              coinId:
                type: string
              name:
                type: string
              symbol:
                type: string
              price:
                type: number
              priceChangePercentage24h:
                type: number
              logoUrl:
                type: [string, 'null']

    # CoinGecko

    GetCoinGeckoChainPreviewResponse:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          symbol:
            type: string
          fiatPrice:
            type: number
          fiatSymbol:
            type: string

    GetCoinGeckoAllMarketDataResponse:
      type: array
      items:
        type: object
        required:
          - coinId
        properties:
          coinId:
            type: string
          currentPrice:
            type: number
          marketCap:
            type: number
          marketCapRank:
            type: number
          fullyDilutedValuation:
            type: number
          totalVolume:
            type: number
          high24h:
            type: number
          low24h:
            type: number
          priceChange24h:
            type: number
          priceChangePercentage24h:
            type: number
          marketCapChange24h:
            type: number
          marketCapChangePercentage24h:
            type: number
          circulatingSupply:
            type: number
          totalSupply:
            type: number
          maxSupply:
            type: number
          ath:
            type: number
          athChangePercentage:
            type: number
          athDate:
            $ref: '#/components/schemas/ISO8601'
          atl:
            type: number
          atlChangePercentage:
            type: number
          atlDate:
            $ref: '#/components/schemas/ISO8601'
          roiTimes:
            type: number
          roiCurrency:
            type: string
          roiPercentage:
            type: number
          lastUpdated:
            $ref: '#/components/schemas/ISO8601'
          priceChangePercentage14dInCurrency:
            type: number
          priceChangePercentage1hInCurrency:
            type: number
          priceChangePercentage1yInCurrency:
            type: number
          priceChangePercentage200dInCurrency:
            type: number
          priceChangePercentage24hInCurrency:
            type: number
          priceChangePercentage7dInCurrency:
            type: number
          priceChangePercentage30dInCurrency:
            type: number
          sparklineIn7d:
            type: array
            items:
              type: number

    # ========
    # Balances
    # ========

    GetBalancesByChainNameAndAddressResponse:
      type: object
      required:
        - result
      properties:
        result:
          type: array
          items:
            type: object
            required:
              - contract
              - balance
            properties:
              balance:
                type: string
              contract:
                type: string
              decimals:
                type: number
              logo_url:
                type: string
              name:
                type: string
              price:
                type: number
              symbol:
                type: string

    GetTokenBalancesByChainNamesAndAddressResponse:
      type: array
      items:
        type: object
        required:
          - chainId
          - chainName
          - includesTokens
          - balances
        properties:
          chainId:
            $ref: '#/components/schemas/HexUint'
          chainName:
            type: string
          includesTokens:
            type: boolean
          balances:
            type: array
            items:
              type: object
              required:
                - contract
                - nativeValue
              properties:
                contract:
                  type: string
                name:
                  type: string
                decimals:
                  type: number
                priceFiatPerNative:
                  type: number
                logoUrl:
                  type: string
                nativeSymbol:
                  type: string
                nativeValue:
                  $ref: '#/components/schemas/HexUint'
                fiatSymbol:
                  type: string
                fiatValue:
                  type: number

    BtcBalance:
      type: object
      required:
        - nativeValue
        - nativeSymbol
      properties:
        nativeValue:
          type: string
        fiatValue:
          type: string
        nativeSymbol:
          type: string
        fiatSymbol:
          type: string
        # logoUrl:
        #   type: string

    BtcAddressWithBalance:
      type: object
      required:
        - address
        - balance
      properties:
        address:
          $ref: '#/components/schemas/BtcAddress'
        balance:
          $ref: '#/components/schemas/BtcBalance'

    GetBtcBalanceByChainNameAndAddressesResponse:
      type: array
      items:
        $ref: '#/components/schemas/BtcAddressWithBalance'

    GetBtcBalanceByChainNameAndAddressResponse:
      $ref: '#/components/schemas/BtcAddressWithBalance'

    # ===========================================
    # EVM (Ethereum Virtual Machine) Swaps
    # ===========================================

    # TODO:
    # GetEvmSwapEstimateRequest:
    #   type: object
    #   # required:
    #   properties:
    #     TODO:
    #       type: string

    # TODO:
    # GetEvmSwapQuoteRequest:
    #   type: object
    #   required:
    #     - srcToken
    #     - srcAmount
    #     - dstToken
    #     - slippageBps
    #     - fromAddress
    #     - toAddress
    #   properties:
    #     srcToken:
    #       type: string
    #     srcAmount:
    #       type: string
    #     dstToken:
    #       type: string
    #     slippageBps:
    #       type: number
    #     fromAddress:
    #       type: string
    #     toAddress:
    #       type: string
    #     # toChainId:
    #     #   type: string

    # ===========================================
    # EVM (Ethereum Virtual Machine) Transactions
    # ===========================================

    GetEvmTransactionEstimateRequest:
      type: object
      required:
        - address
        - to
        - value
        - data
      properties:
        address:
          $ref: '#/components/schemas/EvmAddressInput'
        to:
          oneOf:
            - $ref: '#/components/schemas/EvmAddressInput'
            - type: 'null'
        value:
          $ref: '#/components/schemas/HexUintInput'
        data:
          $ref: '#/components/schemas/ByteStringInput'
        accessList:
          $ref: '#/components/schemas/AccessList'

    GetEvmMultiTransactionEstimateRequest:
      type: array
      minItems: 1
      maxItems: 10
      items:
        type: object
        required:
          - action
          - address
          - to
          - value
          - data
        properties:
          action:
            $ref: '#/components/schemas/EvmTransactionAction'
          address:
            $ref: '#/components/schemas/EvmAddressInput'
          to:
            oneOf:
              - $ref: '#/components/schemas/EvmAddressInput'
              - type: 'null'
          value:
            $ref: '#/components/schemas/HexUintInput'
          data:
            $ref: '#/components/schemas/ByteStringInput'
          accessList:
            $ref: '#/components/schemas/AccessList'

    GetEvmTransactionQuoteRequest:
      type: object
      required:
        - address
        - to
        - value
        - data
      properties:
        address:
          $ref: '#/components/schemas/EvmAddressInput'
        to:
          oneOf:
            - $ref: '#/components/schemas/EvmAddressInput'
            - type: 'null'
        value:
          $ref: '#/components/schemas/HexUintInput'
        data:
          $ref: '#/components/schemas/ByteStringInput'
        accessList:
          $ref: '#/components/schemas/AccessList'

    GetEvmMultiTransactionQuoteRequest:
      type: array
      minItems: 1
      maxItems: 10
      items:
        type: object
        required:
          - action
          - address
          - to
          - value
          - data
        properties:
          action:
            $ref: '#/components/schemas/EvmTransactionAction'
          address:
            $ref: '#/components/schemas/EvmAddressInput'
          to:
            oneOf:
              - $ref: '#/components/schemas/EvmAddressInput'
              - type: 'null'
          value:
            $ref: '#/components/schemas/HexUintInput'
          data:
            $ref: '#/components/schemas/ByteStringInput'
          accessList:
            $ref: '#/components/schemas/AccessList'

    # ====================
    # EVM Transactions
    # ====================

    GetErc20ContractMetadataResponse:
      type: object
      required:
        - name
        - symbol
        - decimals
      properties:
        name:
          type: string
        symbol:
          type: string
        decimals:
          type: number

    GetErc20AddressBalanceResponse:
      type: object
      required:
        - nativeValue
      properties:
        name:
          type: string
        decimals:
          type: number
        priceFiatPerNative:
          type: number
        nativeSymbol:
          type: string
        nativeValue:
          $ref: '#/components/schemas/HexUint'
        fiatSymbol:
          type: string
        fiatValue:
          type: number

    GetErc721ContractMetadataResponse:
      type: object
      required:
        - name
        - symbol
      properties:
        name:
          type: string
        symbol:
          type: string

    GetEvmTransactionStatusResponse:
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/EvmTransactionStatus'

    GetEvmTransactionResponse:
      type: object
      properties:
        TODO:
          type: string

    # TODO:
    # GetEvmSwapEstimateResponse:
    #   type: object
    #   required: []
    #   properties:
    #     TODO:
    #       type: string

    # TODO:
    # GetEvmSwapQuoteResponse:
    #   type: object
    #   required: []
    #   properties:
    #     TODO:
    #       type: string

    # TODO:
    # GetUnsignedEvmSwapTransactionResponse:
    #   type: object
    #   required: []
    #   properties:
    #     TODO:
    #       type: string

    GetEvmTransactionEstimateResponse:
      type: object
      required:
        - fees
      properties:
        fees:
          $ref: '#/components/schemas/EvmGasFees'

    GetEvmMultiTransactionEstimateResponse:
      type: object
      required:
        - fees
      properties:
        fees:
          $ref: '#/components/schemas/EvmGasFees'

    GetEvmTransactionQuoteResponse:
      type: object
      required:
        - quoteId
        - fees
      properties:
        quoteId:
          $ref: '#/components/schemas/UUID'
        fees:
          $ref: '#/components/schemas/EvmGasFees'

    GetEvmMultiTransactionQuoteResponse:
      type: object
      required:
        - quoteId
        - fees
      properties:
        quoteId:
          $ref: '#/components/schemas/UUID'
        fees:
          $ref: '#/components/schemas/EvmGasFees'

    GetUnsignedEvmTransactionResponse:
      type: object
      required:
        - serialized
      properties:
        serialized:
          $ref: '#/components/schemas/ByteString'

    GetUnsignedEvmMultiTransactionResponse:
      type: object
      required:
        - serialized
      properties:
        serialized:
          type: array
          items:
            $ref: '#/components/schemas/ByteString'

    BroadcastEvmTransactionRequest:
      type: object
      required:
        - signedTransaction
      properties:
        signedTransaction:
          $ref: '#/components/schemas/ByteStringInput'

    BroadcastEvmTransactionResponse:
      type: object
      required:
        - txHash
      properties:
        txHash:
          type: string

    # ====================
    # Bitcoin Transactions
    # ====================

    GetBtcTransactionStatusResponse:
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/BtcTransactionStatus'

    BtcOutput2:
      type: object
      required:
        - scriptPubkey
        - value
      properties:
        scriptPubkey:
          type: string
        value: # Decimal number
          type: string

    GetBtcTransactionResponse:
      type: object
      required:
        - txid
        - fee
        - outputs
      properties:
        txid:
          type: string
        fee:
          type: string
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/BtcOutput2'
        block:
          type: object
          properties:
            height:
              type: string
            # position:
            #   type: string

    GetBtcTransactionEstimateRequest:
      type: object
      required:
        - fromAddresses
      properties:
        doNotFilterOutOrdinals:
          type: boolean
        allowSendingDust:
          type: boolean
        changeAddress:
          $ref: '#/components/schemas/BtcAddressInput'
        consolidationAddress:
          $ref: '#/components/schemas/BtcAddressInput'
        fromAddresses:
          minItems: 1
          maxItems: 255
          type: array
          items:
            $ref: '#/components/schemas/BtcAddressInput'
        outputs:
          type: array
          minItems: 0
          maxItems: 255
          items:
            $ref: '#/components/schemas/BtcOutputInput'

    GetBtcTransactionQuoteRequest:
      type: object
      required:
        - fromAddresses
      properties:
        doNotFilterOutOrdinals:
          type: boolean
        allowSendingDust:
          type: boolean
        changeAddress:
          $ref: '#/components/schemas/BtcAddressInput'
        consolidationAddress:
          $ref: '#/components/schemas/BtcAddressInput'
        fromAddresses:
          minItems: 1
          maxItems: 255
          type: array
          items:
            $ref: '#/components/schemas/BtcAddressInput'
        outputs:
          type: array
          minItems: 0
          maxItems: 255
          items:
            $ref: '#/components/schemas/BtcOutputInput'

    GetBtcTransactionEstimateResponse:
      type: object
      required:
        - fees
        - ordinalsFilteredOut
      properties:
        quoteId:
          $ref: '#/components/schemas/UUID'
        fees:
          $ref: '#/components/schemas/BtcTransactionQuotes'
        ordinalsFilteredOut:
          type: boolean

    GetBtcTransactionQuoteResponse:
      type: object
      required:
        - quoteId
        - fees
        - ordinalsFilteredOut
      properties:
        quoteId:
          $ref: '#/components/schemas/UUID'
        fees:
          $ref: '#/components/schemas/BtcTransactionQuotes'
        ordinalsFilteredOut:
          type: boolean

    GetUnsignedBtcTransactionResponse:
      type: object
      required:
        - serialized
        - ordinalsFilteredOut
      properties:
        serialized:
          $ref: '#/components/schemas/ByteString'
        ordinalsFilteredOut:
          type: boolean

    BroadcastBtcTransactionRequest:
      type: object
      required:
        - signedTransaction
      properties:
        # Hex string
        signedTransaction:
          type: string

    BroadcastBtcTransactionResponse:
      type: object
      required:
        - txid
      properties:
        txid:
          type: string
