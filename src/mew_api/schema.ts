/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/get": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetRoot"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetHealth"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/version": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetVersion"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/schema": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetSchema"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/schema.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetSchemaJSON"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/schema.yml": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetSchemaYML"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/schema.yaml": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetSchemaYAML"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pubkey": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetPubkey"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/chains": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetChainMetadataList"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/chains/{chainName}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetChainMetadata"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/balances/{chainName}/{address}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetBalancesByChainNameAndAddress"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/bitcoin/{chainName}/balances/{address}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetBitcoinBalanceByChainNameAndAddress"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/bitcoin/{chainName}/transactions/fees": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetBitcoinTransactionFees"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/bitcoin/{chainName}/transactions/quote": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["GetBitcoinTransactionQuote"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/bitcoin/{chainName}/transactions/construct": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["ConstructBitcoinTransaction"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/bitcoin/{chainName}/transactions/broadcast": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["BroadcastBitcoinTransaction"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/bitcoin/transactions/quote": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["BitcoinPostTransactionQuote"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/bitcoin/transactions/broadcast": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["BitcoinPostTransactionBroadcast"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/evm/{chainId}/transactions/quote": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["GetEvmTransactionQuote"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/evm/{chainId}/transactions/construct": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["ConstructEvmTransaction"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/evm/{chainId}/transactions/broadcast": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["BroadcastEvmTransaction"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        BigIntInput: string;
        EvmAddressInput: string;
        BitcoinAddressInput: string;
        AnyAddressInput: string;
        BitcoinSatoshiValue: number;
        /** @enum {string} */
        BitcoinTransactionSpeed: "MANUAL" | "FAST" | "ECONOMY" | "MINIMUM";
        /** @enum {string} */
        BitcoinBroadcastType: "MEMPOOL" | "RPC";
        ByteStringInput: string;
        StringDecimalUintInput: string;
        StringDecimalUint64Input: string;
        HexUintInput: string;
        HexUint16Input: string;
        HexUint32Input: string;
        HexUint64Input: string;
        HexUint256Input: string;
        UUIDInput: string;
        EvmAddress: string;
        BitcoinAddress: string;
        ByteString: string;
        HexUint: string;
        HexUint16: string;
        HexUint32: string;
        HexUint64: string;
        HexUint256: string;
        Hex: string;
        UUID: string;
        ISO8601: string;
        BitcoinOutput: {
            address: components["schemas"]["BitcoinAddress"];
            value: components["schemas"]["BitcoinSatoshiValue"];
        };
        BitcoinTransactionQuote: {
            speed: components["schemas"]["BitcoinTransactionSpeed"];
            feeRate: components["schemas"]["BitcoinSatoshiValue"];
            raw: {
                fee: components["schemas"]["BitcoinSatoshiValue"];
                leftover: components["schemas"]["BitcoinSatoshiValue"];
                txHex: string;
            };
            psbt: {
                fee: components["schemas"]["BitcoinSatoshiValue"];
                leftover: components["schemas"]["BitcoinSatoshiValue"];
                psbtBase64: string;
            };
        };
        ChainMetadata: {
            name: string;
            nameLong: string;
            type: string;
            blockExplorerTX: string;
            blockExplorerAddr: string;
            chainID?: string;
            isTestNetwork: boolean;
            currencyName: string;
            currencyNameLong: string;
            icon: string;
        };
        AccessTuple: {
            address: components["schemas"]["EvmAddress"];
            storageKeys: components["schemas"]["EvmAddress"][];
        };
        AccessList: components["schemas"]["AccessTuple"][];
        GetRootResponse: {
            message: string;
        };
        GetHealthResponse: {
            message: string;
        };
        GetVersionResponse: {
            version: string;
        };
        GetSchemaYAMLResponse: string;
        GetSchemaJSONResponse: {
            [key: string]: unknown;
        };
        GetPubkeyResponse: string;
        GetChainMetadataListResponse: {
            result: components["schemas"]["ChainMetadata"][];
        };
        GetChainMetadataResponse: {
            result: components["schemas"]["ChainMetadata"];
        };
        /** @enum {string} */
        FeePriority: "ECONOMY" | "REGULAR" | "FAST" | "FASTEST";
        BitcoinAmount: {
            nativeValue: string;
            fiatValue?: string;
            nativeSymbol: string;
            fiatSymbol?: string;
        };
        BitcoinTransactionFees: {
            ECONOMY: components["schemas"]["BitcoinAmount"];
            REGULAR: components["schemas"]["BitcoinAmount"];
            FAST: components["schemas"]["BitcoinAmount"];
            FASTEST: components["schemas"]["BitcoinAmount"];
        };
        GetBitcoinTransactionFeesResponse: {
            provider: string;
            ECONOMY: components["schemas"]["BitcoinAmount"];
            REGULAR: components["schemas"]["BitcoinAmount"];
            FAST: components["schemas"]["BitcoinAmount"];
            FASTEST: components["schemas"]["BitcoinAmount"];
        };
        EvmGasFeeInfo: {
            nativeValue: components["schemas"]["HexUint"];
            fiatValue?: components["schemas"]["HexUint"];
            nativeSymbol: string;
            fiatSymbol?: string;
        };
        EvmGasFees: {
            ECONOMY: components["schemas"]["EvmGasFeeInfo"];
            REGULAR: components["schemas"]["EvmGasFeeInfo"];
            FAST: components["schemas"]["EvmGasFeeInfo"];
            FASTEST: components["schemas"]["EvmGasFeeInfo"];
        };
        GetBalancesByChainNameAndAddressResponse: {
            result: {
                balance: string;
                contract: string;
                decimals?: number;
                logo_url?: string;
                name?: string;
                price?: number;
                symbol?: string;
            }[];
        };
        GetBitcoinBalanceByChainNameAndAddressResponse: {
            result: {
                nativeValue: string;
                fiatValue?: string;
                nativeSymbol: string;
                fiatSymbol?: string;
                logoUrl?: string;
            };
        };
        GetEvmTransactionQuoteRequest: {
            address: components["schemas"]["EvmAddressInput"];
            to: components["schemas"]["EvmAddressInput"] | null;
            value: components["schemas"]["HexUintInput"];
            data: components["schemas"]["ByteStringInput"];
            accessList?: components["schemas"]["AccessList"];
        };
        GetEvmTransactionQuoteResponse: {
            transactionId: components["schemas"]["UUID"];
            fees: components["schemas"]["EvmGasFees"];
        };
        ConstructEvmTransactionRequest: {
            transactionId: components["schemas"]["UUIDInput"];
            priority: components["schemas"]["FeePriority"];
        };
        ConstructEvmTransactionResponse: {
            serialized: components["schemas"]["ByteString"];
        };
        BroadcastEvmTransactionRequest: {
            signedTransaction: components["schemas"]["ByteStringInput"];
        };
        BroadcastEvmTransactionResponse: {
            message: string;
        };
        GetBitcoinTransactionQuoteRequest: {
            changeAddress: components["schemas"]["BitcoinAddressInput"];
            fromAddresses: components["schemas"]["BitcoinAddressInput"][];
            outputs: {
                address: components["schemas"]["BitcoinAddressInput"];
                amount: number | components["schemas"]["StringDecimalUint64Input"] | components["schemas"]["HexUint64Input"];
            }[];
        };
        GetBitcoinTransactionQuoteResponse: {
            transactionId: components["schemas"]["UUID"];
            fees: components["schemas"]["BitcoinTransactionFees"];
        };
        ConstructBitcoinTransactionRequest: {
            transactionId: components["schemas"]["UUIDInput"];
            priority: components["schemas"]["FeePriority"];
        };
        ConstructBitcoinTransactionResponse: {
            serialized: components["schemas"]["ByteString"];
        };
        BroadcastBitcoinTransactionRequest: {
            signedTransaction: string;
        };
        BroadcastBitcoinTransactionResponse: {
            txid: string;
        };
        BitcoinPostTransactionQuoteRequest: {
            fromAddresses: components["schemas"]["BitcoinAddress"][];
            outputs: components["schemas"]["BitcoinOutput"][];
            changeAddress?: components["schemas"]["BitcoinAddress"];
            feeRate?: components["schemas"]["BitcoinSatoshiValue"];
        };
        BitcoinPostTransactionQuoteResponse: components["schemas"]["BitcoinTransactionQuote"][];
        BitcoinPostTransactionBroadcastRequest: {
            rawTxHex: string;
            broadcastType?: components["schemas"]["BitcoinBroadcastType"];
        };
        BitcoinPostTransactionBroadcastResponse: {
            message: string;
        };
    };
    responses: {
        GetRootSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetRootResponse"];
            };
        };
        GetHealthSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetHealthResponse"];
            };
        };
        GetVersionSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetVersionResponse"];
            };
        };
        GetSchemaYAMLSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/yaml": components["schemas"]["GetSchemaYAMLResponse"];
            };
        };
        GetSchemaJSONSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetSchemaJSONResponse"];
            };
        };
        GetPubkeySuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "text/plain": components["schemas"]["GetPubkeyResponse"];
            };
        };
        GetChainMetadaListSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetChainMetadataListResponse"];
            };
        };
        GetChainMetadataSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetChainMetadataResponse"];
            };
        };
        GetBalancesByChainNameAndAddressSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetBalancesByChainNameAndAddressResponse"];
            };
        };
        GetBitcoinBalanceByChainNameAndAddressSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetBitcoinBalanceByChainNameAndAddressResponse"];
            };
        };
        GetBitcoinTransactionFeesSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetBitcoinTransactionFeesResponse"];
            };
        };
        GetBitcoinTransactionQuoteSuccess: {
            headers: {
                "X-MEW-API-Signature"?: string;
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetBitcoinTransactionQuoteResponse"];
            };
        };
        ConstructBitcoinTransactionSuccess: {
            headers: {
                "X-MEW-API-Signature"?: string;
                "X-MEW-API-Timestamp"?: components["schemas"]["ISO8601"];
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["ConstructBitcoinTransactionResponse"];
            };
        };
        BroadcastBitcoinTransactionSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["BroadcastBitcoinTransactionResponse"];
            };
        };
        GetEvmTransactionQuoteSuccess: {
            headers: {
                "X-MEW-API-Signature"?: string;
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetEvmTransactionQuoteResponse"];
            };
        };
        ConstructEvmTransactionSuccess: {
            headers: {
                "X-MEW-API-Signature"?: string;
                "X-MEW-API-Timestamp"?: components["schemas"]["ISO8601"];
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["ConstructEvmTransactionResponse"];
            };
        };
        BroadcastEvmTransactionSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["BroadcastEvmTransactionResponse"];
            };
        };
        BitcoinPostTransactionQuoteSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["BitcoinPostTransactionQuoteResponse"];
            };
        };
        BitcoinPostTransactionBroadcastSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["BitcoinPostTransactionBroadcastResponse"];
            };
        };
    };
    parameters: {
        ChainId: components["schemas"]["BigIntInput"];
        ChainName: string;
        EvmAddress: components["schemas"]["EvmAddressInput"];
        Address: components["schemas"]["AnyAddressInput"];
    };
    requestBodies: {
        GetEvmTransactionQuote: {
            content: {
                "application/json": components["schemas"]["GetEvmTransactionQuoteRequest"];
            };
        };
        ConstructEvmTransaction: {
            content: {
                "application/json": components["schemas"]["ConstructEvmTransactionRequest"];
            };
        };
        BroadcastEvmTransaction: {
            content: {
                "application/json": components["schemas"]["BroadcastEvmTransactionRequest"];
            };
        };
        GetBitcoinTransactionQuote: {
            content: {
                "application/json": components["schemas"]["GetBitcoinTransactionQuoteRequest"];
            };
        };
        ConstructBitcoinTransaction: {
            content: {
                "application/json": components["schemas"]["ConstructBitcoinTransactionRequest"];
            };
        };
        BroadcastBitcoinTransaction: {
            content: {
                "application/json": components["schemas"]["BroadcastBitcoinTransactionRequest"];
            };
        };
        BitcoinPostTransactionQuoteRequestBody: {
            content: {
                "application/json": components["schemas"]["BitcoinPostTransactionQuoteRequest"];
            };
        };
        BitcoinPostTransactionBroadcastRequestBody: {
            content: {
                "application/json": components["schemas"]["BitcoinPostTransactionBroadcastRequest"];
            };
        };
    };
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    GetRoot: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetRootSuccess"];
        };
    };
    GetHealth: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetHealthSuccess"];
        };
    };
    GetVersion: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetVersionSuccess"];
        };
    };
    GetSchema: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetSchemaJSONSuccess"];
        };
    };
    GetSchemaJSON: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetSchemaJSONSuccess"];
        };
    };
    GetSchemaYML: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetSchemaYAMLSuccess"];
        };
    };
    GetSchemaYAML: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetSchemaYAMLSuccess"];
        };
    };
    GetPubkey: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetPubkeySuccess"];
        };
    };
    GetChainMetadataList: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetChainMetadaListSuccess"];
        };
    };
    GetChainMetadata: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                chainName: components["parameters"]["ChainName"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetChainMetadataSuccess"];
        };
    };
    GetBalancesByChainNameAndAddress: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                chainName: components["parameters"]["ChainName"];
                address: components["parameters"]["Address"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetBalancesByChainNameAndAddressSuccess"];
        };
    };
    GetBitcoinBalanceByChainNameAndAddress: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                chainName: components["parameters"]["ChainName"];
                address: components["parameters"]["Address"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetBitcoinBalanceByChainNameAndAddressSuccess"];
        };
    };
    GetBitcoinTransactionFees: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                chainName: components["parameters"]["ChainName"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetBitcoinTransactionFeesSuccess"];
        };
    };
    GetBitcoinTransactionQuote: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                chainName: components["parameters"]["ChainName"];
            };
            cookie?: never;
        };
        requestBody: components["requestBodies"]["GetBitcoinTransactionQuote"];
        responses: {
            200: components["responses"]["GetBitcoinTransactionQuoteSuccess"];
        };
    };
    ConstructBitcoinTransaction: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                chainName: components["parameters"]["ChainName"];
            };
            cookie?: never;
        };
        requestBody: components["requestBodies"]["ConstructBitcoinTransaction"];
        responses: {
            200: components["responses"]["ConstructBitcoinTransactionSuccess"];
        };
    };
    BroadcastBitcoinTransaction: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                chainName: components["parameters"]["ChainName"];
            };
            cookie?: never;
        };
        requestBody: components["requestBodies"]["BroadcastBitcoinTransaction"];
        responses: {
            200: components["responses"]["BroadcastBitcoinTransactionSuccess"];
        };
    };
    BitcoinPostTransactionQuote: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["BitcoinPostTransactionQuoteRequestBody"];
        responses: {
            200: components["responses"]["BitcoinPostTransactionQuoteSuccess"];
        };
    };
    BitcoinPostTransactionBroadcast: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["BitcoinPostTransactionBroadcastRequestBody"];
        responses: {
            200: components["responses"]["BitcoinPostTransactionBroadcastSuccess"];
        };
    };
    GetEvmTransactionQuote: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                chainId: components["parameters"]["ChainId"];
            };
            cookie?: never;
        };
        requestBody: components["requestBodies"]["GetEvmTransactionQuote"];
        responses: {
            200: components["responses"]["GetEvmTransactionQuoteSuccess"];
        };
    };
    ConstructEvmTransaction: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                chainId: components["parameters"]["ChainId"];
            };
            cookie?: never;
        };
        requestBody: components["requestBodies"]["ConstructEvmTransaction"];
        responses: {
            200: components["responses"]["ConstructEvmTransactionSuccess"];
        };
    };
    BroadcastEvmTransaction: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                chainId: components["parameters"]["ChainId"];
            };
            cookie?: never;
        };
        requestBody: components["requestBodies"]["BroadcastEvmTransaction"];
        responses: {
            200: components["responses"]["BroadcastEvmTransactionSuccess"];
        };
    };
}
