/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/get": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetRoot"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetHealth"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/version": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetVersion"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/schema": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetSchema"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/schema.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetSchemaJSON"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/schema.yml": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetSchemaYML"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/schema.yaml": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetSchemaYAML"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pubkey": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetPubkey"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/chains": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetChainMetadataList"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/chains/{chainName}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetChainMetadata"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/balances/{chainName}/{address}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetBalancesByChainNameAndAddress"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/btc/{chainName}/balances": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetBtcBalanceByChainNameAndAddresses"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/btc/{chainName}/balances/{address}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetBtcBalanceByChainNameAndAddress"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/btc/{chainName}/fees": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetBtcTransactionFees"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/btc/{chainName}/transactions/{transactionId}/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetBtcTransactionStatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/btc/{chainName}/transactions/{transactionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetBtcTransaction"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/btc/{chainName}/quotes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["GetBtcTransactionQuote"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/btc/{chainName}/quotes/{quoteId}/unsigned": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["ConstructBtcTransaction"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/btc/{chainName}/broadcasts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["BroadcastBtcTransaction"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/evm/{chainId}/transactions/{txHash}/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetEvmTransactionStatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/evm/{chainId}/transactions/{txHash}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetEvmTransaction"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/evm/{chainId}/quotes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["GetEvmTransactionQuote"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/evm/{chainId}/quotes/{quoteId}/unsigned": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["ConstructEvmTransaction"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/evm/{chainId}/broadcasts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["BroadcastEvmTransaction"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        BigIntInput: string;
        EvmAddressInput: string;
        EvmHashInput: string;
        BtcAddressInput: string;
        BtcTransactionIdInput: string;
        AnyAddressInput: string;
        BtcSatoshiValue: number;
        /** @enum {string} */
        BtcTransactionSpeed: "MANUAL" | "FAST" | "ECONOMY" | "MINIMUM";
        /** @enum {string} */
        BtcBroadcastType: "MEMPOOL" | "RPC";
        ByteStringInput: string;
        StringDecimalUintInput: string;
        StringDecimalUint64Input: string;
        HexUintInput: string;
        HexUint16Input: string;
        HexUint32Input: string;
        HexUint64Input: string;
        HexUint256Input: string;
        UUIDInput: string;
        EvmAddress: string;
        EvmHash: string;
        BtcAddress: string;
        ByteString: string;
        HexUint: string;
        HexUint16: string;
        HexUint32: string;
        HexUint64: string;
        HexUint256: string;
        Hex: string;
        UUID: string;
        ISO8601: string;
        BtcOutput: {
            address: components["schemas"]["BtcAddress"];
            value: components["schemas"]["BtcSatoshiValue"];
        };
        BtcTransactionQuote: {
            speed: components["schemas"]["BtcTransactionSpeed"];
            feeRate: components["schemas"]["BtcSatoshiValue"];
            raw: {
                fee: components["schemas"]["BtcSatoshiValue"];
                leftover: components["schemas"]["BtcSatoshiValue"];
                txHex: string;
            };
            psbt: {
                fee: components["schemas"]["BtcSatoshiValue"];
                leftover: components["schemas"]["BtcSatoshiValue"];
                psbtBase64: string;
            };
        };
        ChainMetadata: {
            name: string;
            nameLong: string;
            type: string;
            blockExplorerTX: string;
            blockExplorerAddr: string;
            chainID?: string;
            isTestNetwork: boolean;
            currencyName: string;
            currencyNameLong: string;
            icon: string;
        };
        AccessTuple: {
            address: components["schemas"]["EvmAddress"];
            storageKeys: components["schemas"]["EvmAddress"][];
        };
        AccessList: components["schemas"]["AccessTuple"][];
        GetRootResponse: {
            message: string;
        };
        GetHealthResponse: {
            message: string;
        };
        GetVersionResponse: {
            version: string;
        };
        GetSchemaYAMLResponse: string;
        GetSchemaJSONResponse: {
            [key: string]: unknown;
        };
        GetPubkeyResponse: string;
        GetChainMetadataListResponse: {
            result: components["schemas"]["ChainMetadata"][];
        };
        GetChainMetadataResponse: {
            result: components["schemas"]["ChainMetadata"];
        };
        /** @enum {string} */
        EvmTransactionStatus: "NOT_FOUND" | "PENDING" | "SUCCESS" | "FAIL";
        /** @enum {string} */
        BtcTransactionStatus: "NOT_FOUND" | "PENDING" | "SUCCESS" | "FAIL";
        /** @enum {string} */
        FeePriority: "ECONOMY" | "REGULAR" | "FAST" | "FASTEST";
        BtcTransactionFeeQuote: {
            nativeSymbol: string;
            nativeFeeRate?: string;
            nativeFeeTotal?: string;
            fiatSymbol?: string;
            fiatFeeRate?: string;
            fiatFeeTotal?: string;
        };
        BtcTransactionFeeEstimate: {
            nativeSymbol: string;
            nativeFeeRate?: string;
            fiatSymbol?: string;
            fiatFeeRate?: string;
        };
        BtcTransactionQuotes: {
            feeProvider: string;
            ECONOMY: components["schemas"]["BtcTransactionFeeQuote"];
            REGULAR: components["schemas"]["BtcTransactionFeeQuote"];
            FAST: components["schemas"]["BtcTransactionFeeQuote"];
            FASTEST: components["schemas"]["BtcTransactionFeeQuote"];
        };
        GetBtcTransactionFeesResponse: {
            provider: string;
            ECONOMY: components["schemas"]["BtcTransactionFeeEstimate"];
            REGULAR: components["schemas"]["BtcTransactionFeeEstimate"];
            FAST: components["schemas"]["BtcTransactionFeeEstimate"];
            FASTEST: components["schemas"]["BtcTransactionFeeEstimate"];
        };
        EvmGasFeeInfo: {
            nativeValue: components["schemas"]["HexUint"];
            fiatValue?: components["schemas"]["HexUint"];
            nativeSymbol?: string;
            fiatSymbol?: string;
        };
        EvmGasFees: {
            ECONOMY: components["schemas"]["EvmGasFeeInfo"];
            REGULAR: components["schemas"]["EvmGasFeeInfo"];
            FAST: components["schemas"]["EvmGasFeeInfo"];
            FASTEST: components["schemas"]["EvmGasFeeInfo"];
        };
        GetBalancesByChainNameAndAddressResponse: {
            result: {
                balance: string;
                contract: string;
                decimals?: number;
                logo_url?: string;
                name?: string;
                price?: number;
                symbol?: string;
            }[];
        };
        BtcBalance: {
            nativeValue: string;
            fiatValue?: string;
            nativeSymbol: string;
            fiatSymbol?: string;
        };
        BtcAddressWithBalance: {
            address: components["schemas"]["BtcAddress"];
            balance: components["schemas"]["BtcBalance"];
        };
        GetBtcBalanceByChainNameAndAddressesResponse: components["schemas"]["BtcAddressWithBalance"][];
        GetBtcBalanceByChainNameAndAddressResponse: components["schemas"]["BtcAddressWithBalance"];
        GetEvmTransactionQuoteRequest: {
            address: components["schemas"]["EvmAddressInput"];
            to: components["schemas"]["EvmAddressInput"] | null;
            value: components["schemas"]["HexUintInput"];
            data: components["schemas"]["ByteStringInput"];
            accessList?: components["schemas"]["AccessList"];
        };
        GetEvmTransactionStatusResponse: {
            status: components["schemas"]["EvmTransactionStatus"];
        };
        GetEvmTransactionResponse: {
            TODO?: string;
        };
        GetEvmTransactionQuoteResponse: {
            quoteId: components["schemas"]["UUID"];
            fees: components["schemas"]["EvmGasFees"];
        };
        ConstructEvmTransactionResponse: {
            serialized: components["schemas"]["ByteString"];
        };
        BroadcastEvmTransactionRequest: {
            signedTransaction: components["schemas"]["ByteStringInput"];
        };
        BroadcastEvmTransactionResponse: {
            txHash: string;
        };
        GetBtcTransactionStatusResponse: {
            status: components["schemas"]["BtcTransactionStatus"];
        };
        BtcOutput2: {
            scriptPubkey: string;
            value: string;
        };
        GetBtcTransactionResponse: {
            txid: string;
            fee: string;
            outputs: components["schemas"]["BtcOutput2"][];
            block?: {
                height?: string;
                position?: string;
            };
        };
        GetBtcTransactionQuoteRequest: {
            changeAddress: components["schemas"]["BtcAddressInput"];
            fromAddresses: components["schemas"]["BtcAddressInput"][];
            outputs: {
                address: components["schemas"]["BtcAddressInput"];
                amount: number | components["schemas"]["StringDecimalUint64Input"] | components["schemas"]["HexUint64Input"];
            }[];
        };
        GetBtcTransactionQuoteResponse: {
            quoteId: components["schemas"]["UUID"];
            fees: components["schemas"]["BtcTransactionQuotes"];
        };
        ConstructBtcTransactionResponse: {
            serialized: components["schemas"]["ByteString"];
        };
        BroadcastBtcTransactionRequest: {
            signedTransaction: string;
        };
        BroadcastBtcTransactionResponse: {
            txid: string;
        };
    };
    responses: {
        GetRootSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetRootResponse"];
            };
        };
        GetHealthSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetHealthResponse"];
            };
        };
        GetVersionSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetVersionResponse"];
            };
        };
        GetSchemaYAMLSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/yaml": components["schemas"]["GetSchemaYAMLResponse"];
            };
        };
        GetSchemaJSONSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetSchemaJSONResponse"];
            };
        };
        GetPubkeySuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "text/plain": components["schemas"]["GetPubkeyResponse"];
            };
        };
        GetChainMetadaListSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetChainMetadataListResponse"];
            };
        };
        GetChainMetadataSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetChainMetadataResponse"];
            };
        };
        GetBalancesByChainNameAndAddressSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetBalancesByChainNameAndAddressResponse"];
            };
        };
        GetBtcTransactionStatusSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetBtcTransactionStatusResponse"];
            };
        };
        GetBtcTransactionSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetBtcTransactionResponse"];
            };
        };
        GetBtcBalanceByChainNameAndAddressesSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetBtcBalanceByChainNameAndAddressesResponse"];
            };
        };
        GetBtcBalanceByChainNameAndAddressSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetBtcBalanceByChainNameAndAddressResponse"];
            };
        };
        GetBtcTransactionFeesSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetBtcTransactionFeesResponse"];
            };
        };
        GetBtcTransactionQuoteSuccess: {
            headers: {
                "X-MEW-API-Signature"?: string;
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetBtcTransactionQuoteResponse"];
            };
        };
        ConstructBtcTransactionSuccess: {
            headers: {
                "X-MEW-API-Signature"?: string;
                "X-MEW-API-Timestamp"?: components["schemas"]["ISO8601"];
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["ConstructBtcTransactionResponse"];
            };
        };
        BroadcastBtcTransactionSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["BroadcastBtcTransactionResponse"];
            };
        };
        GetEvmTransactionStatusSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetEvmTransactionStatusResponse"];
            };
        };
        GetEvmTransactionSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetEvmTransactionResponse"];
            };
        };
        GetEvmTransactionQuoteSuccess: {
            headers: {
                "X-MEW-API-Signature"?: string;
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["GetEvmTransactionQuoteResponse"];
            };
        };
        ConstructEvmTransactionSuccess: {
            headers: {
                "X-MEW-API-Signature"?: string;
                "X-MEW-API-Timestamp"?: components["schemas"]["ISO8601"];
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["ConstructEvmTransactionResponse"];
            };
        };
        BroadcastEvmTransactionSuccess: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["BroadcastEvmTransactionResponse"];
            };
        };
    };
    parameters: {
        ChainId: components["schemas"]["BigIntInput"];
        ChainName: string;
        EvmHash: components["schemas"]["EvmHashInput"];
        QuoteId: components["schemas"]["UUID"];
        PriorityId: components["schemas"]["FeePriority"];
        BtcAddress: components["schemas"]["BtcAddressInput"];
        BtcAddresses: string;
        BtcTransactionId: components["schemas"]["BtcTransactionIdInput"];
        EvmAddress: components["schemas"]["EvmAddressInput"];
        Address: components["schemas"]["AnyAddressInput"];
    };
    requestBodies: {
        GetEvmTransactionQuote: {
            content: {
                "application/json": components["schemas"]["GetEvmTransactionQuoteRequest"];
            };
        };
        BroadcastEvmTransaction: {
            content: {
                "application/json": components["schemas"]["BroadcastEvmTransactionRequest"];
            };
        };
        GetBtcTransactionQuote: {
            content: {
                "application/json": components["schemas"]["GetBtcTransactionQuoteRequest"];
            };
        };
        BroadcastBtcTransaction: {
            content: {
                "application/json": components["schemas"]["BroadcastBtcTransactionRequest"];
            };
        };
    };
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    GetRoot: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetRootSuccess"];
        };
    };
    GetHealth: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetHealthSuccess"];
        };
    };
    GetVersion: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetVersionSuccess"];
        };
    };
    GetSchema: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetSchemaJSONSuccess"];
        };
    };
    GetSchemaJSON: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetSchemaJSONSuccess"];
        };
    };
    GetSchemaYML: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetSchemaYAMLSuccess"];
        };
    };
    GetSchemaYAML: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetSchemaYAMLSuccess"];
        };
    };
    GetPubkey: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetPubkeySuccess"];
        };
    };
    GetChainMetadataList: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetChainMetadaListSuccess"];
        };
    };
    GetChainMetadata: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                chainName: components["parameters"]["ChainName"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetChainMetadataSuccess"];
        };
    };
    GetBalancesByChainNameAndAddress: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                chainName: components["parameters"]["ChainName"];
                address: components["parameters"]["Address"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetBalancesByChainNameAndAddressSuccess"];
        };
    };
    GetBtcBalanceByChainNameAndAddresses: {
        parameters: {
            query?: {
                addresses?: components["parameters"]["BtcAddresses"];
            };
            header?: never;
            path: {
                chainName: components["parameters"]["ChainName"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetBtcBalanceByChainNameAndAddressesSuccess"];
        };
    };
    GetBtcBalanceByChainNameAndAddress: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                chainName: components["parameters"]["ChainName"];
                btcAddress: components["parameters"]["BtcAddress"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetBtcBalanceByChainNameAndAddressSuccess"];
        };
    };
    GetBtcTransactionFees: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                chainName: components["parameters"]["ChainName"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetBtcTransactionFeesSuccess"];
        };
    };
    GetBtcTransactionStatus: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                chainName: components["parameters"]["ChainName"];
                txid: components["parameters"]["BtcTransactionId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetBtcTransactionStatusSuccess"];
        };
    };
    GetBtcTransaction: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                chainName: components["parameters"]["ChainName"];
                txid: components["parameters"]["BtcTransactionId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetBtcTransactionSuccess"];
        };
    };
    GetBtcTransactionQuote: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                chainName: components["parameters"]["ChainName"];
            };
            cookie?: never;
        };
        requestBody: components["requestBodies"]["GetBtcTransactionQuote"];
        responses: {
            201: components["responses"]["GetBtcTransactionQuoteSuccess"];
        };
    };
    ConstructBtcTransaction: {
        parameters: {
            query?: {
                priority?: components["parameters"]["PriorityId"];
            };
            header?: never;
            path: {
                chainName: components["parameters"]["ChainName"];
                quoteId: components["parameters"]["QuoteId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["ConstructBtcTransactionSuccess"];
        };
    };
    BroadcastBtcTransaction: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                chainName: components["parameters"]["ChainName"];
            };
            cookie?: never;
        };
        requestBody: components["requestBodies"]["BroadcastBtcTransaction"];
        responses: {
            201: components["responses"]["BroadcastBtcTransactionSuccess"];
        };
    };
    GetEvmTransactionStatus: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                chainId: components["parameters"]["ChainId"];
                txHash: components["parameters"]["EvmHash"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetEvmTransactionStatusSuccess"];
        };
    };
    GetEvmTransaction: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                chainId: components["parameters"]["ChainId"];
                txHash: components["parameters"]["EvmHash"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetEvmTransactionSuccess"];
        };
    };
    GetEvmTransactionQuote: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                chainId: components["parameters"]["ChainId"];
            };
            cookie?: never;
        };
        requestBody: components["requestBodies"]["GetEvmTransactionQuote"];
        responses: {
            201: components["responses"]["GetEvmTransactionQuoteSuccess"];
        };
    };
    ConstructEvmTransaction: {
        parameters: {
            query?: {
                priority?: components["parameters"]["PriorityId"];
            };
            header?: never;
            path: {
                chainId: components["parameters"]["ChainId"];
                quoteId: components["parameters"]["QuoteId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["ConstructEvmTransactionSuccess"];
        };
    };
    BroadcastEvmTransaction: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                chainId: components["parameters"]["ChainId"];
            };
            cookie?: never;
        };
        requestBody: components["requestBodies"]["BroadcastEvmTransaction"];
        responses: {
            201: components["responses"]["BroadcastEvmTransactionSuccess"];
        };
    };
}
